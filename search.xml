<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-037.A除以B]]></title>
    <url>%2F2018%2F03%2F24%2FL1-037.A%E9%99%A4%E4%BB%A5B%2F</url>
    <content type="text"><![CDATA[L1-037. A&#x9664;&#x4EE5;B&#x771F;&#x7684;&#x662F;&#x7B80;&#x5355;&#x9898;&#x54C8; &#x2014;&#x2014; &#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x7EDD;&#x5BF9;&#x503C;&#x4E0D;&#x8D85;&#x8FC7;100&#x7684;&#x6574;&#x6570;A&#x548C;B&#xFF0C;&#x8981;&#x6C42;&#x4F60;&#x6309;&#x7167;&#x201C;A/B=&#x5546;&#x201D;&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x6574;&#x6570;A&#x548C;B&#xFF08;-100 &lt;= A, B, &lt;= 100&#xFF09;&#xFF0C;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;&#x5982;&#x679C;&#x5206;&#x6BCD;&#x662F;&#x6B63;&#x6570;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;A/B=&#x5546;&#x201D;&#xFF1B;&#x5982;&#x679C;&#x5206;&#x6BCD;&#x662F;&#x8D1F;&#x6570;&#xFF0C;&#x5219;&#x8981;&#x7528;&#x62EC;&#x53F7;&#x628A;&#x5206;&#x6BCD;&#x62EC;&#x8D77;&#x6765;&#x8F93;&#x51FA;&#xFF1B;&#x5982;&#x679C;&#x5206;&#x6BCD;&#x4E3A;&#x96F6;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x7684;&#x5546;&#x5E94;&#x4E3A;&#x201C;Error&#x201D;&#x3002;&#x8F93;&#x51FA;&#x7684;&#x5546;&#x5E94;&#x4FDD;&#x7559;&#x5C0F;&#x6570;&#x70B9;&#x540E;2&#x4F4D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;-1 2 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;-1/2=-0.50 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;1 -3 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;1/(-3)=-0.33 &#x8F93;&#x5165;&#x6837;&#x4F8B;3&#xFF1A;5 0 &#x8F93;&#x51FA;&#x6837;&#x4F8B;3&#xFF1A;5/0=Error 12345678910111213141516171819202122#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main() { int a, b; cin &gt;&gt; a &gt;&gt; b; double res = (double)a / b; if (b &lt; 0) { printf(&quot;%d/(%d)=%.2f&quot;, a, b, res); } else if (b == 0) { printf(&quot;%d/0=Error&quot;, a); } else { printf(&quot;%d/%d=%.2f&quot;, a, b, res); } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-036. A乘以B]]></title>
    <url>%2F2018%2F03%2F24%2FL1-036.A%E4%B9%98%E4%BB%A5B%2F</url>
    <content type="text"><![CDATA[L1-036. A&#x4E58;&#x4EE5;B&#x770B;&#x6211;&#x6CA1;&#x9A97;&#x4F60;&#x5427; &#x2014;&#x2014; &#x8FD9;&#x662F;&#x4E00;&#x9053;&#x4F60;&#x53EF;&#x4EE5;&#x5728;10&#x79D2;&#x5185;&#x5B8C;&#x6210;&#x7684;&#x9898;&#xFF1A;&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x7EDD;&#x5BF9;&#x503C;&#x4E0D;&#x8D85;&#x8FC7;100&#x7684;&#x6574;&#x6570;A&#x548C;B&#xFF0C;&#x8F93;&#x51FA;A&#x4E58;&#x4EE5;B&#x7684;&#x503C;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x6574;&#x6570;A&#x548C;B&#xFF08;-100 &lt;= A, B, &lt;= 100&#xFF09;&#xFF0C;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;A&#x4E58;&#x4EE5;B&#x7684;&#x503C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;-8 13 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;-104 12345678910import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int a = in.nextInt(); int b = in.nextInt(); System.out.println(a * b); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-035. 情人节]]></title>
    <url>%2F2018%2F03%2F24%2FL1-035.%E6%83%85%E4%BA%BA%E8%8A%82%2F</url>
    <content type="text"><![CDATA[L1-035. &#x60C5;&#x4EBA;&#x8282;&#x4EE5;&#x4E0A;&#x662F;&#x670B;&#x53CB;&#x5708;&#x4E2D;&#x4E00;&#x5947;&#x8469;&#x8D34;&#xFF1A;&#x201C;2&#x6708;14&#x60C5;&#x4EBA;&#x8282;&#x4E86;&#xFF0C;&#x6211;&#x51B3;&#x5B9A;&#x9020;&#x798F;&#x5927;&#x5BB6;&#x3002;&#x7B2C;2&#x4E2A;&#x8D5E;&#x548C;&#x7B2C;14&#x4E2A;&#x8D5E;&#x7684;&#xFF0C;&#x6211;&#x4ECB;&#x7ECD;&#x4F60;&#x4FE9;&#x8BA4;&#x8BC6;&#x2026;&#x2026;&#x2026;&#x2026;&#x54B1;&#x4E09;&#x5403;&#x996D;&#x2026;&#x4F60;&#x4FE9;&#x8BF7;&#x2026;&#x201D;&#x3002;&#x73B0;&#x7ED9;&#x51FA;&#x6B64;&#x8D34;&#x4E0B;&#x70B9;&#x8D5E;&#x7684;&#x670B;&#x53CB;&#x540D;&#x5355;&#xFF0C;&#x8BF7;&#x4F60;&#x627E;&#x51FA;&#x90A3;&#x4E24;&#x4F4D;&#x8981;&#x8BF7;&#x5BA2;&#x7684;&#x5012;&#x9709;&#x86CB;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x6309;&#x7167;&#x70B9;&#x8D5E;&#x7684;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x7ED9;&#x51FA;&#x4E0D;&#x77E5;&#x9053;&#x591A;&#x5C11;&#x4E2A;&#x70B9;&#x8D5E;&#x7684;&#x4EBA;&#x540D;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x540D;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x4E3A;&#x4E0D;&#x8D85;&#x8FC7;10&#x4E2A;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x7684;&#x975E;&#x7A7A;&#x5355;&#x8BCD;&#xFF0C;&#x4EE5;&#x56DE;&#x8F66;&#x7ED3;&#x675F;&#x3002;&#x4E00;&#x4E2A;&#x82F1;&#x6587;&#x53E5;&#x70B9;&#x201C;.&#x201D;&#x6807;&#x5FD7;&#x8F93;&#x5165;&#x7684;&#x7ED3;&#x675F;&#xFF0C;&#x8FD9;&#x4E2A;&#x7B26;&#x53F7;&#x4E0D;&#x7B97;&#x5728;&#x70B9;&#x8D5E;&#x540D;&#x5355;&#x91CC;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6839;&#x636E;&#x70B9;&#x8D5E;&#x60C5;&#x51B5;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x7ED3;&#x8BBA;&#xFF1A;&#x82E5;&#x5B58;&#x5728;&#x7B2C;2&#x4E2A;&#x4EBA;A&#x548C;&#x7B2C;14&#x4E2A;&#x4EBA;B&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;A and B are inviting you to dinner&#x2026;&#x201D;&#xFF1B;&#x82E5;&#x53EA;&#x6709;A&#x6CA1;&#x6709;B&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;A is the only one for you&#x2026;&#x201D;&#xFF1B;&#x82E5;&#x8FDE;A&#x90FD;&#x6CA1;&#x6709;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;Momo&#x2026; No one is for you &#x2026;&#x201D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;GaoXZhMagiEinstQuarkLaoLaoFatMouseZhaShenfantacylatesumSenSenQuanQuanwhateverwheneverPotatyhahaha. &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;Magi and Potaty are inviting you to dinner&#x2026; &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;LaoLaoFatMousewhoever. &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;FatMouse is the only one for you&#x2026; &#x8F93;&#x5165;&#x6837;&#x4F8B;3&#xFF1A;LaoLao. &#x8F93;&#x51FA;&#x6837;&#x4F8B;3&#xFF1A;Momo&#x2026; No one is for you &#x2026; 1234567891011121314151617181920212223242526272829303132333435import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int counter = 0; String A = null, B = null; while (true) { String s = in.nextLine(); if (s.equals(&quot;.&quot;)) { break; } counter++; if (counter == 2) { A = s; } if (counter == 14) { B = s; } } if (A != null) { if (B != null) { System.out.println(A + &quot; and &quot; + B +&quot; are inviting you to dinner...&quot;); } else { System.out.println(A + &quot; is the only one for you...&quot;); } } else { System.out.println(&quot;Momo... No one is for you ...&quot;); } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-034. 点赞]]></title>
    <url>%2F2018%2F03%2F24%2FL1-034.%E7%82%B9%E8%B5%9E%2F</url>
    <content type="text"><![CDATA[L1-034. &#x70B9;&#x8D5E;&#x5FAE;&#x535A;&#x4E0A;&#x6709;&#x4E2A;&#x201C;&#x70B9;&#x8D5E;&#x201D;&#x529F;&#x80FD;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4E3A;&#x4F60;&#x559C;&#x6B22;&#x7684;&#x535A;&#x6587;&#x70B9;&#x4E2A;&#x8D5E;&#x8868;&#x793A;&#x652F;&#x6301;&#x3002;&#x6BCF;&#x7BC7;&#x535A;&#x6587;&#x90FD;&#x6709;&#x4E00;&#x4E9B;&#x523B;&#x753B;&#x5176;&#x7279;&#x6027;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x800C;&#x4F60;&#x70B9;&#x8D5E;&#x7684;&#x535A;&#x6587;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x4E5F;&#x95F4;&#x63A5;&#x523B;&#x753B;&#x4E86;&#x4F60;&#x7684;&#x7279;&#x6027;&#x3002;&#x672C;&#x9898;&#x5C31;&#x8981;&#x6C42;&#x4F60;&#x5199;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF0C;&#x901A;&#x8FC7;&#x7EDF;&#x8BA1;&#x4E00;&#x4E2A;&#x4EBA;&#x70B9;&#x8D5E;&#x7684;&#x7EAA;&#x5F55;&#xFF0C;&#x5206;&#x6790;&#x8FD9;&#x4E2A;&#x4EBA;&#x7684;&#x7279;&#x6027;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=1000&#xFF09;&#xFF0C;&#x662F;&#x8BE5;&#x7528;&#x6237;&#x70B9;&#x8D5E;&#x7684;&#x535A;&#x6587;&#x6570;&#x91CF;&#x3002;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x7BC7;&#x88AB;&#x5176;&#x70B9;&#x8D5E;&#x7684;&#x535A;&#x6587;&#x7684;&#x7279;&#x6027;&#x63CF;&#x8FF0;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;&#x201C;K F1 &#x2026; FK&#x201D;&#xFF0C;&#x5176;&#x4E2D; 1&lt;=K&lt;=10&#xFF0C;Fi&#xFF08;i=1, &#x2026;, K&#xFF09;&#x662F;&#x7279;&#x6027;&#x6807;&#x7B7E;&#x7684;&#x7F16;&#x53F7;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x6240;&#x6709;&#x7279;&#x6027;&#x6807;&#x7B7E;&#x4ECE;1&#x5230;1000&#x7F16;&#x53F7;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x7EDF;&#x8BA1;&#x6240;&#x6709;&#x88AB;&#x70B9;&#x8D5E;&#x7684;&#x535A;&#x6587;&#x4E2D;&#x6700;&#x5E38;&#x51FA;&#x73B0;&#x7684;&#x90A3;&#x4E2A;&#x7279;&#x6027;&#x6807;&#x7B7E;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5B83;&#x7684;&#x7F16;&#x53F7;&#x548C;&#x51FA;&#x73B0;&#x6B21;&#x6570;&#xFF0C;&#x6570;&#x5B57;&#x95F4;&#x9694;1&#x4E2A;&#x7A7A;&#x683C;&#x3002;&#x5982;&#x679C;&#x6709;&#x5E76;&#x5217;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x7F16;&#x53F7;&#x6700;&#x5927;&#x7684;&#x90A3;&#x4E2A;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;43 889 233 25 100 3 233 2 734 3 73 889 22 233 123 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;233 3 123456789101112131415161718192021222324252627282930#include &lt;iostream&gt;using namespace std;int map[1001];int main() { int n; cin &gt;&gt; n; int a, b; for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; a; for (int j = 0; j &lt; a; ++j) { cin &gt;&gt; b; map[b]++; } } int max = 0, index = 0; for (int i = 1; i &lt;= 1000; ++i) { if (max &lt;= map[i]) { index = i; max = map[i]; } } cout &lt;&lt; index &lt;&lt; &quot; &quot; &lt;&lt; max; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-033. 出生年]]></title>
    <url>%2F2018%2F03%2F24%2FL1-033.%E5%87%BA%E7%94%9F%E5%B9%B4%2F</url>
    <content type="text"><![CDATA[L1-033. &#x51FA;&#x751F;&#x5E74;&#x4EE5;&#x4E0A;&#x662F;&#x65B0;&#x6D6A;&#x5FAE;&#x535A;&#x4E2D;&#x4E00;&#x5947;&#x8469;&#x8D34;&#xFF1A;&#x201C;&#x6211;&#x51FA;&#x751F;&#x4E8E;1988&#x5E74;&#xFF0C;&#x76F4;&#x5230;25&#x5C81;&#x624D;&#x9047;&#x5230;4&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x5E74;&#x4EFD;&#x3002;&#x201D;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x76F4;&#x5230;2013&#x5E74;&#x624D;&#x8FBE;&#x5230;&#x201C;4&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x201D;&#x7684;&#x8981;&#x6C42;&#x3002;&#x672C;&#x9898;&#x8BF7;&#x4F60;&#x6839;&#x636E;&#x8981;&#x6C42;&#xFF0C;&#x81EA;&#x52A8;&#x586B;&#x5145;&#x201C;&#x6211;&#x51FA;&#x751F;&#x4E8E;y&#x5E74;&#xFF0C;&#x76F4;&#x5230;x&#x5C81;&#x624D;&#x9047;&#x5230;n&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x5E74;&#x4EFD;&#x201D;&#x8FD9;&#x53E5;&#x8BDD;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x51FA;&#x751F;&#x5E74;&#x4EFD;y&#x548C;&#x76EE;&#x6807;&#x5E74;&#x4EFD;&#x4E2D;&#x4E0D;&#x540C;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;n&#xFF0C;&#x5176;&#x4E2D;y&#x5728;[1, 3000]&#x4E4B;&#x95F4;&#xFF0C;n&#x53EF;&#x4EE5;&#x662F;2&#x3001;&#x6216;3&#x3001;&#x6216;4&#x3002;&#x6CE8;&#x610F;&#x4E0D;&#x8DB3;4&#x4F4D;&#x7684;&#x5E74;&#x4EFD;&#x8981;&#x5728;&#x524D;&#x9762;&#x8865;&#x96F6;&#xFF0C;&#x4F8B;&#x5982;&#x516C;&#x5143;1&#x5E74;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;0001&#x5E74;&#xFF0C;&#x6709;2&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x5B57;0&#x548C;1&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6839;&#x636E;&#x8F93;&#x5165;&#xFF0C;&#x8F93;&#x51FA;x&#x548C;&#x80FD;&#x8FBE;&#x5230;&#x8981;&#x6C42;&#x7684;&#x5E74;&#x4EFD;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x4EE5;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x884C;&#x9996;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002;&#x5E74;&#x4EFD;&#x8981;&#x6309;4&#x4F4D;&#x8F93;&#x51FA;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x6240;&#x8C13;&#x201C;n&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x201D;&#x662F;&#x6307;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x5B57;&#x6B63;&#x597D;&#x662F;n&#x4E2A;&#x3002;&#x5982;&#x201C;2013&#x201D;&#x88AB;&#x89C6;&#x4E3A;&#x6EE1;&#x8DB3;&#x201C;4&#x4F4D;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x540C;&#x201D;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x4F46;&#x4E0D;&#x88AB;&#x89C6;&#x4E3A;&#x6EE1;&#x8DB3;2&#x4F4D;&#x6216;3&#x4F4D;&#x6570;&#x5B57;&#x4E0D;&#x540C;&#x7684;&#x6761;&#x4EF6;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;1988 4 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;25 2013 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;1 2 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;0 0001 12345678910111213141516171819202122232425262728293031import java.text.DecimalFormat;import java.util.HashSet;import java.util.Scanner;import java.util.Set;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int y = in.nextInt(); int n = in.nextInt(); DecimalFormat df = new DecimalFormat(&quot;0000&quot;); Set&lt;Integer&gt; set = new HashSet(); int res = y, count = 0; for (int i = y; i &lt;= 3012; i++) { set.clear(); int tmp = i; for (int j = 0; j &lt; 4; j++) { int a = tmp % 10; tmp = tmp / 10; set.add(a); } if (set.size() == n) { res = i; count = i - y; System.out.println(count + &quot; &quot; + df.format(res)); break; } } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-032. Left-pad]]></title>
    <url>%2F2018%2F03%2F24%2FL1-032.Left-pad%2F</url>
    <content type="text"><![CDATA[L1-032. Left-pad&#x6839;&#x636E;&#x65B0;&#x6D6A;&#x5FAE;&#x535A;&#x4E0A;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x6709;&#x4E00;&#x4F4D;&#x5F00;&#x53D1;&#x8005;&#x4E0D;&#x6EE1;NPM&#xFF08;Node Package Manager&#xFF09;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x6536;&#x56DE;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x5F00;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x53EB;left-pad&#x7684;&#x6A21;&#x5757;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x6A21;&#x5757;&#x628A;javascript&#x91CC;&#x9762;&#x7684;React/Babel&#x5E72;&#x762B;&#x75EA;&#x4E86;&#x3002;&#x8FD9;&#x662F;&#x4E2A;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x6A21;&#x5757;&#xFF1F;&#x5C31;&#x662F;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x524D;&#x586B;&#x5145;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#x5230;&#x4E00;&#x5B9A;&#x7684;&#x957F;&#x5EA6;&#x3002;&#x4F8B;&#x5982;&#x7528;&#x201C;*&#x201D;&#x53BB;&#x586B;&#x5145;&#x5B57;&#x7B26;&#x4E32;&#x201C;GPLT&#x201D;&#xFF0C;&#x4F7F;&#x4E4B;&#x957F;&#x5EA6;&#x4E3A;10&#xFF0C;&#x8C03;&#x7528;left-pad&#x7684;&#x7ED3;&#x679C;&#x5C31;&#x5E94;&#x8BE5;&#x662F;&#x201C;**GPLT&#x201D;&#x3002;Node&#x793E;&#x533A;&#x66FE;&#x7ECF;&#x5BF9;left-pad&#x7D27;&#x6025;&#x53D1;&#x5E03;&#x4E86;&#x4E00;&#x4E2A;&#x66FF;&#x4EE3;&#xFF0C;&#x88AB;&#x4E25;&#x91CD;&#x5410;&#x69FD;&#x3002;&#x4E0B;&#x9762;&#x5C31;&#x8BF7;&#x4F60;&#x6765;&#x5B9E;&#x73B0;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x6A21;&#x5757;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=104&#xFF09;&#x548C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x586B;&#x5145;&#x7ED3;&#x679C;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x548C;&#x7528;&#x4E8E;&#x586B;&#x5145;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x4E2D;&#x95F4;&#x4EE5;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x5F00;&#x3002;&#x7B2C;&#x4E8C;&#x884C;&#x7ED9;&#x51FA;&#x539F;&#x59CB;&#x7684;&#x975E;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4EE5;&#x56DE;&#x8F66;&#x7ED3;&#x675F;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;15 _I love GPLT &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;____I love GPLT &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;4 *this is a sample for cut &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A; cut 12345678910111213141516171819202122232425import java.util.Scanner;import static java.lang.System.out;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int n = in.nextInt(); String c = in.next(); in.nextLine(); String str = in.nextLine(); if (n &gt; str.length()) { for (int i = 0; i &lt; (n - str.length()); i++) { out.print(c); } out.println(str); } else { for (int i = (str.length() - n); i &lt; str.length(); i++) { out.print(str.charAt(i)); } out.println(); } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-031. 到底是不是太胖了]]></title>
    <url>%2F2018%2F03%2F24%2FL1-031.%E5%88%B0%E5%BA%95%E6%98%AF%E4%B8%8D%E6%98%AF%E5%A4%AA%E8%83%96%E4%BA%86%2F</url>
    <content type="text"><![CDATA[L1-031. &#x5230;&#x5E95;&#x662F;&#x4E0D;&#x662F;&#x592A;&#x80D6;&#x4E86;&#x636E;&#x8BF4;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x6807;&#x51C6;&#x4F53;&#x91CD;&#x5E94;&#x8BE5;&#x662F;&#x5176;&#x8EAB;&#x9AD8;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5398;&#x7C73;&#xFF09;&#x51CF;&#x53BB;100&#x3001;&#x518D;&#x4E58;&#x4EE5;0.9&#x6240;&#x5F97;&#x5230;&#x7684;&#x516C;&#x65A4;&#x6570;&#x3002;&#x771F;&#x5B9E;&#x4F53;&#x91CD;&#x4E0E;&#x6807;&#x51C6;&#x4F53;&#x91CD;&#x8BEF;&#x5DEE;&#x5728;10%&#x4EE5;&#x5185;&#x90FD;&#x662F;&#x5B8C;&#x7F8E;&#x8EAB;&#x6750;&#xFF08;&#x5373; |&#x771F;&#x5B9E;&#x4F53;&#x91CD;-&#x6807;&#x51C6;&#x4F53;&#x91CD;| &lt; &#x6807;&#x51C6;&#x4F53;&#x91CD;x10%&#xFF09;&#x3002;&#x5DF2;&#x77E5;1&#x5E02;&#x65A4;=0.5&#x516C;&#x65A4;&#x3002;&#x73B0;&#x7ED9;&#x5B9A;&#x4E00;&#x7FA4;&#x4EBA;&#x7684;&#x8EAB;&#x9AD8;&#x548C;&#x5B9E;&#x9645;&#x4F53;&#x91CD;&#xFF0C;&#x8BF7;&#x4F60;&#x544A;&#x8BC9;&#x4ED6;&#x4EEC;&#x662F;&#x5426;&#x592A;&#x80D6;&#x6216;&#x592A;&#x7626;&#x4E86;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;= 20&#xFF09;&#x3002;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x8EAB;&#x9AD8;H&#xFF08;120 &lt; H &lt; 200&#xFF1B;&#x5355;&#x4F4D;&#xFF1A;&#x5398;&#x7C73;&#xFF09;&#x548C;&#x771F;&#x5B9E;&#x4F53;&#x91CD;W&#xFF08;50 &lt; W &lt;= 300&#xFF1B;&#x5355;&#x4F4D;&#xFF1A;&#x5E02;&#x65A4;&#xFF09;&#xFF0C;&#x5176;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x4E3A;&#x6BCF;&#x4E2A;&#x4EBA;&#x8F93;&#x51FA;&#x4E00;&#x884C;&#x7ED3;&#x8BBA;&#xFF1A;&#x5982;&#x679C;&#x662F;&#x5B8C;&#x7F8E;&#x8EAB;&#x6750;&#xFF0C;&#x8F93;&#x51FA;&#x201C;You are wan mei!&#x201D;&#xFF1B;&#x5982;&#x679C;&#x592A;&#x80D6;&#x4E86;&#xFF0C;&#x8F93;&#x51FA;&#x201C;You are tai pang le!&#x201D;&#xFF1B;&#x5426;&#x5219;&#x8F93;&#x51FA;&#x201C;You are tai shou le!&#x201D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;3169 136150 81178 155 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;You are wan mei!You are tai shou le!You are tai pang le! 123456789101112131415161718192021222324252627import java.util.Scanner;import static java.lang.System.out;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int n = in.nextInt(); int a, b; for (int i = 0; i &lt; n; i++) { a = in.nextInt(); b = in.nextInt(); double tmp = (a - 100) * 0.9 * 2; boolean isfat = Math.abs(b - tmp) &lt; tmp * 0.1; if (isfat) { out.println(&quot;You are wan mei!&quot;); } else if (b - tmp &gt; 0) { out.println(&quot;You are tai pang le!&quot;); } else if (b - tmp &lt; 0) { out.println(&quot;You are tai shou le!&quot;); } } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-030. 一帮一]]></title>
    <url>%2F2018%2F03%2F24%2FL1-030.%E4%B8%80%E5%B8%AE%E4%B8%80%2F</url>
    <content type="text"><![CDATA[L1-030. &#x4E00;&#x5E2E;&#x4E00;&#x201C;&#x4E00;&#x5E2E;&#x4E00;&#x5B66;&#x4E60;&#x5C0F;&#x7EC4;&#x201D;&#x662F;&#x4E2D;&#x5C0F;&#x5B66;&#x4E2D;&#x5E38;&#x89C1;&#x7684;&#x5B66;&#x4E60;&#x7EC4;&#x7EC7;&#x65B9;&#x5F0F;&#xFF0C;&#x8001;&#x5E08;&#x628A;&#x5B66;&#x4E60;&#x6210;&#x7EE9;&#x9760;&#x524D;&#x7684;&#x5B66;&#x751F;&#x8DDF;&#x5B66;&#x4E60;&#x6210;&#x7EE9;&#x9760;&#x540E;&#x7684;&#x5B66;&#x751F;&#x6392;&#x5728;&#x4E00;&#x7EC4;&#x3002;&#x672C;&#x9898;&#x5C31;&#x8BF7;&#x4F60;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#x5E2E;&#x52A9;&#x8001;&#x5E08;&#x81EA;&#x52A8;&#x5B8C;&#x6210;&#x8FD9;&#x4E2A;&#x5206;&#x914D;&#x5DE5;&#x4F5C;&#xFF0C;&#x5373;&#x5728;&#x5F97;&#x5230;&#x5168;&#x73ED;&#x5B66;&#x751F;&#x7684;&#x6392;&#x540D;&#x540E;&#xFF0C;&#x5728;&#x5F53;&#x524D;&#x5C1A;&#x672A;&#x5206;&#x7EC4;&#x7684;&#x5B66;&#x751F;&#x4E2D;&#xFF0C;&#x5C06;&#x540D;&#x6B21;&#x6700;&#x9760;&#x524D;&#x7684;&#x5B66;&#x751F;&#x4E0E;&#x540D;&#x6B21;&#x6700;&#x9760;&#x540E;&#x7684;&#x5F02;&#x6027;&#x5B66;&#x751F;&#x5206;&#x4E3A;&#x4E00;&#x7EC4;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x6B63;&#x5076;&#x6570;N&#xFF08;&lt;=50&#xFF09;&#xFF0C;&#x5373;&#x5168;&#x73ED;&#x5B66;&#x751F;&#x7684;&#x4EBA;&#x6570;&#x3002;&#x6B64;&#x540E;N&#x884C;&#xFF0C;&#x6309;&#x7167;&#x540D;&#x6B21;&#x4ECE;&#x9AD8;&#x5230;&#x4F4E;&#x7684;&#x987A;&#x5E8F;&#x7ED9;&#x51FA;&#x6BCF;&#x4E2A;&#x5B66;&#x751F;&#x7684;&#x6027;&#x522B;&#xFF08;0&#x4EE3;&#x8868;&#x5973;&#x751F;&#xFF0C;1&#x4EE3;&#x8868;&#x7537;&#x751F;&#xFF09;&#x548C;&#x59D3;&#x540D;&#xFF08;&#x4E0D;&#x8D85;&#x8FC7;8&#x4E2A;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x7684;&#x975E;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF09;&#xFF0C;&#x5176;&#x95F4;&#x4EE5;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002;&#x8FD9;&#x91CC;&#x4FDD;&#x8BC1;&#x672C;&#x73ED;&#x7537;&#x5973;&#x6BD4;&#x4F8B;&#x662F;1:1&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x5E76;&#x5217;&#x540D;&#x6B21;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x884C;&#x8F93;&#x51FA;&#x4E00;&#x7EC4;&#x4E24;&#x4E2A;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#xFF0C;&#x5176;&#x95F4;&#x4EE5;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002;&#x540D;&#x6B21;&#x9AD8;&#x7684;&#x5B66;&#x751F;&#x5728;&#x524D;&#xFF0C;&#x540D;&#x6B21;&#x4F4E;&#x7684;&#x5B66;&#x751F;&#x5728;&#x540E;&#x3002;&#x5C0F;&#x7EC4;&#x7684;&#x8F93;&#x51FA;&#x987A;&#x5E8F;&#x6309;&#x7167;&#x524D;&#x9762;&#x5B66;&#x751F;&#x7684;&#x540D;&#x6B21;&#x4ECE;&#x9AD8;&#x5230;&#x4F4E;&#x6392;&#x5217;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;80 Amy1 Tom1 Bill0 Cindy0 Maya1 John1 Jack0 Linda &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;Amy JackTom LindaBill MayaCindy John 1234567891011121314151617181920212223242526272829303132333435363738394041424344import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); int n = in.nextInt(); Node[] ss = new Node[n]; int a; String b; for (int i = 0; i &lt; n; i++) { a = in.nextInt(); b = in.next(); ss[i] = new Node(a, b); } for (int i = 0; i &lt; n / 2; i++) { if (ss[i].isvisted == false) { int j = n - 1; while (ss[i].a == ss[j].a || ss[j].isvisted == true) { j--; } if (ss[j].isvisted == false) { ss[i].setIsvisted(true); ss[j].setIsvisted(true); System.out.println(ss[i].s + &quot; &quot; + ss[j].s); } } } } static class Node { int a; String s; boolean isvisted = false; Node(int a, String s) { this.a = a; this.s = s; } public void setIsvisted(boolean isvisted) { this.isvisted = isvisted; } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-029. 是不是太胖了]]></title>
    <url>%2F2018%2F03%2F24%2FL1-029.%E6%98%AF%E4%B8%8D%E6%98%AF%E5%A4%AA%E8%83%96%E4%BA%86%2F</url>
    <content type="text"><![CDATA[L1-029. &#x662F;&#x4E0D;&#x662F;&#x592A;&#x80D6;&#x4E86;&#x636E;&#x8BF4;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x6807;&#x51C6;&#x4F53;&#x91CD;&#x5E94;&#x8BE5;&#x662F;&#x5176;&#x8EAB;&#x9AD8;&#xFF08;&#x5355;&#x4F4D;&#xFF1A;&#x5398;&#x7C73;&#xFF09;&#x51CF;&#x53BB;100&#x3001;&#x518D;&#x4E58;&#x4EE5;0.9&#x6240;&#x5F97;&#x5230;&#x7684;&#x516C;&#x65A4;&#x6570;&#x3002;&#x5DF2;&#x77E5;&#x5E02;&#x65A4;&#x662F;&#x516C;&#x65A4;&#x7684;&#x4E24;&#x500D;&#x3002;&#x73B0;&#x7ED9;&#x5B9A;&#x67D0;&#x4EBA;&#x8EAB;&#x9AD8;&#xFF0C;&#x8BF7;&#x4F60;&#x8BA1;&#x7B97;&#x5176;&#x6807;&#x51C6;&#x4F53;&#x91CD;&#x5E94;&#x8BE5;&#x662F;&#x591A;&#x5C11;&#xFF1F;&#xFF08;&#x987A;&#x4FBF;&#x4E5F;&#x6084;&#x6084;&#x7ED9;&#x81EA;&#x5DF1;&#x7B97;&#x4E00;&#x4E0B;&#x5427;&#x2026;&#x2026;&#xFF09; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;H&#xFF08;100 &lt; H &lt;= 300&#xFF09;&#xFF0C;&#x4E3A;&#x67D0;&#x4EBA;&#x8EAB;&#x9AD8;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5BF9;&#x5E94;&#x7684;&#x6807;&#x51C6;&#x4F53;&#x91CD;&#xFF0C;&#x5355;&#x4F4D;&#x4E3A;&#x5E02;&#x65A4;&#xFF0C;&#x4FDD;&#x7559;&#x5C0F;&#x6570;&#x70B9;&#x540E;1&#x4F4D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;169 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;124.2 12345678910111213#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main() { double n; cin &gt;&gt; n; printf(&quot;%.1f&quot;, (n - 100) * 0.9 * 2); return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-028. 判断素数]]></title>
    <url>%2F2018%2F03%2F24%2FL1-028.%E5%88%A4%E6%96%AD%E7%B4%A0%E6%95%B0%2F</url>
    <content type="text"><![CDATA[L1-028. &#x5224;&#x65AD;&#x7D20;&#x6570;&#x672C;&#x9898;&#x7684;&#x76EE;&#x6807;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5224;&#x65AD;&#x4E00;&#x4E2A;&#x7ED9;&#x5B9A;&#x7684;&#x6B63;&#x6574;&#x6570;&#x662F;&#x5426;&#x7D20;&#x6570;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=10&#xFF09;&#xFF0C;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5C0F;&#x4E8E;231&#x7684;&#x9700;&#x8981;&#x5224;&#x65AD;&#x7684;&#x6B63;&#x6574;&#x6570;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5BF9;&#x6BCF;&#x4E2A;&#x9700;&#x8981;&#x5224;&#x65AD;&#x7684;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x662F;&#x7D20;&#x6570;&#xFF0C;&#x5219;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x201C;Yes&#x201D;&#xFF0C;&#x5426;&#x5219;&#x8F93;&#x51FA;&#x201C;No&#x201D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;211111 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;YesNo 123456789101112131415161718192021222324252627282930313233#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;bool isPrime(int a) { if (a == 1 || a == 0) return false; for (int i = 2; i &lt; sqrt(a); ++i) { if (a % i == 0) { return false; } } return true;}int main() { int n; cin &gt;&gt; n; int arr[n]; for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; arr[i]; } for (int i = 0; i &lt; n; ++i) { if (isPrime(arr[i])) { cout &lt;&lt; &quot;Yes&quot; &lt;&lt; endl; } else { cout &lt;&lt; &quot;No&quot; &lt;&lt; endl; } } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-027. 出租]]></title>
    <url>%2F2018%2F03%2F24%2FL1-027.%E5%87%BA%E7%A7%9F%2F</url>
    <content type="text"><![CDATA[L1-027. &#x51FA;&#x79DF;&#x4E0B;&#x9762;&#x662F;&#x65B0;&#x6D6A;&#x5FAE;&#x535A;&#x4E0A;&#x66FE;&#x7ECF;&#x5F88;&#x706B;&#x7684;&#x4E00;&#x5F20;&#x56FE;&#xFF1A; &#x4E00;&#x65F6;&#x95F4;&#x7F51;&#x4E0A;&#x4E00;&#x7247;&#x6C42;&#x6551;&#x58F0;&#xFF0C;&#x6025;&#x95EE;&#x8FD9;&#x4E2A;&#x600E;&#x4E48;&#x7834;&#x3002;&#x5176;&#x5B9E;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5F88;&#x7B80;&#x5355;&#xFF0C;index&#x6570;&#x7EC4;&#x5C31;&#x662F;arr&#x6570;&#x7EC4;&#x7684;&#x4E0B;&#x6807;&#xFF0C;index[0]=2 &#x5BF9;&#x5E94; arr[2]=1&#xFF0C;index[1]=0 &#x5BF9;&#x5E94; arr[0]=8&#xFF0C;index[2]=3 &#x5BF9;&#x5E94; arr[3]=0&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x2026;&#x2026; &#x5F88;&#x5BB9;&#x6613;&#x5F97;&#x5230;&#x7535;&#x8BDD;&#x53F7;&#x7801;&#x662F;18013820100&#x3002; &#x672C;&#x9898;&#x8981;&#x6C42;&#x4F60;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF0C;&#x4E3A;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x7535;&#x8BDD;&#x53F7;&#x7801;&#x751F;&#x6210;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801; &#x2014;&#x2014; &#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x53EA;&#x8981;&#x751F;&#x6210;&#x6700;&#x524D;&#x9762;&#x4E24;&#x884C;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x540E;&#x9762;&#x5185;&#x5BB9;&#x662F;&#x4E0D;&#x53D8;&#x7684;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x7531;11&#x4F4D;&#x6570;&#x5B57;&#x7EC4;&#x6210;&#x7684;&#x624B;&#x673A;&#x53F7;&#x7801;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x4E3A;&#x8F93;&#x5165;&#x7684;&#x53F7;&#x7801;&#x751F;&#x6210;&#x4EE3;&#x7801;&#x7684;&#x524D;&#x4E24;&#x884C;&#xFF0C;&#x5176;&#x4E2D;arr&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x5FC5;&#x987B;&#x6309;&#x9012;&#x51CF;&#x987A;&#x5E8F;&#x7ED9;&#x51FA;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;18013820100 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;int[] arr = new int[]{8,3,2,1,0};int[] index = new int[]{3,0,4,3,1,0,2,4,3,4,4}; 123456789101112131415161718192021222324252627282930313233import java.util.Scanner;import java.util.Vector;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); String s = in.next(); int[] tel = new int[s.length()]; int[] a = new int[s.length()]; Vector&lt;Integer&gt; vector = new Vector(); for (int i = 0; i &lt; s.length(); i++) { a[s.charAt(i) - &apos;0&apos;]++; tel[i] = s.charAt(i) - &apos;0&apos;; } for (int i = s.length() - 1; i &gt;= 0; i--) { if (a[i] &gt; 0) { vector.add(i); } } System.out.print(&quot;int[] arr = new int[]{&quot;); for (int i = 0; i &lt; vector.size() - 1; i++) { System.out.print(vector.get(i)+&quot;,&quot;); } System.out.println(vector.get(vector.size()-1)+&quot;};&quot;); System.out.print(&quot;int[] index = new int[]{&quot;); for (int i = 0; i &lt; s.length() - 1; i++) { System.out.print(vector.indexOf(tel[i]) + &quot;,&quot;); } System.out.println(vector.indexOf(tel[s.length()-1])+ &quot;};&quot;); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-026. I Love GPLT]]></title>
    <url>%2F2018%2F03%2F24%2FL1-026.ILoveGPLT%2F</url>
    <content type="text"><![CDATA[L1-026. I Love GPLT&#x8FD9;&#x9053;&#x8D85;&#x7EA7;&#x7B80;&#x5355;&#x7684;&#x9898;&#x76EE;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8F93;&#x5165;&#x3002; &#x4F60;&#x53EA;&#x9700;&#x8981;&#x628A;&#x8FD9;&#x53E5;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x8BDD; &#x2014;&#x2014; &#x201C;I Love GPLT&#x201D;&#x2014;&#x2014;&#x7AD6;&#x7740;&#x8F93;&#x51FA;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; &#x6240;&#x8C13;&#x201C;&#x7AD6;&#x7740;&#x8F93;&#x51FA;&#x201D;&#xFF0C;&#x662F;&#x6307;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x5360;&#x4E00;&#x884C;&#xFF08;&#x5305;&#x62EC;&#x7A7A;&#x683C;&#xFF09;&#xFF0C;&#x5373;&#x6BCF;&#x884C;&#x53EA;&#x80FD;&#x6709;1&#x4E2A;&#x5B57;&#x7B26;&#x548C;&#x56DE;&#x8F66;&#x3002; 12345678public class Main { public static void main(String[] args) { String s = &quot;I Love GPLT&quot;; for (int i = 0; i &lt; s.length(); i++) { System.out.println(s.charAt(i)); } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-025. 正整数A+B]]></title>
    <url>%2F2018%2F03%2F24%2FL1-025.%E6%AD%A3%E6%95%B4%E6%95%B0A%2BB%2F</url>
    <content type="text"><![CDATA[L1-025. &#x6B63;&#x6574;&#x6570;A+B&#x672C;&#x9898;&#x7684;&#x76EE;&#x6807;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x6C42;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;A&#x548C;B&#x7684;&#x548C;&#xFF0C;&#x5176;&#x4E2D;A&#x548C;B&#x90FD;&#x5728;&#x533A;&#x95F4;[1,1000]&#x3002;&#x7A0D;&#x5FAE;&#x6709;&#x70B9;&#x9EBB;&#x70E6;&#x7684;&#x662F;&#xFF0C;&#x8F93;&#x5165;&#x5E76;&#x4E0D;&#x4FDD;&#x8BC1;&#x662F;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x7ED9;&#x51FA;A&#x548C;B&#xFF0C;&#x5176;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x5F00;&#x3002;&#x95EE;&#x9898;&#x662F;A&#x548C;B&#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x6EE1;&#x8DB3;&#x8981;&#x6C42;&#x7684;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x662F;&#x8D85;&#x51FA;&#x8303;&#x56F4;&#x7684;&#x6570;&#x5B57;&#x3001;&#x8D1F;&#x6570;&#x3001;&#x5E26;&#x5C0F;&#x6570;&#x70B9;&#x7684;&#x5B9E;&#x6570;&#x3001;&#x751A;&#x81F3;&#x662F;&#x4E00;&#x5806;&#x4E71;&#x7801;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x6211;&#x4EEC;&#x628A;&#x8F93;&#x5165;&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x7B2C;1&#x4E2A;&#x7A7A;&#x683C;&#x8BA4;&#x4E3A;&#x662F;A&#x548C;B&#x7684;&#x5206;&#x9694;&#x3002;&#x9898;&#x76EE;&#x4FDD;&#x8BC1;&#x81F3;&#x5C11;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#xFF0C;&#x5E76;&#x4E14;B&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5982;&#x679C;&#x8F93;&#x5165;&#x7684;&#x786E;&#x662F;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x5219;&#x6309;&#x683C;&#x5F0F;&#x201C;A + B = &#x548C;&#x201D;&#x8F93;&#x51FA;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x8F93;&#x5165;&#x4E0D;&#x5408;&#x8981;&#x6C42;&#xFF0C;&#x5219;&#x5728;&#x76F8;&#x5E94;&#x4F4D;&#x7F6E;&#x8F93;&#x51FA;&#x201C;?&#x201D;&#xFF0C;&#x663E;&#x7136;&#x6B64;&#x65F6;&#x548C;&#x4E5F;&#x662F;&#x201C;?&#x201D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;123 456 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;123 + 456 = 579 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A; 18&#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;? + 18 = ?&#x8F93;&#x5165;&#x6837;&#x4F8B;3&#xFF1A;-100 blabla bla&#x2026;33&#x8F93;&#x51FA;&#x6837;&#x4F8B;3&#xFF1A;? + ? = ? 12345678910111213141516171819202122232425262728293031323334353637383940414243import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); String s1 = in.nextLine(); String A = s1.split(&quot; &quot;, 2)[0]; String B = s1.split(&quot; &quot;, 2)[1]; int flagA = 0; int flagB = 0; int a = 0; try { a = Integer.valueOf(A); } catch (Exception e) { flagA = 1; } int b = 0; try { b = Integer.valueOf(B); } catch (Exception e) { flagB = 1; } if (!(a &gt;= 1 &amp;&amp; a &lt;= 1000)) flagA = 1; if (!(b &gt;= 1 &amp;&amp; b &lt;= 1000)) flagB = 1; if (flagA == 0 &amp;&amp; flagB ==0) System.out.println(a + &quot; + &quot; + b + &quot; = &quot; + (a + b)); else if (flagA == 0 &amp;&amp; flagB != 0) { System.out.println(a + &quot; + ? = ?&quot;); } else if (flagA != 0 &amp;&amp; flagB == 0) { System.out.println(&quot;? + &quot; + b + &quot; = ?&quot;); } else if (flagA != 0 &amp;&amp; flagB != 0) { System.out.println(&quot;? + ? = ?&quot;); } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-024. 后天]]></title>
    <url>%2F2018%2F03%2F24%2FL1-024.%E5%90%8E%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[L1-024. &#x540E;&#x5929;&#x5982;&#x679C;&#x4ECA;&#x5929;&#x662F;&#x661F;&#x671F;&#x4E09;&#xFF0C;&#x540E;&#x5929;&#x5C31;&#x662F;&#x661F;&#x671F;&#x4E94;&#xFF1B;&#x5982;&#x679C;&#x4ECA;&#x5929;&#x662F;&#x661F;&#x671F;&#x516D;&#xFF0C;&#x540E;&#x5929;&#x5C31;&#x662F;&#x661F;&#x671F;&#x4E00;&#x3002;&#x6211;&#x4EEC;&#x7528;&#x6570;&#x5B57;1&#x5230;7&#x5BF9;&#x5E94;&#x661F;&#x671F;&#x4E00;&#x5230;&#x661F;&#x671F;&#x65E5;&#x3002;&#x7ED9;&#x5B9A;&#x67D0;&#x4E00;&#x5929;&#xFF0C;&#x8BF7;&#x4F60;&#x8F93;&#x51FA;&#x90A3;&#x5929;&#x7684;&#x201C;&#x540E;&#x5929;&#x201D;&#x662F;&#x661F;&#x671F;&#x51E0;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;D&#xFF08;1 &lt;= D &lt;=7&#xFF09;&#xFF0C;&#x4EE3;&#x8868;&#x661F;&#x671F;&#x91CC;&#x7684;&#x67D0;&#x4E00;&#x5929;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;D&#x5929;&#x7684;&#x540E;&#x5929;&#x662F;&#x661F;&#x671F;&#x51E0;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;3 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;5 1234567891011121314#include &lt;iostream&gt;using namespace std;int main() { int n; cin &gt;&gt; n; if (n == 5) { cout &lt;&lt; 7 &lt;&lt; endl; } else cout &lt;&lt; (n + 2) % 7 &lt;&lt; endl; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-023. 输出GPLT]]></title>
    <url>%2F2018%2F03%2F24%2FL1-023.%E8%BE%93%E5%87%BAGPLT%2F</url>
    <content type="text"><![CDATA[L1-023. &#x8F93;&#x51FA;GPLT&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;10000&#x7684;&#x3001;&#x4EC5;&#x7531;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x6784;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x8BF7;&#x5C06;&#x5B57;&#x7B26;&#x91CD;&#x65B0;&#x8C03;&#x6574;&#x987A;&#x5E8F;&#xFF0C;&#x6309;&#x201C;GPLTGPLT&#x2026;.&#x201D;&#x8FD9;&#x6837;&#x7684;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#xFF0C;&#x5E76;&#x5FFD;&#x7565;&#x5176;&#x5B83;&#x5B57;&#x7B26;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x56DB;&#x79CD;&#x5B57;&#x7B26;&#xFF08;&#x4E0D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#xFF09;&#x7684;&#x4E2A;&#x6570;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x4E00;&#x6837;&#x591A;&#x7684;&#xFF0C;&#x82E5;&#x67D0;&#x79CD;&#x5B57;&#x7B26;&#x5DF2;&#x7ECF;&#x8F93;&#x51FA;&#x5B8C;&#xFF0C;&#x5219;&#x4F59;&#x4E0B;&#x7684;&#x5B57;&#x7B26;&#x4ECD;&#x6309;GPLT&#x7684;&#x987A;&#x5E8F;&#x6253;&#x5370;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x5B57;&#x7B26;&#x90FD;&#x88AB;&#x8F93;&#x51FA;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;10000&#x7684;&#x3001;&#x4EC5;&#x7531;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x6784;&#x6210;&#x7684;&#x975E;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6309;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x8F93;&#x51FA;&#x6392;&#x5E8F;&#x540E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x9898;&#x76EE;&#x4FDD;&#x8BC1;&#x8F93;&#x51FA;&#x975E;&#x7A7A;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;pcTclnGloRgLrtLhgljkLhGFauPewSKgt &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;GPLTGPLTGLTGLGLL 1234567891011121314151617181920212223242526272829303132333435363738394041#include &lt;iostream&gt;using namespace std;int main() { string s; cin &gt;&gt; s; int g = 0, p = 0, l = 0, t = 0; for (int i = 0; i &lt; s.size(); ++i) { if (toupper(s[i]) == &apos;G&apos;) { g++; } else if (toupper(s[i]) == &apos;P&apos;) { p++; } else if (toupper(s[i]) == &apos;L&apos;) { l++; } else if (toupper(s[i]) == &apos;T&apos;) { t++; } } while (g + p + l + t &gt; 0) { if (g &gt; 0) { g--; cout &lt;&lt; &quot;G&quot;; } if (p &gt; 0) { p--; cout &lt;&lt; &apos;P&apos;; } if (l &gt; 0) { l--; cout &lt;&lt; &quot;L&quot;; } if (t &gt; 0) { t--; cout &lt;&lt; &quot;T&quot;; } } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-022. 奇偶分家]]></title>
    <url>%2F2018%2F03%2F24%2FL1-022.%E5%A5%87%E5%81%B6%E5%88%86%E5%AE%B6%2F</url>
    <content type="text"><![CDATA[L1-022. &#x5947;&#x5076;&#x5206;&#x5BB6;&#x7ED9;&#x5B9A;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x8BF7;&#x7EDF;&#x8BA1;&#x5947;&#x6570;&#x548C;&#x5076;&#x6570;&#x5404;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#xFF1F; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;N&#xFF08;&lt;= 1000&#xFF09;&#xFF1B;&#x7B2C;2&#x884C;&#x7ED9;&#x51FA;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x5148;&#x540E;&#x8F93;&#x51FA;&#x5947;&#x6570;&#x7684;&#x4E2A;&#x6570;&#x3001;&#x5076;&#x6570;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x4E2D;&#x95F4;&#x4EE5;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;988 74 101 26 15 0 34 22 77 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;3 6 1234567891011121314151617181920#include &lt;iostream&gt;using namespace std;int main() { int n; int a; cin &gt;&gt; n; int countA = 0; int countB = 0; for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; a; if (a % 2 == 0) { countB++; } else countA++; } cout &lt;&lt; countA &lt;&lt; &quot; &quot; &lt;&lt; countB &lt;&lt; endl; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-021. 重要的话说三遍]]></title>
    <url>%2F2018%2F03%2F24%2FL1-021.%E9%87%8D%E8%A6%81%E7%9A%84%E8%AF%9D%E8%AF%B4%E4%B8%89%E9%81%8D%2F</url>
    <content type="text"><![CDATA[L1-021. &#x91CD;&#x8981;&#x7684;&#x8BDD;&#x8BF4;&#x4E09;&#x904D;&#x8FD9;&#x9053;&#x8D85;&#x7EA7;&#x7B80;&#x5355;&#x7684;&#x9898;&#x76EE;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8F93;&#x5165;&#x3002; &#x4F60;&#x53EA;&#x9700;&#x8981;&#x628A;&#x8FD9;&#x53E5;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x8BDD; &#x2014;&#x2014; &#x201C;I&#x2019;m gonna WIN!&#x201D;&#x2014;&#x2014;&#x8FDE;&#x7EED;&#x8F93;&#x51FA;&#x4E09;&#x904D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; &#x6CE8;&#x610F;&#x6BCF;&#x904D;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x9664;&#x4E86;&#x6BCF;&#x884C;&#x7684;&#x56DE;&#x8F66;&#x4E0D;&#x80FD;&#x6709;&#x4EFB;&#x4F55;&#x591A;&#x4F59;&#x5B57;&#x7B26;&#x3002; 123456789#include &lt;iostream&gt;using namespace std;int main() { for (int i = 0; i &lt; 3; ++i) { cout &lt;&lt; &quot;I&apos;m gonna WIN!&quot; &lt;&lt; endl; } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-020. 帅到没朋友]]></title>
    <url>%2F2018%2F03%2F24%2FL1-020.%E5%B8%85%E5%88%B0%E6%B2%A1%E6%9C%8B%E5%8F%8B%2F</url>
    <content type="text"><![CDATA[L1-020. &#x5E05;&#x5230;&#x6CA1;&#x670B;&#x53CB;&#x5F53;&#x82B8;&#x82B8;&#x4F17;&#x751F;&#x5FD9;&#x7740;&#x5728;&#x670B;&#x53CB;&#x5708;&#x4E2D;&#x53D1;&#x7167;&#x7247;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x4E9B;&#x4EBA;&#x56E0;&#x4E3A;&#x592A;&#x5E05;&#x800C;&#x6CA1;&#x6709;&#x670B;&#x53CB;&#x3002;&#x672C;&#x9898;&#x5C31;&#x8981;&#x6C42;&#x4F60;&#x627E;&#x51FA;&#x90A3;&#x4E9B;&#x5E05;&#x5230;&#x6CA1;&#x6709;&#x670B;&#x53CB;&#x7684;&#x4EBA;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=100&#xFF09;&#xFF0C;&#x662F;&#x5DF2;&#x77E5;&#x670B;&#x53CB;&#x5708;&#x7684;&#x4E2A;&#x6570;&#xFF1B;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x9996;&#x5148;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;K&#xFF08;&lt;=1000&#xFF09;&#xFF0C;&#x4E3A;&#x670B;&#x53CB;&#x5708;&#x4E2D;&#x7684;&#x4EBA;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5217;&#x51FA;&#x4E00;&#x4E2A;&#x670B;&#x53CB;&#x5708;&#x5185;&#x7684;&#x6240;&#x6709;&#x4EBA;&#x2014;&#x2014;&#x4E3A;&#x65B9;&#x4FBF;&#x8D77;&#x89C1;&#xFF0C;&#x6BCF;&#x4EBA;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;ID&#x53F7;&#xFF0C;&#x4E3A;5&#x4F4D;&#x6570;&#x5B57;&#xFF08;&#x4ECE;00000&#x5230;99999&#xFF09;&#xFF0C;ID&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF1B;&#x4E4B;&#x540E;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;M&#xFF08;&lt;=10000&#xFF09;&#xFF0C;&#x4E3A;&#x5F85;&#x67E5;&#x8BE2;&#x7684;&#x4EBA;&#x6570;&#xFF1B;&#x968F;&#x540E;&#x4E00;&#x884C;&#x4E2D;&#x5217;&#x51FA;M&#x4E2A;&#x5F85;&#x67E5;&#x8BE2;&#x7684;ID&#xFF0C;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x6CA1;&#x6709;&#x670B;&#x53CB;&#x7684;&#x4EBA;&#x53EF;&#x4EE5;&#x662F;&#x6839;&#x672C;&#x6CA1;&#x5B89;&#x88C5;&#x201C;&#x670B;&#x53CB;&#x5708;&#x201D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x53EA;&#x6709;&#x81EA;&#x5DF1;&#x4E00;&#x4E2A;&#x4EBA;&#x5728;&#x670B;&#x53CB;&#x5708;&#x7684;&#x4EBA;&#x3002;&#x867D;&#x7136;&#x6709;&#x4E2A;&#x522B;&#x81EA;&#x604B;&#x72C2;&#x4F1A;&#x81EA;&#x5DF1;&#x628A;&#x81EA;&#x5DF1;&#x53CD;&#x590D;&#x52A0;&#x8FDB;&#x670B;&#x53CB;&#x5708;&#xFF0C;&#x4F46;&#x9898;&#x76EE;&#x4FDD;&#x8BC1;&#x6240;&#x6709;K&#x8D85;&#x8FC7;1&#x7684;&#x670B;&#x53CB;&#x5708;&#x91CC;&#x90FD;&#x81F3;&#x5C11;&#x6709;2&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x4EBA;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6309;&#x8F93;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x90A3;&#x4E9B;&#x5E05;&#x5230;&#x6CA1;&#x670B;&#x53CB;&#x7684;&#x4EBA;&#x3002;ID&#x95F4;&#x7528;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x884C;&#x7684;&#x9996;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4EBA;&#x592A;&#x5E05;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;No one is handsome&#x201D;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x540C;&#x4E00;&#x4E2A;&#x4EBA;&#x53EF;&#x4EE5;&#x88AB;&#x67E5;&#x8BE2;&#x591A;&#x6B21;&#xFF0C;&#x4F46;&#x53EA;&#x8F93;&#x51FA;&#x4E00;&#x6B21;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;33 11111 22222 555552 33333 444444 55555 66666 99999 77777855555 44444 10000 88888 22222 11111 23333 88888 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;10000 88888 23333 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;33 11111 22222 555552 33333 444444 55555 66666 99999 77777455555 44444 22222 11111 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;No one is handsome 1234567891011121314151617181920212223242526272829303132333435#include &lt;iostream&gt;#include &lt;set&gt;using namespace std;int main() { int a, b, c; cin &gt;&gt; a; set&lt;string&gt; s, ans; string str; for(int i = 0; i &lt; a; i++) { cin &gt;&gt; b; if(b &gt;= 2) { for(int j = 0; j &lt; b; j++) { cin &gt;&gt; str; s.insert(str); } } else { cin &gt;&gt; str; } } cin &gt;&gt; c; int flag = 0; for(int i = 0; i &lt; c; i++) { cin &gt;&gt; str; if(s.find(str) == s.end() &amp;&amp; ans.find(str) == ans.end()) { ans.insert(str); if(flag == 1) cout &lt;&lt; &quot; &quot;; cout &lt;&lt; str; flag = 1; } } if(flag == 0) cout &lt;&lt; &quot;No one is handsome&quot;; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-019. 谁先倒]]></title>
    <url>%2F2018%2F03%2F24%2FL1-019.%E8%B0%81%E5%85%88%E5%80%92%2F</url>
    <content type="text"><![CDATA[L1-019. &#x8C01;&#x5148;&#x5012;&#x5212;&#x62F3;&#x662F;&#x53E4;&#x8001;&#x4E2D;&#x56FD;&#x9152;&#x6587;&#x5316;&#x7684;&#x4E00;&#x4E2A;&#x6709;&#x8DA3;&#x7684;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x3002;&#x9152;&#x684C;&#x4E0A;&#x4E24;&#x4EBA;&#x5212;&#x62F3;&#x7684;&#x65B9;&#x6CD5;&#x4E3A;&#xFF1A;&#x6BCF;&#x4EBA;&#x53E3;&#x4E2D;&#x558A;&#x51FA;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#xFF0C;&#x540C;&#x65F6;&#x7528;&#x624B;&#x6BD4;&#x5212;&#x51FA;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x3002;&#x5982;&#x679C;&#x8C01;&#x6BD4;&#x5212;&#x51FA;&#x7684;&#x6570;&#x5B57;&#x6B63;&#x597D;&#x7B49;&#x4E8E;&#x4E24;&#x4EBA;&#x558A;&#x51FA;&#x7684;&#x6570;&#x5B57;&#x4E4B;&#x548C;&#xFF0C;&#x8C01;&#x5C31;&#x8F93;&#x4E86;&#xFF0C;&#x8F93;&#x5BB6;&#x7F5A;&#x4E00;&#x676F;&#x9152;&#x3002;&#x4E24;&#x4EBA;&#x540C;&#x8D62;&#x6216;&#x4E24;&#x4EBA;&#x540C;&#x8F93;&#x5219;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x8F6E;&#xFF0C;&#x76F4;&#x5230;&#x552F;&#x4E00;&#x7684;&#x8D62;&#x5BB6;&#x51FA;&#x73B0;&#x3002; &#x4E0B;&#x9762;&#x7ED9;&#x51FA;&#x7532;&#x3001;&#x4E59;&#x4E24;&#x4EBA;&#x7684;&#x9152;&#x91CF;&#xFF08;&#x6700;&#x591A;&#x80FD;&#x559D;&#x591A;&#x5C11;&#x676F;&#x4E0D;&#x5012;&#xFF09;&#x548C;&#x5212;&#x62F3;&#x8BB0;&#x5F55;&#xFF0C;&#x8BF7;&#x4F60;&#x5224;&#x65AD;&#x4E24;&#x4E2A;&#x4EBA;&#x8C01;&#x5148;&#x5012;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x5148;&#x540E;&#x7ED9;&#x51FA;&#x7532;&#x3001;&#x4E59;&#x4E24;&#x4EBA;&#x7684;&#x9152;&#x91CF;&#xFF08;&#x4E0D;&#x8D85;&#x8FC7;100&#x7684;&#x975E;&#x8D1F;&#x6574;&#x6570;&#xFF09;&#xFF0C;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002;&#x4E0B;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=100&#xFF09;&#xFF0C;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x8F6E;&#x5212;&#x62F3;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;&#xFF1A; &#x7532;&#x558A; &#x7532;&#x5212; &#x4E59;&#x558A; &#x4E59;&#x5212; &#x5176;&#x4E2D;&#x201C;&#x558A;&#x201D;&#x662F;&#x558A;&#x51FA;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x201C;&#x5212;&#x201D;&#x662F;&#x5212;&#x51FA;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x5747;&#x4E3A;&#x4E0D;&#x8D85;&#x8FC7;100&#x7684;&#x6B63;&#x6574;&#x6570;&#xFF08;&#x4E24;&#x53EA;&#x624B;&#x4E00;&#x8D77;&#x5212;&#xFF09;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x7B2C;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5148;&#x5012;&#x4E0B;&#x7684;&#x90A3;&#x4E2A;&#x4EBA;&#xFF1A;A&#x4EE3;&#x8868;&#x7532;&#xFF0C;B&#x4EE3;&#x8868;&#x4E59;&#x3002;&#x7B2C;&#x4E8C;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x6CA1;&#x5012;&#x7684;&#x90A3;&#x4E2A;&#x4EBA;&#x559D;&#x4E86;&#x591A;&#x5C11;&#x676F;&#x3002;&#x9898;&#x76EE;&#x4FDD;&#x8BC1;&#x6709;&#x4E00;&#x4E2A;&#x4EBA;&#x5012;&#x4E0B;&#x3002;&#x6CE8;&#x610F;&#x7A0B;&#x5E8F;&#x5904;&#x7406;&#x5230;&#x6709;&#x4EBA;&#x5012;&#x4E0B;&#x5C31;&#x7EC8;&#x6B62;&#xFF0C;&#x540E;&#x9762;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x5FC5;&#x5904;&#x7406;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;1 168 10 9 125 10 5 103 8 5 1212 18 1 134 16 12 1515 1 1 16 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;A1 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main() { int a, b, c; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c; int arr[c][2], brr[c][2]; for (int i = 0; i &lt; c; ++i) { cin &gt;&gt; arr[i][0] &gt;&gt; arr[i][1] &gt;&gt; brr[i][0] &gt;&gt; brr[i][1]; } int countA = 0, countB = 0; for (int i = 0; i &lt; c; ++i) { if ((arr[i][0] + brr[i][0]) == arr[i][1] &amp;&amp; (arr[i][0] + brr[i][0]) == brr[i][1]) { continue; } if ((arr[i][0] + brr[i][0]) == arr[i][1]) { countA++; } if ((arr[i][0] + brr[i][0]) == brr[i][1]) { countB++; } if (countA &gt; a) { cout &lt;&lt; &apos;A&apos; &lt;&lt; endl; cout &lt;&lt; countB &lt;&lt; endl; break; } if (countB &gt; b) { cout &lt;&lt; &apos;B&apos; &lt;&lt; endl; cout &lt;&lt; countA &lt;&lt; endl; break; } } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-018. 大笨钟]]></title>
    <url>%2F2018%2F03%2F24%2FL1-018.%E5%A4%A7%E7%AC%A8%E9%92%9F%2F</url>
    <content type="text"><![CDATA[L1-018. &#x5927;&#x7B28;&#x949F;&#x5FAE;&#x535A;&#x4E0A;&#x6709;&#x4E2A;&#x81EA;&#x79F0;&#x201C;&#x5927;&#x7B28;&#x949F;V&#x201D;&#x7684;&#x5BB6;&#x4F19;&#xFF0C;&#x6BCF;&#x5929;&#x6572;&#x949F;&#x50AC;&#x4FC3;&#x7801;&#x519C;&#x4EEC;&#x7231;&#x60DC;&#x8EAB;&#x4F53;&#x65E9;&#x70B9;&#x7761;&#x89C9;&#x3002;&#x4E0D;&#x8FC7;&#x7531;&#x4E8E;&#x7B28;&#x949F;&#x81EA;&#x5DF1;&#x4F5C;&#x606F;&#x4E5F;&#x4E0D;&#x662F;&#x5F88;&#x89C4;&#x5F8B;&#xFF0C;&#x6240;&#x4EE5;&#x6572;&#x949F;&#x5E76;&#x4E0D;&#x5B9A;&#x65F6;&#x3002;&#x4E00;&#x822C;&#x6572;&#x949F;&#x7684;&#x70B9;&#x6570;&#x662F;&#x6839;&#x636E;&#x6572;&#x949F;&#x65F6;&#x95F4;&#x800C;&#x5B9A;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6B63;&#x597D;&#x5728;&#x67D0;&#x4E2A;&#x6574;&#x70B9;&#x6572;&#xFF0C;&#x90A3;&#x4E48;&#x201C;&#x5F53;&#x201D;&#x6570;&#x5C31;&#x7B49;&#x4E8E;&#x90A3;&#x4E2A;&#x6574;&#x70B9;&#x6570;&#xFF1B;&#x5982;&#x679C;&#x8FC7;&#x4E86;&#x6574;&#x70B9;&#xFF0C;&#x5C31;&#x6572;&#x4E0B;&#x4E00;&#x4E2A;&#x6574;&#x70B9;&#x6570;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x867D;&#x7136;&#x4E00;&#x5929;&#x6709;24&#x5C0F;&#x65F6;&#xFF0C;&#x949F;&#x5374;&#x662F;&#x53EA;&#x5728;&#x540E;&#x534A;&#x5929;&#x6572;1~12&#x4E0B;&#x3002;&#x4F8B;&#x5982;&#x5728;23:00&#x6572;&#x949F;&#xFF0C;&#x5C31;&#x662F;&#x201C;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x201D;&#xFF0C;&#x800C;&#x5230;&#x4E86;23:01&#x5C31;&#x4F1A;&#x662F;&#x201C;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x5F53;&#x201D;&#x3002;&#x5728;&#x5348;&#x591C;00:00&#x5230;&#x4E2D;&#x5348;12:00&#x671F;&#x95F4;&#xFF08;&#x7AEF;&#x70B9;&#x65F6;&#x95F4;&#x5305;&#x62EC;&#x5728;&#x5185;&#xFF09;&#xFF0C;&#x7B28;&#x949F;&#x662F;&#x4E0D;&#x6572;&#x7684;&#x3002; &#x4E0B;&#x9762;&#x5C31;&#x8BF7;&#x4F60;&#x5199;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF0C;&#x6839;&#x636E;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x66FF;&#x5927;&#x7B28;&#x949F;&#x6572;&#x949F;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x6309;&#x7167;&#x201C;hh:mm&#x201D;&#x7684;&#x683C;&#x5F0F;&#x7ED9;&#x51FA;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x3002;&#x5176;&#x4E2D;hh&#x662F;&#x5C0F;&#x65F6;&#xFF0C;&#x5728;00&#x5230;23&#x4E4B;&#x95F4;&#xFF1B;mm&#x662F;&#x5206;&#x949F;&#xFF0C;&#x5728;00&#x5230;59&#x4E4B;&#x95F4;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6839;&#x636E;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x66FF;&#x5927;&#x7B28;&#x949F;&#x6572;&#x949F;&#xFF0C;&#x5373;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x76F8;&#x5E94;&#x6570;&#x91CF;&#x4E2A;&#x201C;Dang&#x201D;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x662F;&#x6572;&#x949F;&#x671F;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#xFF1A; Only hh:mm. Too early to Dang.&#x5176;&#x4E2D;&#x201C;hh:mm&#x201D;&#x662F;&#x8F93;&#x5165;&#x7684;&#x65F6;&#x95F4;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;19:05 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;DangDangDangDangDangDangDangDang &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;07:05 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;Only 07:05. Too early to Dang. 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main() { int a,b; scanf(&quot;%d:%d&quot;, &amp;a, &amp;b); if (a &gt;= 0 &amp;&amp; (a &lt; 12 || (a == 12 &amp;&amp; b == 0))) { if (a &lt; 10) { if (b &lt; 10) { cout &lt;&lt; &quot;Only 0&quot; &lt;&lt; a &lt;&lt; &quot;:0&quot; &lt;&lt; b &lt;&lt; &quot;. Too early to Dang.&quot; &lt;&lt; endl; } else { cout &lt;&lt; &quot;Only 0&quot; &lt;&lt; a &lt;&lt; &quot;:&quot; &lt;&lt; b &lt;&lt; &quot;. Too early to Dang.&quot; &lt;&lt; endl; } } else { if (b &lt; 10) { cout &lt;&lt; &quot;Only &quot; &lt;&lt; a &lt;&lt; &quot;:0&quot; &lt;&lt; b &lt;&lt; &quot;. Too early to Dang.&quot; &lt;&lt; endl; } else { cout &lt;&lt; &quot;Only &quot; &lt;&lt; a &lt;&lt; &quot;:&quot; &lt;&lt; b &lt;&lt; &quot;. Too early to Dang.&quot; &lt;&lt; endl; } } } else { int c = a % 12; if (b == 0) { for (int i = 0; i &lt; c; ++i) { cout &lt;&lt; &quot;Dang&quot;; } cout &lt;&lt; endl; } else { for (int i = 0; i &lt;= c; ++i) { cout &lt;&lt; &quot;Dang&quot;; } cout &lt;&lt; endl; } } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-017. 到底有多二]]></title>
    <url>%2F2018%2F03%2F24%2FL1-017.%E5%88%B0%E5%BA%95%E6%9C%89%E5%A4%9A%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[L1-017. &#x5230;&#x5E95;&#x6709;&#x591A;&#x4E8C;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#x201C;&#x72AF;&#x4E8C;&#x7684;&#x7A0B;&#x5EA6;&#x201D;&#x5B9A;&#x4E49;&#x4E3A;&#x8BE5;&#x6570;&#x5B57;&#x4E2D;&#x5305;&#x542B;2&#x7684;&#x4E2A;&#x6570;&#x4E0E;&#x5176;&#x4F4D;&#x6570;&#x7684;&#x6BD4;&#x503C;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x6570;&#x662F;&#x8D1F;&#x6570;&#xFF0C;&#x5219;&#x7A0B;&#x5EA6;&#x589E;&#x52A0;0.5&#x500D;&#xFF1B;&#x5982;&#x679C;&#x8FD8;&#x662F;&#x4E2A;&#x5076;&#x6570;&#xFF0C;&#x5219;&#x518D;&#x589E;&#x52A0;1&#x500D;&#x3002;&#x4F8B;&#x5982;&#x6570;&#x5B57;&#x201C;-13142223336&#x201D;&#x662F;&#x4E2A;11&#x4F4D;&#x6570;&#xFF0C;&#x5176;&#x4E2D;&#x6709;3&#x4E2A;2&#xFF0C;&#x5E76;&#x4E14;&#x662F;&#x8D1F;&#x6570;&#xFF0C;&#x4E5F;&#x662F;&#x5076;&#x6570;&#xFF0C;&#x5219;&#x5B83;&#x7684;&#x72AF;&#x4E8C;&#x7A0B;&#x5EA6;&#x8BA1;&#x7B97;&#x4E3A;&#xFF1A;3/111.52*100%&#xFF0C;&#x7EA6;&#x4E3A;81.82%&#x3002;&#x672C;&#x9898;&#x5C31;&#x8BF7;&#x4F60;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x7ED9;&#x5B9A;&#x6574;&#x6570;&#x5230;&#x5E95;&#x6709;&#x591A;&#x4E8C;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;50&#x4F4D;&#x7684;&#x6574;&#x6570;N&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;N&#x72AF;&#x4E8C;&#x7684;&#x7A0B;&#x5EA6;&#xFF0C;&#x4FDD;&#x7559;&#x5C0F;&#x6570;&#x70B9;&#x540E;&#x4E24;&#x4F4D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;-13142223336 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;81.82% 12345678910111213141516171819202122232425262728import java.text.DecimalFormat;import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner in = new Scanner(System.in); String s = in.nextLine(); int r = 0; for (int i = 0; i &lt; s.length(); i++) { if (s.charAt(i) == &apos;2&apos;) r++; } double a = 1.0; int leng = s.length(); if (s.charAt(0) == &apos;-&apos;) { a = 1.5; leng = leng - 1; } int b = 1; if ((s.charAt(s.length()-1) - &apos;0&apos;) % 2 == 0) { b = 2; } DecimalFormat df = new DecimalFormat(&quot;0.00&quot;); System.out.println(df.format(((double)r/leng)*a*b*100) + &quot;%&quot;); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-016. 查验身份证]]></title>
    <url>%2F2018%2F03%2F23%2FL1-016.%E6%9F%A5%E9%AA%8C%E8%BA%AB%E4%BB%BD%E8%AF%81%2F</url>
    <content type="text"><![CDATA[L1-016. &#x67E5;&#x9A8C;&#x8EAB;&#x4EFD;&#x8BC1;&#x4E00;&#x4E2A;&#x5408;&#x6CD5;&#x7684;&#x8EAB;&#x4EFD;&#x8BC1;&#x53F7;&#x7801;&#x7531;17&#x4F4D;&#x5730;&#x533A;&#x3001;&#x65E5;&#x671F;&#x7F16;&#x53F7;&#x548C;&#x987A;&#x5E8F;&#x7F16;&#x53F7;&#x52A0;1&#x4F4D;&#x6821;&#x9A8C;&#x7801;&#x7EC4;&#x6210;&#x3002;&#x6821;&#x9A8C;&#x7801;&#x7684;&#x8BA1;&#x7B97;&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A; &#x9996;&#x5148;&#x5BF9;&#x524D;17&#x4F4D;&#x6570;&#x5B57;&#x52A0;&#x6743;&#x6C42;&#x548C;&#xFF0C;&#x6743;&#x91CD;&#x5206;&#x914D;&#x4E3A;&#xFF1A;{7&#xFF0C;9&#xFF0C;10&#xFF0C;5&#xFF0C;8&#xFF0C;4&#xFF0C;2&#xFF0C;1&#xFF0C;6&#xFF0C;3&#xFF0C;7&#xFF0C;9&#xFF0C;10&#xFF0C;5&#xFF0C;8&#xFF0C;4&#xFF0C;2}&#xFF1B;&#x7136;&#x540E;&#x5C06;&#x8BA1;&#x7B97;&#x7684;&#x548C;&#x5BF9;11&#x53D6;&#x6A21;&#x5F97;&#x5230;&#x503C;Z&#xFF1B;&#x6700;&#x540E;&#x6309;&#x7167;&#x4EE5;&#x4E0B;&#x5173;&#x7CFB;&#x5BF9;&#x5E94;Z&#x503C;&#x4E0E;&#x6821;&#x9A8C;&#x7801;M&#x7684;&#x503C;&#xFF1A; Z&#xFF1A;0 1 2 3 4 5 6 7 8 9 10M&#xFF1A;1 0 X 9 8 7 6 5 4 3 2 &#x73B0;&#x5728;&#x7ED9;&#x5B9A;&#x4E00;&#x4E9B;&#x8EAB;&#x4EFD;&#x8BC1;&#x53F7;&#x7801;&#xFF0C;&#x8BF7;&#x4F60;&#x9A8C;&#x8BC1;&#x6821;&#x9A8C;&#x7801;&#x7684;&#x6709;&#x6548;&#x6027;&#xFF0C;&#x5E76;&#x8F93;&#x51FA;&#x6709;&#x95EE;&#x9898;&#x7684;&#x53F7;&#x7801;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;= 100&#xFF09;&#x662F;&#x8F93;&#x5165;&#x7684;&#x8EAB;&#x4EFD;&#x8BC1;&#x53F7;&#x7801;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;1&#x4E2A;18&#x4F4D;&#x8EAB;&#x4EFD;&#x8BC1;&#x53F7;&#x7801;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6309;&#x7167;&#x8F93;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x6BCF;&#x884C;&#x8F93;&#x51FA;1&#x4E2A;&#x6709;&#x95EE;&#x9898;&#x7684;&#x8EAB;&#x4EFD;&#x8BC1;&#x53F7;&#x7801;&#x3002;&#x8FD9;&#x91CC;&#x5E76;&#x4E0D;&#x68C0;&#x9A8C;&#x524D;17&#x4F4D;&#x662F;&#x5426;&#x5408;&#x7406;&#xFF0C;&#x53EA;&#x68C0;&#x67E5;&#x524D;17&#x4F4D;&#x662F;&#x5426;&#x5168;&#x4E3A;&#x6570;&#x5B57;&#x4E14;&#x6700;&#x540E;1&#x4F4D;&#x6821;&#x9A8C;&#x7801;&#x8BA1;&#x7B97;&#x51C6;&#x786E;&#x3002;&#x5982;&#x679C;&#x6240;&#x6709;&#x53F7;&#x7801;&#x90FD;&#x6B63;&#x5E38;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;All passed&#x201D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;432012419880824005612010X19890101123411010819671130186637070419881216001X &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;12010X19890101123411010819671130186637070419881216001X &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;2320124198808240056110108196711301862 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;All passed 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;iostream&gt;using namespace std;int main() { int arr[17] = {7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2}; int m[11] = {1,0,10,9,8,7,6,5,4,3,2}; int n; bool isvisted = true; cin &gt;&gt; n; string s[n]; for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; s[i]; } for (int i = 0; i &lt; n; ++i) { int sum = 0; int j; for (j = 0; j &lt; 17; ++j) { if (!isdigit(s[i][j])) { cout &lt;&lt; s[i] &lt;&lt; endl; isvisted = false; break; } else { sum += (s[i][j] - &apos;0&apos;) * arr[j]; } } if (j == 17) { if (s[i][j] == &apos;X&apos;) { if (m[sum%11] != 10) { cout &lt;&lt; s[i] &lt;&lt; endl; isvisted = false; } } else { if (m[sum%11] != s[i][j] - &apos;0&apos;) { cout &lt;&lt; s[i] &lt;&lt; endl; isvisted = false; } } } } if (isvisted) { cout &lt;&lt; &quot;All passed&quot; &lt;&lt; endl; } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-015. 跟奥巴马一起画方块]]></title>
    <url>%2F2018%2F03%2F23%2FL1-015.%E8%B7%9F%E5%A5%A5%E5%B7%B4%E9%A9%AC%E4%B8%80%E8%B5%B7%E7%94%BB%E6%96%B9%E5%9D%97%2F</url>
    <content type="text"><![CDATA[L1-015. &#x8DDF;&#x5965;&#x5DF4;&#x9A6C;&#x4E00;&#x8D77;&#x753B;&#x65B9;&#x5757;&#x7F8E;&#x56FD;&#x603B;&#x7EDF;&#x5965;&#x5DF4;&#x9A6C;&#x4E0D;&#x4EC5;&#x547C;&#x5401;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x5B66;&#x4E60;&#x7F16;&#x7A0B;&#xFF0C;&#x751A;&#x81F3;&#x4EE5;&#x8EAB;&#x4F5C;&#x5219;&#x7F16;&#x5199;&#x4EE3;&#x7801;&#xFF0C;&#x6210;&#x4E3A;&#x7F8E;&#x56FD;&#x5386;&#x53F2;&#x4E0A;&#x9996;&#x4F4D;&#x7F16;&#x5199;&#x8BA1;&#x7B97;&#x673A;&#x4EE3;&#x7801;&#x7684;&#x603B;&#x7EDF;&#x3002;2014&#x5E74;&#x5E95;&#xFF0C;&#x4E3A;&#x5E86;&#x795D;&#x201C;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x6559;&#x80B2;&#x5468;&#x201D;&#x6B63;&#x5F0F;&#x542F;&#x52A8;&#xFF0C;&#x5965;&#x5DF4;&#x9A6C;&#x7F16;&#x5199;&#x4E86;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x4EE3;&#x7801;&#xFF1A;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x753B;&#x4E00;&#x4E2A;&#x6B63;&#x65B9;&#x5F62;&#x3002;&#x73B0;&#x5728;&#x4F60;&#x4E5F;&#x8DDF;&#x4ED6;&#x4E00;&#x8D77;&#x753B;&#x5427;&#xFF01; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x6B63;&#x65B9;&#x5F62;&#x8FB9;&#x957F;N&#xFF08;3&lt;=N&lt;=21&#xFF09;&#x548C;&#x7EC4;&#x6210;&#x6B63;&#x65B9;&#x5F62;&#x8FB9;&#x7684;&#x67D0;&#x79CD;&#x5B57;&#x7B26;C&#xFF0C;&#x95F4;&#x9694;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x51FA;&#x7531;&#x7ED9;&#x5B9A;&#x5B57;&#x7B26;C&#x753B;&#x51FA;&#x7684;&#x6B63;&#x65B9;&#x5F62;&#x3002;&#x4F46;&#x662F;&#x6CE8;&#x610F;&#x5230;&#x884C;&#x95F4;&#x8DDD;&#x6BD4;&#x5217;&#x95F4;&#x8DDD;&#x5927;&#xFF0C;&#x6240;&#x4EE5;&#x4E3A;&#x4E86;&#x8BA9;&#x7ED3;&#x679C;&#x770B;&#x4E0A;&#x53BB;&#x66F4;&#x50CF;&#x6B63;&#x65B9;&#x5F62;&#xFF0C;&#x6211;&#x4EEC;&#x8F93;&#x51FA;&#x7684;&#x884C;&#x6570;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5217;&#x6570;&#x7684;50%&#xFF08;&#x56DB;&#x820D;&#x4E94;&#x5165;&#x53D6;&#x6574;&#xFF09;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;10 a &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 1234567891011121314151617#include &lt;iostream&gt;using namespace std;int main() { int n; char c; cin &gt;&gt; n &gt;&gt; c; for (int i = 0; i &lt; (n + 1)/ 2; ++i) { for (int j = 0; j &lt; n; ++j) { cout &lt;&lt; c; } cout &lt;&lt; endl; } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-014. 简单题]]></title>
    <url>%2F2018%2F03%2F23%2FL1-014.%E7%AE%80%E5%8D%95%E9%A2%98%2F</url>
    <content type="text"><![CDATA[&#x8FD9;&#x6B21;&#x771F;&#x7684;&#x6CA1;&#x9A97;&#x4F60; &#x2014;&#x2014; &#x8FD9;&#x9053;&#x8D85;&#x7EA7;&#x7B80;&#x5355;&#x7684;&#x9898;&#x76EE;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8F93;&#x5165;&#x3002; &#x4F60;&#x53EA;&#x9700;&#x8981;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x4E8B;&#x5B9E;&#xFF1A;&#x201C;This is a simple problem.&#x201D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; 123456789#include &lt;iostream&gt;using namespace std;int main() { cout &lt;&lt; &quot;This is a simple problem.&quot;; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-013. 计算阶乘和]]></title>
    <url>%2F2018%2F03%2F23%2FL1-013.%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98%E5%92%8C%2F</url>
    <content type="text"><![CDATA[L1-013. &#x8BA1;&#x7B97;&#x9636;&#x4E58;&#x548C;&#x5BF9;&#x4E8E;&#x7ED9;&#x5B9A;&#x7684;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x9700;&#x8981;&#x4F60;&#x8BA1;&#x7B97; S = 1! + 2! + 3! + &#x2026; + N!&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;10&#x7684;&#x6B63;&#x6574;&#x6570;N&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;S&#x7684;&#x503C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;3 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;9 123456789101112131415161718#include &lt;iostream&gt;using namespace std;int main() { int n; cin &gt;&gt; n; int sum = 0; for (int i = 1; i &lt;= n; ++i) { int tmp = 1; for (int j = i; j &gt; 0; --j) { tmp = tmp * j; } sum += tmp; } cout &lt;&lt; sum; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-012. 计算指数]]></title>
    <url>%2F2018%2F03%2F23%2FL1-012.%E8%AE%A1%E7%AE%97%E6%8C%87%E6%95%B0%2F</url>
    <content type="text"><![CDATA[L1-012. &#x8BA1;&#x7B97;&#x6307;&#x6570;&#x771F;&#x7684;&#x6CA1;&#x9A97;&#x4F60;&#xFF0C;&#x8FD9;&#x9053;&#x624D;&#x662F;&#x7B80;&#x5355;&#x9898; &#x2014;&#x2014; &#x5BF9;&#x4EFB;&#x610F;&#x7ED9;&#x5B9A;&#x7684;&#x4E0D;&#x8D85;&#x8FC7;10&#x7684;&#x6B63;&#x6574;&#x6570;n&#xFF0C;&#x8981;&#x6C42;&#x4F60;&#x8F93;&#x51FA;2n&#x3002;&#x4E0D;&#x96BE;&#x5427;&#xFF1F; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;10&#x7684;&#x6B63;&#x6574;&#x6570;n&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6309;&#x7167;&#x683C;&#x5F0F;&#x201C;2^n = &#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#x201D;&#x8F93;&#x51FA;2n&#x7684;&#x503C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;5 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;2^5 = 32 12345678910111213#include &lt;iostream&gt;#include &lt;math.h&gt;using namespace std;int main() { int n; cin &gt;&gt; n; cout &lt;&lt; 2 &lt;&lt; &quot;^&quot; &lt;&lt; n &lt;&lt; &quot; = &quot; &lt;&lt; pow(2,n); return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-011. A-B]]></title>
    <url>%2F2018%2F03%2F23%2FL1-011.A-B%2F</url>
    <content type="text"><![CDATA[L1-011. A-B&#x672C;&#x9898;&#x8981;&#x6C42;&#x4F60;&#x8BA1;&#x7B97;A-B&#x3002;&#x4E0D;&#x8FC7;&#x9EBB;&#x70E6;&#x7684;&#x662F;&#xFF0C;A&#x548C;B&#x90FD;&#x662F;&#x5B57;&#x7B26;&#x4E32; &#x2014;&#x2014; &#x5373;&#x4ECE;&#x5B57;&#x7B26;&#x4E32;A&#x4E2D;&#x628A;&#x5B57;&#x7B26;&#x4E32;B&#x6240;&#x5305;&#x542B;&#x7684;&#x5B57;&#x7B26;&#x5168;&#x5220;&#x6389;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5B57;&#x7B26;&#x7EC4;&#x6210;&#x7684;&#x5C31;&#x662F;&#x5B57;&#x7B26;&#x4E32;A-B&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;2&#x884C;&#x4E2D;&#x5148;&#x540E;&#x7ED9;&#x51FA;&#x5B57;&#x7B26;&#x4E32;A&#x548C;B&#x3002;&#x4E24;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x90FD;&#x4E0D;&#x8D85;&#x8FC7;104&#xFF0C;&#x5E76;&#x4E14;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x90FD;&#x662F;&#x7531;&#x53EF;&#x89C1;&#x7684;ASCII&#x7801;&#x548C;&#x7A7A;&#x767D;&#x5B57;&#x7B26;&#x7EC4;&#x6210;&#xFF0C;&#x6700;&#x540E;&#x4EE5;&#x6362;&#x884C;&#x7B26;&#x7ED3;&#x675F;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6253;&#x5370;&#x51FA;A-B&#x7684;&#x7ED3;&#x679C;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;I love GPLT! It&#x2019;s a fun game!aeiou &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;I lv GPLT! It&#x2019;s fn gm! 123456789101112131415161718192021222324#include &lt;iostream&gt;using namespace std;int main() { string s, a; getline(cin, s); getline(cin, a); bool isflag[256]; for (int i = 0; i &lt; 256; ++i) { isflag[i] = false; } for (int i = 0; i &lt; a.length(); ++i) { isflag[a[i]] = true; } for (int i = 0; i &lt; s.length(); ++i) { if (!isflag[s[i]]) { cout &lt;&lt; s[i]; } } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-010. 比较大小]]></title>
    <url>%2F2018%2F03%2F23%2FL1-010.%E6%AF%94%E8%BE%83%E5%A4%A7%E5%B0%8F%2F</url>
    <content type="text"><![CDATA[L1-010. &#x6BD4;&#x8F83;&#x5927;&#x5C0F;&#x672C;&#x9898;&#x8981;&#x6C42;&#x5C06;&#x8F93;&#x5165;&#x7684;&#x4EFB;&#x610F;3&#x4E2A;&#x6574;&#x6570;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x8F93;&#x51FA;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;3&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5176;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x5C06;3&#x4E2A;&#x6574;&#x6570;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x8F93;&#x51FA;&#xFF0C;&#x5176;&#x95F4;&#x4EE5;&#x201C;-&gt;&#x201D;&#x76F8;&#x8FDE;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;4 2 8 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;2-&gt;4-&gt;8 1234567891011121314#include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;int main() { int arr[3]; cin &gt;&gt; arr[0] &gt;&gt; arr[1] &gt;&gt; arr[2]; sort(arr, arr+3); for (int i = 0; i &lt; 2; ++i) { cout &lt;&lt; arr[i] &lt;&lt; &quot;-&gt;&quot;; } cout &lt;&lt; arr[2]; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-009. N个数求和]]></title>
    <url>%2F2018%2F03%2F23%2FL1-009.N%E4%B8%AA%E6%95%B0%E6%B1%82%E5%92%8C%2F</url>
    <content type="text"><![CDATA[L1-009. N&#x4E2A;&#x6570;&#x6C42;&#x548C;&#x672C;&#x9898;&#x7684;&#x8981;&#x6C42;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x6C42;N&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x548C;&#x3002;&#x9EBB;&#x70E6;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E9B;&#x6570;&#x5B57;&#x662F;&#x4EE5;&#x6709;&#x7406;&#x6570;&#x201C;&#x5206;&#x5B50;/&#x5206;&#x6BCD;&#x201D;&#x7684;&#x5F62;&#x5F0F;&#x7ED9;&#x51FA;&#x7684;&#xFF0C;&#x4F60;&#x8F93;&#x51FA;&#x7684;&#x548C;&#x4E5F;&#x5FC5;&#x987B;&#x662F;&#x6709;&#x7406;&#x6570;&#x7684;&#x5F62;&#x5F0F;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=100&#xFF09;&#x3002;&#x968F;&#x540E;&#x4E00;&#x884C;&#x6309;&#x683C;&#x5F0F;&#x201C;a1/b1 a2/b2 &#x2026;&#x201D;&#x7ED9;&#x51FA;N&#x4E2A;&#x6709;&#x7406;&#x6570;&#x3002;&#x9898;&#x76EE;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x5206;&#x5B50;&#x548C;&#x5206;&#x6BCD;&#x90FD;&#x5728;&#x957F;&#x6574;&#x578B;&#x8303;&#x56F4;&#x5185;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x8D1F;&#x6570;&#x7684;&#x7B26;&#x53F7;&#x4E00;&#x5B9A;&#x51FA;&#x73B0;&#x5728;&#x5206;&#x5B50;&#x524D;&#x9762;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x51FA;&#x4E0A;&#x8FF0;&#x6570;&#x5B57;&#x548C;&#x7684;&#x6700;&#x7B80;&#x5F62;&#x5F0F; &#x2014;&#x2014; &#x5373;&#x5C06;&#x7ED3;&#x679C;&#x5199;&#x6210;&#x201C;&#x6574;&#x6570;&#x90E8;&#x5206; &#x5206;&#x6570;&#x90E8;&#x5206;&#x201D;&#xFF0C;&#x5176;&#x4E2D;&#x5206;&#x6570;&#x90E8;&#x5206;&#x5199;&#x6210;&#x201C;&#x5206;&#x5B50;/&#x5206;&#x6BCD;&#x201D;&#xFF0C;&#x8981;&#x6C42;&#x5206;&#x5B50;&#x5C0F;&#x4E8E;&#x5206;&#x6BCD;&#xFF0C;&#x4E14;&#x5B83;&#x4EEC;&#x6CA1;&#x6709;&#x516C;&#x56E0;&#x5B50;&#x3002;&#x5982;&#x679C;&#x7ED3;&#x679C;&#x7684;&#x6574;&#x6570;&#x90E8;&#x5206;&#x4E3A;0&#xFF0C;&#x5219;&#x53EA;&#x8F93;&#x51FA;&#x5206;&#x6570;&#x90E8;&#x5206;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A;52/5 4/15 1/30 -2/60 8/3 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A;3 1/3 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A;24/3 2/3 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A;2 &#x8F93;&#x5165;&#x6837;&#x4F8B;3&#xFF1A;31/3 -1/6 1/8 &#x8F93;&#x51FA;&#x6837;&#x4F8B;3&#xFF1A;7/24 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071#include &lt;iostream&gt;#include &lt;stdio.h&gt;using namespace std;int gcd(int a,int b){ //&#x8F97;&#x8F6C;&#x76F8;&#x9664;&#x6CD5; if(a%b==0) return b; else return gcd(b,a%b);}int lcm(int a,int b){ return a*b/gcd(a,b); //&#x6700;&#x5C0F;&#x516C;&#x500D;&#x6570;&#x4E58;&#x6700;&#x5927;&#x516C;&#x7EA6;&#x6570;&#x7B49;&#x4E8E;&#x5B83;&#x4EEC;&#x7684;&#x4E58;&#x79EF;}int main() { int n; cin &gt;&gt; n; long long int fz[n]; long long int fm[n]; for (int i = 0; i &lt; n; ++i) { scanf(&quot;%lld/%lld&quot;,&amp;fz[i], &amp;fm[i]); } for (int i = 0; i &lt; n; ++i) { long long int tmp = gcd(fz[i], fm[i]); fz[i] = fz[i] / tmp; fm[i] = fm[i] / tmp; } long int gd = 1; for (int i = 0; i &lt; n; ++i) { gd = lcm(gd, fm[i]); } for (int i = 0; i &lt; n; ++i) { fz[i] = fz[i] * (gd / fm[i]); } long long int sum = 0; for (int i = 0; i &lt; n; ++i) { sum += fz[i]; } long long int res1 = sum / gd; long long int res2 = sum % gd; long long int res3 = gcd(res2, gd); long long int fz0 = res2 / res3; long long int fm0 = gd / res3; if (res1 == 0) { if (fz0 == 0) { cout &lt;&lt; 0; } else { if (fm0 &lt; 0) { fm0 = -fm0; fz0 = -fz0; } cout &lt;&lt; fz0 &lt;&lt; &quot;/&quot; &lt;&lt; fm0; } } else if (fz0 == 0) { cout &lt;&lt; res1; } else { if (fm0 &lt; 0) { fz0 = -fz0; fm0 = -fm0; } cout &lt;&lt; res1 &lt;&lt; &quot; &quot; &lt;&lt; fz0 &lt;&lt; &quot;/&quot; &lt;&lt; fm0; } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-008. 求整数段和]]></title>
    <url>%2F2018%2F03%2F23%2FL1-008.%E6%B1%82%E6%95%B4%E6%95%B0%E6%AE%B5%E5%92%8C%2F</url>
    <content type="text"><![CDATA[L1-008. &#x6C42;&#x6574;&#x6570;&#x6BB5;&#x548C;&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6574;&#x6570;A&#x548C;B&#xFF0C;&#x8F93;&#x51FA;&#x4ECE;A&#x5230;B&#x7684;&#x6240;&#x6709;&#x6574;&#x6570;&#x4EE5;&#x53CA;&#x8FD9;&#x4E9B;&#x6570;&#x7684;&#x548C;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;2&#x4E2A;&#x6574;&#x6570;A&#x548C;B&#xFF0C;&#x5176;&#x4E2D;-100&lt;=A&lt;=B&lt;=100&#xFF0C;&#x5176;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x9996;&#x5148;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x4ECE;A&#x5230;B&#x7684;&#x6240;&#x6709;&#x6574;&#x6570;&#xFF0C;&#x6BCF;5&#x4E2A;&#x6570;&#x5B57;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x5360;5&#x4E2A;&#x5B57;&#x7B26;&#x5BBD;&#x5EA6;&#xFF0C;&#x5411;&#x53F3;&#x5BF9;&#x9F50;&#x3002;&#x6700;&#x540E;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5168;&#x90E8;&#x6570;&#x5B57;&#x7684;&#x548C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;-3 8 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; -3 -2 -1 0 1 2 3 4 5 6 7 8Sum = 30 1234567891011121314151617181920#include &lt;iostream&gt;#include &lt;stdio.h&gt;using namespace std;int main() { int a, b; cin &gt;&gt; a &gt;&gt; b; int sum = 0; int count = 0; while (a &lt;= b) { for (int i = 0; i &lt; 5 &amp;&amp; a &lt;= b; ++i, ++a) { printf(&quot;%5d&quot;, a); sum += a; } cout &lt;&lt; endl; } cout &lt;&lt; &quot;Sum = &quot; &lt;&lt; sum; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-007. 念数字]]></title>
    <url>%2F2018%2F03%2F23%2FL1-007.%E5%BF%B5%E6%95%B0%E5%AD%97%2F</url>
    <content type="text"><![CDATA[L1-007. &#x5FF5;&#x6570;&#x5B57;&#x8F93;&#x5165;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8F93;&#x51FA;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x5BF9;&#x5E94;&#x7684;&#x62FC;&#x97F3;&#x3002;&#x5F53;&#x6574;&#x6570;&#x4E3A;&#x8D1F;&#x6570;&#x65F6;&#xFF0C;&#x5148;&#x8F93;&#x51FA;&#x201C;fu&#x201D;&#x5B57;&#x3002;&#x5341;&#x4E2A;&#x6570;&#x5B57;&#x5BF9;&#x5E94;&#x7684;&#x62FC;&#x97F3;&#x5982;&#x4E0B;&#xFF1A; 0: ling1: yi2: er3: san4: si5: wu6: liu7: qi8: ba9: jiu &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5982;&#xFF1A; 1234 &#x3002; &#x63D0;&#x793A;&#xFF1A;&#x6574;&#x6570;&#x5305;&#x62EC;&#x8D1F;&#x6570;&#x3001;&#x96F6;&#x548C;&#x6B63;&#x6570;&#x3002;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x8FD9;&#x4E2A;&#x6574;&#x6570;&#x5BF9;&#x5E94;&#x7684;&#x62FC;&#x97F3;&#xFF0C;&#x6BCF;&#x4E2A;&#x6570;&#x5B57;&#x7684;&#x62FC;&#x97F3;&#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x5206;&#x5F00;&#xFF0C;&#x884C;&#x672B;&#x6CA1;&#x6709;&#x6700;&#x540E;&#x7684;&#x7A7A;&#x683C;&#x3002;&#x5982; yi er san si&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;-600 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;fu liu ling ling 123456789101112131415161718import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); String s = scan.nextLine(); String[] strings = {&quot;ling&quot;, &quot;yi&quot;, &quot;er&quot;, &quot;san&quot;, &quot;si&quot;, &quot;wu&quot;, &quot;liu&quot;, &quot;qi&quot;, &quot;ba&quot;, &quot;jiu&quot;}; for (int i = 0; i &lt; s.length() - 1; i++) { if (s.charAt(i) == &apos;-&apos;) { System.out.print(&quot;fu &quot;); } else { System.out.print(strings[s.charAt(i) - &apos;0&apos;] + &quot; &quot;); } } System.out.println(strings[s.charAt(s.length() - 1) - &apos;0&apos;]); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-006. 连续因子]]></title>
    <url>%2F2018%2F03%2F23%2FL1-006.%E8%BF%9E%E7%BB%AD%E5%9B%A0%E5%AD%90%2F</url>
    <content type="text"><![CDATA[L1-006. &#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#x7684;&#x56E0;&#x5B50;&#x4E2D;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x82E5;&#x5E72;&#x8FDE;&#x7EED;&#x7684;&#x6570;&#x5B57;&#x3002;&#x4F8B;&#x5982;630&#x53EF;&#x4EE5;&#x5206;&#x89E3;&#x4E3A;3 * 5 * 6 * 7&#xFF0C;&#x5176;&#x4E2D;5&#x3001;6&#x3001;7&#x5C31;&#x662F;3&#x4E2A;&#x8FDE;&#x7EED;&#x7684;&#x6570;&#x5B57;&#x3002;&#x7ED9;&#x5B9A;&#x4EFB;&#x4E00;&#x6B63;&#x6574;&#x6570;N&#xFF0C;&#x8981;&#x6C42;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#x6C42;&#x51FA;&#x6700;&#x957F;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5E76;&#x8F93;&#x51FA;&#x6700;&#x5C0F;&#x7684;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x5E8F;&#x5217;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;1&lt;N&lt;2^31&#xFF09;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x9996;&#x5148;&#x5728;&#x7B2C;1&#x884C;&#x8F93;&#x51FA;&#x6700;&#x957F;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x7684;&#x4E2A;&#x6570;&#xFF1B;&#x7136;&#x540E;&#x5728;&#x7B2C;2&#x884C;&#x4E2D;&#x6309;&#x201C;&#x56E0;&#x5B50;1* &#x56E0;&#x5B50;2 * &#x2026;&#x2026;* &#x56E0;&#x5B50;k&#x201D;&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x6700;&#x5C0F;&#x7684;&#x8FDE;&#x7EED;&#x56E0;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x5176;&#x4E2D;&#x56E0;&#x5B50;&#x6309;&#x9012;&#x589E;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#xFF0C;1&#x4E0D;&#x7B97;&#x5728;&#x5185;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;630 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;1235*6*7 123456789101112131415161718192021222324252627#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;int main() { unsigned n; cin &gt;&gt; n; int max = sqrt(n); for (int len = 12; len &gt;= 1; len--) { for (int start = 2; start &lt;= max; ++start) { long long int ans = 1; for (int i = start; i - start &lt;= len - 1; ++i) { ans *= i; } if (n % ans == 0) { cout &lt;&lt; len &lt;&lt; endl &lt;&lt; start; for (int i = start + 1; i - start &lt;= len - 1; ++i) { cout &lt;&lt; &quot;*&quot; &lt;&lt; i; } return 0; } } } cout &lt;&lt; 1 &lt;&lt; endl &lt;&lt; n; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-005. 考试座位号]]></title>
    <url>%2F2018%2F03%2F23%2FL1-005.%E8%80%83%E8%AF%95%E5%BA%A7%E4%BD%8D%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[L1-005. &#x8003;&#x8BD5;&#x5EA7;&#x4F4D;&#x53F7;&#x6BCF;&#x4E2A;PAT&#x8003;&#x751F;&#x5728;&#x53C2;&#x52A0;&#x8003;&#x8BD5;&#x65F6;&#x90FD;&#x4F1A;&#x88AB;&#x5206;&#x914D;&#x4E24;&#x4E2A;&#x5EA7;&#x4F4D;&#x53F7;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x8BD5;&#x673A;&#x5EA7;&#x4F4D;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x8003;&#x8BD5;&#x5EA7;&#x4F4D;&#x3002;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8003;&#x751F;&#x5728;&#x5165;&#x573A;&#x65F6;&#x5148;&#x5F97;&#x5230;&#x8BD5;&#x673A;&#x5EA7;&#x4F4D;&#x53F7;&#x7801;&#xFF0C;&#x5165;&#x5EA7;&#x8FDB;&#x5165;&#x8BD5;&#x673A;&#x72B6;&#x6001;&#x540E;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x663E;&#x793A;&#x8BE5;&#x8003;&#x751F;&#x7684;&#x8003;&#x8BD5;&#x5EA7;&#x4F4D;&#x53F7;&#x7801;&#xFF0C;&#x8003;&#x8BD5;&#x65F6;&#x8003;&#x751F;&#x9700;&#x8981;&#x6362;&#x5230;&#x8003;&#x8BD5;&#x5EA7;&#x4F4D;&#x5C31;&#x5EA7;&#x3002;&#x4F46;&#x6709;&#x4E9B;&#x8003;&#x751F;&#x8FDF;&#x5230;&#x4E86;&#xFF0C;&#x8BD5;&#x673A;&#x5DF2;&#x7ECF;&#x7ED3;&#x675F;&#xFF0C;&#x4ED6;&#x4EEC;&#x53EA;&#x80FD;&#x62FF;&#x7740;&#x9886;&#x5230;&#x7684;&#x8BD5;&#x673A;&#x5EA7;&#x4F4D;&#x53F7;&#x7801;&#x6C42;&#x52A9;&#x4E8E;&#x4F60;&#xFF0C;&#x4ECE;&#x540E;&#x53F0;&#x67E5;&#x51FA;&#x4ED6;&#x4EEC;&#x7684;&#x8003;&#x8BD5;&#x5EA7;&#x4F4D;&#x53F7;&#x7801;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=1000&#xFF09;&#xFF0C;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x8003;&#x751F;&#x7684;&#x4FE1;&#x606F;&#xFF1A;&#x201C;&#x51C6;&#x8003;&#x8BC1;&#x53F7; &#x8BD5;&#x673A;&#x5EA7;&#x4F4D;&#x53F7; &#x8003;&#x8BD5;&#x5EA7;&#x4F4D;&#x53F7;&#x201D;&#x3002;&#x5176;&#x4E2D;&#x51C6;&#x8003;&#x8BC1;&#x53F7;&#x7531;14&#x4F4D;&#x6570;&#x5B57;&#x7EC4;&#x6210;&#xFF0C;&#x5EA7;&#x4F4D;&#x4ECE;1&#x5230;N&#x7F16;&#x53F7;&#x3002;&#x8F93;&#x5165;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x4EBA;&#x7684;&#x51C6;&#x8003;&#x8BC1;&#x53F7;&#x90FD;&#x4E0D;&#x540C;&#xFF0C;&#x5E76;&#x4E14;&#x4EFB;&#x4F55;&#x65F6;&#x5019;&#x90FD;&#x4E0D;&#x4F1A;&#x628A;&#x4E24;&#x4E2A;&#x4EBA;&#x5206;&#x914D;&#x5230;&#x540C;&#x4E00;&#x4E2A;&#x5EA7;&#x4F4D;&#x4E0A;&#x3002; &#x8003;&#x751F;&#x4FE1;&#x606F;&#x4E4B;&#x540E;&#xFF0C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;M&#xFF08;&lt;=N&#xFF09;&#xFF0C;&#x968F;&#x540E;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;M&#x4E2A;&#x5F85;&#x67E5;&#x8BE2;&#x7684;&#x8BD5;&#x673A;&#x5EA7;&#x4F4D;&#x53F7;&#x7801;&#xFF0C;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5BF9;&#x5E94;&#x6BCF;&#x4E2A;&#x9700;&#x8981;&#x67E5;&#x8BE2;&#x7684;&#x8BD5;&#x673A;&#x5EA7;&#x4F4D;&#x53F7;&#x7801;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5BF9;&#x5E94;&#x8003;&#x751F;&#x7684;&#x51C6;&#x8003;&#x8BC1;&#x53F7;&#x548C;&#x8003;&#x8BD5;&#x5EA7;&#x4F4D;&#x53F7;&#x7801;&#xFF0C;&#x4E2D;&#x95F4;&#x7528;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;410120150912233 2 410120150912119 4 110120150912126 1 310120150912002 3 223 4 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;10120150912002 210120150912119 1 123456789101112131415161718192021222324252627282930#include &lt;iostream&gt;using namespace std;int main() { int n; cin &gt;&gt; n; string strs[n + 1]; int index[n + 1]; string s; int a; int b; for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; s &gt;&gt; a &gt;&gt; b; strs[a] = s; index[a] = b; } int x; cin &gt;&gt; x; int v[x]; for (int k = 0; k &lt; x; ++k) { cin &gt;&gt; v[k]; } for (int j = 0; j &lt; x; ++j) { a = v[j]; cout &lt;&lt; strs[a] &lt;&lt; &quot; &quot; &lt;&lt; index[a] &lt;&lt; endl; } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-004. 计算摄氏温度]]></title>
    <url>%2F2018%2F03%2F23%2FL1-004.%E8%AE%A1%E7%AE%97%E6%91%84%E6%B0%8F%E6%B8%A9%E5%BA%A6%2F</url>
    <content type="text"><![CDATA[L1-004. &#x8BA1;&#x7B97;&#x6444;&#x6C0F;&#x6E29;&#x5EA6;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;&#x534E;&#x6C0F;&#x6E29;&#x5EA6;F&#xFF0C;&#x672C;&#x9898;&#x8981;&#x6C42;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#xFF0C;&#x8BA1;&#x7B97;&#x5BF9;&#x5E94;&#x7684;&#x6444;&#x6C0F;&#x6E29;&#x5EA6;C&#x3002;&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#xFF1A;C = 5*(F-32)/9&#x3002;&#x9898;&#x76EE;&#x4FDD;&#x8BC1;&#x8F93;&#x5165;&#x4E0E;&#x8F93;&#x51FA;&#x5747;&#x5728;&#x6574;&#x578B;&#x8303;&#x56F4;&#x5185;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x534E;&#x6C0F;&#x6E29;&#x5EA6;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x6309;&#x7167;&#x683C;&#x5F0F;&#x201C;Celsius = C&#x201D;&#x8F93;&#x51FA;&#x5BF9;&#x5E94;&#x7684;&#x6444;&#x6C0F;&#x6E29;&#x5EA6;C&#x7684;&#x6574;&#x6570;&#x503C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;150 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;Celsius = 65 12345678910111213import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); String s = scan.nextLine(); int f = Integer.valueOf(s); int c = 5 * (f - 32) / 9; System.out.println(&quot;Celsius = &quot; + c); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-003. 个位数统计]]></title>
    <url>%2F2018%2F03%2F23%2FL1-003._%E4%B8%AA%E4%BD%8D%E6%95%B0%E7%BB%9F%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[L1-003. &#x4E2A;&#x4F4D;&#x6570;&#x7EDF;&#x8BA1;&#x7ED9;&#x5B9A;&#x4E00;&#x4E2A;k&#x4F4D;&#x6574;&#x6570;N = dk-110k-1 + &#x2026; + d1101 + d0 (0&lt;=di&lt;=9, i=0,&#x2026;,k-1, dk-1&gt;0)&#xFF0C;&#x8BF7;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#x7EDF;&#x8BA1;&#x6BCF;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x4E2A;&#x4F4D;&#x6570;&#x5B57;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x7ED9;&#x5B9A;N = 100311&#xFF0C;&#x5219;&#x6709;2&#x4E2A;0&#xFF0C;3&#x4E2A;1&#xFF0C;&#x548C;1&#x4E2A;3&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5373;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;1000&#x4F4D;&#x7684;&#x6B63;&#x6574;&#x6570;N&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5BF9;N&#x4E2D;&#x6BCF;&#x4E00;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x4E2A;&#x4F4D;&#x6570;&#x5B57;&#xFF0C;&#x4EE5;D:M&#x7684;&#x683C;&#x5F0F;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x8BE5;&#x4F4D;&#x6570;&#x5B57;D&#x53CA;&#x5176;&#x5728;N&#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;M&#x3002;&#x8981;&#x6C42;&#x6309;D&#x7684;&#x5347;&#x5E8F;&#x8F93;&#x51FA;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;100311 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;0:21:33:1 12345678910111213141516171819import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); String s = scan.nextLine(); int[] index = new int[10]; for (int i = 0; i &lt; s.length(); i++) { index[s.charAt(i) - &apos;0&apos;]++; } for (int i = 0; i &lt; 10; i++) { if (index[i] != 0) System.out.println(i + &quot;:&quot; + index[i]); } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-002. 打印沙漏]]></title>
    <url>%2F2018%2F03%2F23%2FL1-002._%E6%89%93%E5%8D%B0%E6%B2%99%E6%BC%8F%2F</url>
    <content type="text"><![CDATA[L1-002. &#x6253;&#x5370;&#x6C99;&#x6F0F;&#x672C;&#x9898;&#x8981;&#x6C42;&#x4F60;&#x5199;&#x4E2A;&#x7A0B;&#x5E8F;&#x628A;&#x7ED9;&#x5B9A;&#x7684;&#x7B26;&#x53F7;&#x6253;&#x5370;&#x6210;&#x6C99;&#x6F0F;&#x7684;&#x5F62;&#x72B6;&#x3002;&#x4F8B;&#x5982;&#x7ED9;&#x5B9A;17&#x4E2A; &#x201C;*&#x201D;&#xFF0C;&#x8981;&#x6C42;&#x6309;&#x4E0B;&#x5217;&#x683C;&#x5F0F;&#x6253;&#x5370; 12345***** *** * ******** &#x6240;&#x8C13;&#x201C;&#x6C99;&#x6F0F;&#x5F62;&#x72B6;&#x201D;&#xFF0C;&#x662F;&#x6307;&#x6BCF;&#x884C;&#x8F93;&#x51FA;&#x5947;&#x6570;&#x4E2A;&#x7B26;&#x53F7;&#xFF1B;&#x5404;&#x884C;&#x7B26;&#x53F7;&#x4E2D;&#x5FC3;&#x5BF9;&#x9F50;&#xFF1B;&#x76F8;&#x90BB;&#x4E24;&#x884C;&#x7B26;&#x53F7;&#x6570;&#x5DEE;2&#xFF1B;&#x7B26;&#x53F7;&#x6570;&#x5148;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x987A;&#x5E8F;&#x9012;&#x51CF;&#x5230;1&#xFF0C;&#x518D;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x987A;&#x5E8F;&#x9012;&#x589E;&#xFF1B;&#x9996;&#x5C3E;&#x7B26;&#x53F7;&#x6570;&#x76F8;&#x7B49;&#x3002; &#x7ED9;&#x5B9A;&#x4EFB;&#x610F;N&#x4E2A;&#x7B26;&#x53F7;&#xFF0C;&#x4E0D;&#x4E00;&#x5B9A;&#x80FD;&#x6B63;&#x597D;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;&#x6C99;&#x6F0F;&#x3002;&#x8981;&#x6C42;&#x6253;&#x5370;&#x51FA;&#x7684;&#x6C99;&#x6F0F;&#x80FD;&#x7528;&#x6389;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x7B26;&#x53F7;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x7ED9;&#x51FA;1&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=1000&#xFF09;&#x548C;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#xFF0C;&#x4E2D;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x9996;&#x5148;&#x6253;&#x5370;&#x51FA;&#x7531;&#x7ED9;&#x5B9A;&#x7B26;&#x53F7;&#x7EC4;&#x6210;&#x7684;&#x6700;&#x5927;&#x7684;&#x6C99;&#x6F0F;&#x5F62;&#x72B6;&#xFF0C;&#x6700;&#x540E;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5269;&#x4E0B;&#x6CA1;&#x7528;&#x6389;&#x7684;&#x7B26;&#x53F7;&#x6570;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A;19 * &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A;123456***** *** * ********2 123456789101112131415161718192021222324252627282930313233343536373839404142import java.util.Scanner;public class Main { public static void main(String[] args) { Scanner scan = new Scanner(System.in); int n = scan.nextInt(); String s = scan.next(); int row = 0; for (int i = 1; i &lt; n; i++) { if ((2*i*(i + 2) + 1) &lt;= n) { row++; } } for (int i = row; i &gt; 0; i--) { for (int j = row - i; j &gt; 0; j--) System.out.print(&quot; &quot;); for (int j = 2 * i + 1; j &gt; 0; j--) { System.out.print(s); } System.out.println(); } if (n != 0) { for (int i = 0; i &lt; row; i++) { System.out.print(&quot; &quot;); } System.out.println(s); } for (int i = 1; i &lt;= row; i++) { for (int j = row - i; j &gt; 0; j--) System.out.print(&quot; &quot;); for (int j = 2 * i + 1; j &gt; 0; j--) { System.out.print(s); } System.out.println(); } System.out.println(n - (2 * row * (row + 2) + 1)); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[团队程序设计天梯赛 L1-001. Hello World]]></title>
    <url>%2F2018%2F03%2F23%2FL1-001.Hello_World%2F</url>
    <content type="text"><![CDATA[L1-001. Hello World&#x8FD9;&#x9053;&#x8D85;&#x7EA7;&#x7B80;&#x5355;&#x7684;&#x9898;&#x76EE;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x8F93;&#x5165;&#x3002;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x8457;&#x540D;&#x77ED;&#x53E5;&#x201C;Hello World!&#x201D;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; 123456public class Main { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CCF 201709-2 公共钥匙盒]]></title>
    <url>%2F2018%2F03%2F22%2FCCF_201709-2_%E5%85%AC%E5%85%B1%E9%92%A5%E5%8C%99%E7%9B%92%2F</url>
    <content type="text"><![CDATA[&#x95EE;&#x9898;&#x63CF;&#x8FF0;&#x3000;&#x3000;&#x6709;&#x4E00;&#x4E2A;&#x5B66;&#x6821;&#x7684;&#x8001;&#x5E08;&#x5171;&#x7528;N&#x4E2A;&#x6559;&#x5BA4;&#xFF0C;&#x6309;&#x7167;&#x89C4;&#x5B9A;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x94A5;&#x5319;&#x90FD;&#x5FC5;&#x987B;&#x653E;&#x5728;&#x516C;&#x5171;&#x94A5;&#x5319;&#x76D2;&#x91CC;&#xFF0C;&#x8001;&#x5E08;&#x4E0D;&#x80FD;&#x5E26;&#x94A5;&#x5319;&#x56DE;&#x5BB6;&#x3002;&#x6BCF;&#x6B21;&#x8001;&#x5E08;&#x4E0A;&#x8BFE;&#x524D;&#xFF0C;&#x90FD;&#x4ECE;&#x516C;&#x5171;&#x94A5;&#x5319;&#x76D2;&#x91CC;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x4E0A;&#x8BFE;&#x7684;&#x6559;&#x5BA4;&#x7684;&#x94A5;&#x5319;&#x53BB;&#x5F00;&#x95E8;&#xFF0C;&#x4E0A;&#x5B8C;&#x8BFE;&#x540E;&#xFF0C;&#x518D;&#x5C06;&#x94A5;&#x5319;&#x653E;&#x56DE;&#x5230;&#x94A5;&#x5319;&#x76D2;&#x4E2D;&#x3002;&#x3000;&#x3000;&#x94A5;&#x5319;&#x76D2;&#x4E00;&#x5171;&#x6709;N&#x4E2A;&#x6302;&#x94A9;&#xFF0C;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x6392;&#x6210;&#x4E00;&#x6392;&#xFF0C;&#x7528;&#x6765;&#x6302;N&#x4E2A;&#x6559;&#x5BA4;&#x7684;&#x94A5;&#x5319;&#x3002;&#x4E00;&#x4E32;&#x94A5;&#x5319;&#x6CA1;&#x6709;&#x56FA;&#x5B9A;&#x7684;&#x60AC;&#x6302;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F46;&#x94A5;&#x5319;&#x4E0A;&#x6709;&#x6807;&#x8BC6;&#xFF0C;&#x6240;&#x4EE5;&#x8001;&#x5E08;&#x4EEC;&#x4E0D;&#x4F1A;&#x5F04;&#x6DF7;&#x94A5;&#x5319;&#x3002;&#x3000;&#x3000;&#x6BCF;&#x6B21;&#x53D6;&#x94A5;&#x5319;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8001;&#x5E08;&#x4EEC;&#x90FD;&#x4F1A;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x6240;&#x9700;&#x8981;&#x7684;&#x94A5;&#x5319;&#x5C06;&#x5176;&#x53D6;&#x8D70;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x79FB;&#x52A8;&#x5176;&#x4ED6;&#x94A5;&#x5319;&#x3002;&#x6BCF;&#x6B21;&#x8FD8;&#x94A5;&#x5319;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x94A5;&#x5319;&#x7684;&#x8001;&#x5E08;&#x4F1A;&#x627E;&#x5230;&#x6700;&#x5DE6;&#x8FB9;&#x7684;&#x7A7A;&#x7684;&#x6302;&#x94A9;&#xFF0C;&#x5C06;&#x94A5;&#x5319;&#x6302;&#x5728;&#x8FD9;&#x4E2A;&#x6302;&#x94A9;&#x4E0A;&#x3002;&#x5982;&#x679C;&#x6709;&#x591A;&#x4F4D;&#x8001;&#x5E08;&#x8FD8;&#x94A5;&#x5319;&#xFF0C;&#x5219;&#x4ED6;&#x4EEC;&#x6309;&#x94A5;&#x5319;&#x7F16;&#x53F7;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x8FD8;&#x3002;&#x5982;&#x679C;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x65E2;&#x6709;&#x8001;&#x5E08;&#x8FD8;&#x94A5;&#x5319;&#x53C8;&#x6709;&#x8001;&#x5E08;&#x53D6;&#x94A5;&#x5319;&#xFF0C;&#x5219;&#x8001;&#x5E08;&#x4EEC;&#x4F1A;&#x5148;&#x5C06;&#x94A5;&#x5319;&#x5168;&#x8FD8;&#x56DE;&#x53BB;&#x518D;&#x53D6;&#x51FA;&#x3002;&#x3000;&#x3000;&#x4ECA;&#x5929;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x94A5;&#x5319;&#x662F;&#x6309;&#x7F16;&#x53F7;&#x4ECE;&#x5C0F;&#x5230;&#x5927;&#x7684;&#x987A;&#x5E8F;&#x653E;&#x5728;&#x94A5;&#x5319;&#x76D2;&#x91CC;&#x7684;&#x3002;&#x6709;K&#x4F4D;&#x8001;&#x5E08;&#x8981;&#x4E0A;&#x8BFE;&#xFF0C;&#x7ED9;&#x51FA;&#x6BCF;&#x4F4D;&#x8001;&#x5E08;&#x6240;&#x9700;&#x8981;&#x7684;&#x94A5;&#x5319;&#x3001;&#x5F00;&#x59CB;&#x4E0A;&#x8BFE;&#x7684;&#x65F6;&#x95F4;&#x548C;&#x4E0A;&#x8BFE;&#x7684;&#x65F6;&#x957F;&#xFF0C;&#x5047;&#x8BBE;&#x4E0B;&#x8BFE;&#x65F6;&#x95F4;&#x5C31;&#x662F;&#x8FD8;&#x94A5;&#x5319;&#x65F6;&#x95F4;&#xFF0C;&#x8BF7;&#x95EE;&#x6700;&#x7EC8;&#x94A5;&#x5319;&#x76D2;&#x91CC;&#x9762;&#x94A5;&#x5319;&#x7684;&#x987A;&#x5E8F;&#x662F;&#x600E;&#x6837;&#x7684;&#xFF1F;&#x8F93;&#x5165;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x8F93;&#x5165;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6574;&#x6570;N, K&#x3002;&#x3000;&#x3000;&#x63A5;&#x4E0B;&#x6765;K&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4E09;&#x4E2A;&#x6574;&#x6570;w, s, c&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x4E00;&#x4F4D;&#x8001;&#x5E08;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x94A5;&#x5319;&#x7F16;&#x53F7;&#x3001;&#x5F00;&#x59CB;&#x4E0A;&#x8BFE;&#x7684;&#x65F6;&#x95F4;&#x548C;&#x4E0A;&#x8BFE;&#x7684;&#x65F6;&#x957F;&#x3002;&#x53EF;&#x80FD;&#x6709;&#x591A;&#x4F4D;&#x8001;&#x5E08;&#x4F7F;&#x7528;&#x540C;&#x4E00;&#x628A;&#x94A5;&#x5319;&#xFF0C;&#x4F46;&#x662F;&#x8001;&#x5E08;&#x4F7F;&#x7528;&#x94A5;&#x5319;&#x7684;&#x65F6;&#x95F4;&#x4E0D;&#x4F1A;&#x91CD;&#x53E0;&#x3002;&#x3000;&#x3000;&#x4FDD;&#x8BC1;&#x8F93;&#x5165;&#x6570;&#x636E;&#x6EE1;&#x8DB3;&#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF0C;&#x4F60;&#x4E0D;&#x7528;&#x68C0;&#x67E5;&#x6570;&#x636E;&#x5408;&#x6CD5;&#x6027;&#x3002;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x8F93;&#x51FA;&#x4E00;&#x884C;&#xFF0C;&#x5305;&#x542B;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x76F8;&#x90BB;&#x6574;&#x6570;&#x95F4;&#x7528;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x4F9D;&#x6B21;&#x8868;&#x793A;&#x6BCF;&#x4E2A;&#x6302;&#x94A9;&#x4E0A;&#x6302;&#x7684;&#x94A5;&#x5319;&#x7F16;&#x53F7;&#x3002;&#x6837;&#x4F8B;&#x8F93;&#x5165;5 24 3 32 2 7&#x6837;&#x4F8B;&#x8F93;&#x51FA;1 4 3 2 5&#x6837;&#x4F8B;&#x8BF4;&#x660E;&#x3000;&#x3000;&#x7B2C;&#x4E00;&#x4F4D;&#x8001;&#x5E08;&#x4ECE;&#x65F6;&#x523B;3&#x5F00;&#x59CB;&#x4F7F;&#x7528;4&#x53F7;&#x6559;&#x5BA4;&#x7684;&#x94A5;&#x5319;&#xFF0C;&#x4F7F;&#x7528;3&#x5355;&#x4F4D;&#x65F6;&#x95F4;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x65F6;&#x523B;6&#x8FD8;&#x94A5;&#x5319;&#x3002;&#x7B2C;&#x4E8C;&#x4F4D;&#x8001;&#x5E08;&#x4ECE;&#x65F6;&#x523B;2&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x94A5;&#x5319;&#xFF0C;&#x4F7F;&#x7528;7&#x5355;&#x4F4D;&#x65F6;&#x95F4;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x65F6;&#x523B;9&#x8FD8;&#x94A5;&#x5319;&#x3002;&#x3000;&#x3000;&#x6BCF;&#x4E2A;&#x5173;&#x952E;&#x65F6;&#x523B;&#x540E;&#x7684;&#x94A5;&#x5319;&#x72B6;&#x6001;&#x5982;&#x4E0B;&#xFF08;X&#x8868;&#x793A;&#x7A7A;&#xFF09;&#xFF1A;&#x3000;&#x3000;&#x65F6;&#x523B;2&#x540E;&#x4E3A;1X345&#xFF1B;&#x3000;&#x3000;&#x65F6;&#x523B;3&#x540E;&#x4E3A;1X3X5&#xFF1B;&#x3000;&#x3000;&#x65F6;&#x523B;6&#x540E;&#x4E3A;143X5&#xFF1B;&#x3000;&#x3000;&#x65F6;&#x523B;9&#x540E;&#x4E3A;14325&#x3002;&#x6837;&#x4F8B;&#x8F93;&#x5165;5 71 1 143 3 121 15 122 7 203 18 124 21 195 30 9&#x6837;&#x4F8B;&#x8F93;&#x51FA;1 2 3 5 4&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#x89C4;&#x6A21;&#x4E0E;&#x7EA6;&#x5B9A;&#x3000;&#x3000;&#x5BF9;&#x4E8E;30%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N, K &#x2264; 10, 1 &#x2264; w &#x2264; N, 1 &#x2264; s, c &#x2264; 30&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;60%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N, K &#x2264; 50&#xFF0C;1 &#x2264; w &#x2264; N&#xFF0C;1 &#x2264; s &#x2264; 300&#xFF0C;1 &#x2264; c &#x2264; 50&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N, K &#x2264; 1000&#xFF0C;1 &#x2264; w &#x2264; N&#xFF0C;1 &#x2264; s &#x2264; 10000&#xFF0C;1 &#x2264; c &#x2264; 100&#x3002; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103import java.util.Scanner;import java.util.ArrayList;import java.util.Collections;public class Main { private static class Node implements Comparable&lt;Node&gt;{ private int key; private int time; private int isget; Node(int k, int t, int f) { key = k; time = t; isget = f; } @Override public int compareTo(Main.Node o) { if (time &gt; o.time) return 1; else if (time == o.time) { if (isget &gt; o.isget) { return 1; } else if (isget == o.isget) { if (key &gt; o.key) { return 1; } else if (key == o.key) { return 0; } else return -1; } else return -1; } return -1; } @Override public String toString() { return &quot;Node{&quot; + &quot;key= &quot; + key + &quot;, time= &quot; + time + &quot;, isget= &quot; + isget + &apos;}&apos;; } } public static void main(String[] args) { Scanner In = new Scanner(System.in); int N = In.nextInt(); int K = In.nextInt(); ArrayList&lt;Node&gt; nodes = new ArrayList&lt;&gt;(); int[] map = new int[N+1]; for (int i = 0; i &lt;= N; i++) { map[i] = i; } int w, s, c; while (K -- &gt; 0) { w = In.nextInt(); s = In.nextInt(); c = In.nextInt(); nodes.add(new Node(w, s,1)); nodes.add(new Node(w, s + c,0)); } Collections.sort(nodes);// for (int i = 0; i &lt; nodes.size(); i++) {// System.out.println(nodes.get(i).toString());// } for (Node node :nodes) { int isget = node.isget; if (isget == 1) { for (int i = 1; i &lt;= N; i++) { if (node.key == map[i]) { map[i] = 0; break; } } } else { for (int i = 1; i &lt;= N; i++) { if (map[i] == 0) { map[i] = node.key; break; } } } } boolean flag = true; for (int i = 1; i &lt;= N; i++) { if (flag) { System.out.print(map[i]); flag = false; } else { System.out.print(&quot; &quot;+map[i]); } } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>CCF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CCF 201703-4 地铁修建]]></title>
    <url>%2F2018%2F03%2F22%2FCCF_201703-4_%E5%9C%B0%E9%93%81%E4%BF%AE%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[&#x95EE;&#x9898;&#x63CF;&#x8FF0;&#x3000;&#x3000;A&#x5E02;&#x6709;n&#x4E2A;&#x4EA4;&#x901A;&#x67A2;&#x7EBD;&#xFF0C;&#x5176;&#x4E2D;1&#x53F7;&#x548C;n&#x53F7;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x4E3A;&#x4E86;&#x52A0;&#x5F3A;&#x8FD0;&#x8F93;&#x80FD;&#x529B;&#xFF0C;A&#x5E02;&#x51B3;&#x5B9A;&#x5728;1&#x53F7;&#x5230;n&#x53F7;&#x67A2;&#x7EBD;&#x95F4;&#x4FEE;&#x5EFA;&#x4E00;&#x6761;&#x5730;&#x94C1;&#x3002;&#x3000;&#x3000;&#x5730;&#x94C1;&#x7531;&#x5F88;&#x591A;&#x6BB5;&#x96A7;&#x9053;&#x7EC4;&#x6210;&#xFF0C;&#x6BCF;&#x6BB5;&#x96A7;&#x9053;&#x8FDE;&#x63A5;&#x4E24;&#x4E2A;&#x4EA4;&#x901A;&#x67A2;&#x7EBD;&#x3002;&#x7ECF;&#x8FC7;&#x52D8;&#x63A2;&#xFF0C;&#x6709;m&#x6BB5;&#x96A7;&#x9053;&#x4F5C;&#x4E3A;&#x5019;&#x9009;&#xFF0C;&#x4E24;&#x4E2A;&#x4EA4;&#x901A;&#x67A2;&#x7EBD;&#x4E4B;&#x95F4;&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x6761;&#x5019;&#x9009;&#x7684;&#x96A7;&#x9053;&#xFF0C;&#x6CA1;&#x6709;&#x96A7;&#x9053;&#x4E24;&#x7AEF;&#x8FDE;&#x63A5;&#x7740;&#x540C;&#x4E00;&#x4E2A;&#x4EA4;&#x901A;&#x67A2;&#x7EBD;&#x3002;&#x3000;&#x3000;&#x73B0;&#x5728;&#x6709;n&#x5BB6;&#x96A7;&#x9053;&#x65BD;&#x5DE5;&#x7684;&#x516C;&#x53F8;&#xFF0C;&#x6BCF;&#x6BB5;&#x5019;&#x9009;&#x7684;&#x96A7;&#x9053;&#x53EA;&#x80FD;&#x7531;&#x4E00;&#x4E2A;&#x516C;&#x53F8;&#x65BD;&#x5DE5;&#xFF0C;&#x6BCF;&#x5BB6;&#x516C;&#x53F8;&#x65BD;&#x5DE5;&#x9700;&#x8981;&#x7684;&#x5929;&#x6570;&#x4E00;&#x81F4;&#x3002;&#x800C;&#x6BCF;&#x5BB6;&#x516C;&#x53F8;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x4FEE;&#x5EFA;&#x4E00;&#x6761;&#x5019;&#x9009;&#x96A7;&#x9053;&#x3002;&#x6240;&#x6709;&#x516C;&#x53F8;&#x540C;&#x65F6;&#x5F00;&#x59CB;&#x65BD;&#x5DE5;&#x3002;&#x3000;&#x3000;&#x4F5C;&#x4E3A;&#x9879;&#x76EE;&#x8D1F;&#x8D23;&#x4EBA;&#xFF0C;&#x4F60;&#x83B7;&#x5F97;&#x4E86;&#x5019;&#x9009;&#x96A7;&#x9053;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x73B0;&#x5728;&#x4F60;&#x53EF;&#x4EE5;&#x6309;&#x81EA;&#x5DF1;&#x7684;&#x60F3;&#x6CD5;&#x9009;&#x62E9;&#x4E00;&#x90E8;&#x5206;&#x96A7;&#x9053;&#x8FDB;&#x884C;&#x65BD;&#x5DE5;&#xFF0C;&#x8BF7;&#x95EE;&#x4FEE;&#x5EFA;&#x6574;&#x6761;&#x5730;&#x94C1;&#x6700;&#x5C11;&#x9700;&#x8981;&#x591A;&#x5C11;&#x5929;&#x3002;&#x8F93;&#x5165;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x8F93;&#x5165;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6574;&#x6570;n, m&#xFF0C;&#x7528;&#x4E00;&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x4EA4;&#x901A;&#x67A2;&#x7EBD;&#x7684;&#x6570;&#x91CF;&#x548C;&#x5019;&#x9009;&#x96A7;&#x9053;&#x7684;&#x6570;&#x91CF;&#x3002;&#x3000;&#x3000;&#x7B2C;2&#x884C;&#x5230;&#x7B2C;m+1&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x6574;&#x6570;a, b, c&#xFF0C;&#x8868;&#x793A;&#x67A2;&#x7EBD;a&#x548C;&#x67A2;&#x7EBD;b&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x4FEE;&#x5EFA;&#x4E00;&#x6761;&#x96A7;&#x9053;&#xFF0C;&#x9700;&#x8981;&#x7684;&#x65F6;&#x95F4;&#x4E3A;c&#x5929;&#x3002;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x4FEE;&#x5EFA;&#x6574;&#x6761;&#x5730;&#x94C1;&#x7EBF;&#x8DEF;&#x6700;&#x5C11;&#x9700;&#x8981;&#x7684;&#x5929;&#x6570;&#x3002;&#x6837;&#x4F8B;&#x8F93;&#x5165;6 61 2 42 3 43 6 71 4 24 5 55 6 6&#x6837;&#x4F8B;&#x8F93;&#x51FA;6&#x6837;&#x4F8B;&#x8BF4;&#x660E;&#x3000;&#x3000;&#x53EF;&#x4EE5;&#x4FEE;&#x5EFA;&#x7684;&#x7EBF;&#x8DEF;&#x6709;&#x4E24;&#x79CD;&#x3002;&#x3000;&#x3000;&#x7B2C;&#x4E00;&#x79CD;&#x7ECF;&#x8FC7;&#x7684;&#x67A2;&#x7EBD;&#x4F9D;&#x6B21;&#x4E3A;1, 2, 3, 6&#xFF0C;&#x6240;&#x9700;&#x8981;&#x7684;&#x65F6;&#x95F4;&#x5206;&#x522B;&#x662F;4, 4, 7&#xFF0C;&#x5219;&#x6574;&#x6761;&#x5730;&#x94C1;&#x7EBF;&#x9700;&#x8981;7&#x5929;&#x4FEE;&#x5B8C;&#xFF1B;&#x3000;&#x3000;&#x7B2C;&#x4E8C;&#x79CD;&#x7ECF;&#x8FC7;&#x7684;&#x67A2;&#x7EBD;&#x4F9D;&#x6B21;&#x4E3A;1, 4, 5, 6&#xFF0C;&#x6240;&#x9700;&#x8981;&#x7684;&#x65F6;&#x95F4;&#x5206;&#x522B;&#x662F;2, 5, 6&#xFF0C;&#x5219;&#x6574;&#x6761;&#x5730;&#x94C1;&#x7EBF;&#x9700;&#x8981;6&#x5929;&#x4FEE;&#x5B8C;&#x3002;&#x3000;&#x3000;&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6848;&#x6240;&#x7528;&#x7684;&#x5929;&#x6570;&#x66F4;&#x5C11;&#x3002;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#x89C4;&#x6A21;&#x4E0E;&#x7EA6;&#x5B9A;&#x3000;&#x3000;&#x5BF9;&#x4E8E;20%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; n &#x2264; 10&#xFF0C;1 &#x2264; m &#x2264; 20&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;40%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; n &#x2264; 100&#xFF0C;1 &#x2264; m &#x2264; 1000&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;60%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; n &#x2264; 1000&#xFF0C;1 &#x2264; m &#x2264; 10000&#xFF0C;1 &#x2264; c &#x2264; 1000&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;80%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; n &#x2264; 10000&#xFF0C;1 &#x2264; m &#x2264; 100000&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;100%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; n &#x2264; 100000&#xFF0C;1 &#x2264; m &#x2264; 200000&#xFF0C;1 &#x2264; a, b &#x2264; n&#xFF0C;1 &#x2264; c &#x2264; 1000000&#x3002; &#x3000;&#x3000;&#x6240;&#x6709;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#x4FDD;&#x8BC1;&#x5728;&#x6240;&#x6709;&#x5019;&#x9009;&#x96A7;&#x9053;&#x90FD;&#x4FEE;&#x901A;&#x65F6;1&#x53F7;&#x67A2;&#x7EBD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x96A7;&#x9053;&#x5230;&#x8FBE;&#x5176;&#x4ED6;&#x6240;&#x6709;&#x67A2;&#x7EBD;&#x3002; &#x8FD9;&#x91CC;&#x91C7;&#x7528;&#x7684;&#x662F; Kruskal &#x6700;&#x5C0F;&#x751F;&#x6210;&#x6811;&#x548C;&#x5E76;&#x67E5;&#x96C6;&#x7B97;&#x6CD5; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172import java.util.Scanner;import java.util.ArrayList;import java.util.Collections;public class Main { private int[] flag; private int unionFind(int e) { while (flag[e] != e) { e = flag[e]; } return e; } private static class Rode implements Comparable&lt;Rode&gt;{ private int a; private int b; private int w; public Rode(int a, int b, int w) { this.a = a; this.b = b; this.w = w; } @Override public int compareTo(Main.Rode o) { if (this.w &lt; o.w) return -1; else if (this.w &gt; o.w) return 1; else return 0; } } public static void main(String[] args) { Scanner In = new Scanner(System.in); int N = In.nextInt(); int m = In.nextInt(); int ans = 0; Main memb = new Main(); memb.flag = new int[N + 10]; ArrayList&lt;Rode&gt; roads = new ArrayList&lt;&gt;(200010); for (int i = 0; i &lt;= N; i++) { memb.flag[i] = i; } for (int i = 0; i &lt; m; i++) { int a = In.nextInt(); int b = In.nextInt(); int w = In.nextInt(); roads.add(new Rode(a, b, w)); } Collections.sort(roads); for (int i = 0; i &lt; m; i++) { int x = memb.unionFind(roads.get(i).a); int y = memb.unionFind(roads.get(i).b); if (x != y) { if (x &gt; y) memb.flag[x] = y; else memb.flag[y] = x; } ans = roads.get(i).w; if (memb.unionFind(N) == 1) break; } System.out.println(ans); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>CCF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CCF 201709-4 通信网络]]></title>
    <url>%2F2018%2F03%2F22%2FCCF_201709-4_%E9%80%9A%E4%BF%A1%E7%BD%91%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[&#x95EE;&#x9898;&#x63CF;&#x8FF0;&#x3000;&#x3000;&#x67D0;&#x56FD;&#x7684;&#x519B;&#x961F;&#x7531;N&#x4E2A;&#x90E8;&#x95E8;&#x7EC4;&#x6210;&#xFF0C;&#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x5B89;&#x5168;&#x6027;&#xFF0C;&#x90E8;&#x95E8;&#x4E4B;&#x95F4;&#x5EFA;&#x7ACB;&#x4E86;M&#x6761;&#x901A;&#x8DEF;&#xFF0C;&#x6BCF;&#x6761;&#x901A;&#x8DEF;&#x53EA;&#x80FD;&#x5355;&#x5411;&#x4F20;&#x9012;&#x4FE1;&#x606F;&#xFF0C;&#x5373;&#x4E00;&#x6761;&#x4ECE;&#x90E8;&#x95E8;a&#x5230;&#x90E8;&#x95E8;b&#x7684;&#x901A;&#x8DEF;&#x53EA;&#x80FD;&#x7531;a&#x5411;b&#x4F20;&#x9012;&#x4FE1;&#x606F;&#x3002;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E2D;&#x8F6C;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x4F20;&#x9012;&#xFF0C;&#x5373;&#x5982;&#x679C;a&#x80FD;&#x5C06;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#x5230;b&#xFF0C;b&#x53C8;&#x80FD;&#x5C06;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#x5230;c&#xFF0C;&#x5219;a&#x80FD;&#x5C06;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#x5230;c&#x3002;&#x4E00;&#x6761;&#x4FE1;&#x606F;&#x53EF;&#x80FD;&#x901A;&#x8FC7;&#x591A;&#x6B21;&#x4E2D;&#x8F6C;&#x6700;&#x7EC8;&#x5230;&#x8FBE;&#x76EE;&#x7684;&#x5730;&#x3002;&#x3000;&#x3000;&#x7531;&#x4E8E;&#x4FDD;&#x5BC6;&#x5DE5;&#x4F5C;&#x505A;&#x5F97;&#x5F88;&#x597D;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x90E8;&#x95E8;&#x4E4B;&#x95F4;&#x90FD;&#x4E92;&#x76F8;&#x77E5;&#x9053;&#x5F7C;&#x6B64;&#x7684;&#x5B58;&#x5728;&#x3002;&#x53EA;&#x6709;&#x5F53;&#x4E24;&#x4E2A;&#x90E8;&#x95E8;&#x4E4B;&#x95F4;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6216;&#x95F4;&#x63A5;&#x4F20;&#x9012;&#x4FE1;&#x606F;&#x65F6;&#xFF0C;&#x4ED6;&#x4EEC;&#x624D;&#x5F7C;&#x6B64;&#x77E5;&#x9053;&#x5BF9;&#x65B9;&#x7684;&#x5B58;&#x5728;&#x3002;&#x90E8;&#x95E8;&#x4E4B;&#x95F4;&#x4E0D;&#x4F1A;&#x628A;&#x81EA;&#x5DF1;&#x77E5;&#x9053;&#x54EA;&#x4E9B;&#x90E8;&#x95E8;&#x544A;&#x8BC9;&#x5176;&#x4ED6;&#x90E8;&#x95E8;&#x3002; &#x3000;&#x3000;&#x4E0A;&#x56FE;&#x4E2D;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;4&#x4E2A;&#x90E8;&#x95E8;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x56FE;&#x4E2D;&#x7684;&#x5355;&#x5411;&#x8FB9;&#x8868;&#x793A;&#x901A;&#x8DEF;&#x3002;&#x90E8;&#x95E8;1&#x53EF;&#x4EE5;&#x5C06;&#x6D88;&#x606F;&#x53D1;&#x9001;&#x7ED9;&#x6240;&#x6709;&#x90E8;&#x95E8;&#xFF0C;&#x90E8;&#x95E8;4&#x53EF;&#x4EE5;&#x63A5;&#x6536;&#x6240;&#x6709;&#x90E8;&#x95E8;&#x7684;&#x6D88;&#x606F;&#xFF0C;&#x6240;&#x4EE5;&#x90E8;&#x95E8;1&#x548C;&#x90E8;&#x95E8;4&#x77E5;&#x9053;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x90E8;&#x95E8;&#x7684;&#x5B58;&#x5728;&#x3002;&#x90E8;&#x95E8;2&#x548C;&#x90E8;&#x95E8;3&#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x53D1;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x6240;&#x4EE5;&#x90E8;&#x95E8;2&#x548C;&#x90E8;&#x95E8;3&#x4E92;&#x76F8;&#x4E0D;&#x77E5;&#x9053;&#x5F7C;&#x6B64;&#x7684;&#x5B58;&#x5728;&#x3002;&#x3000;&#x3000;&#x73B0;&#x5728;&#x8BF7;&#x95EE;&#xFF0C;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x90E8;&#x95E8;&#x77E5;&#x9053;&#x6240;&#x6709;N&#x4E2A;&#x90E8;&#x95E8;&#x7684;&#x5B58;&#x5728;&#x3002;&#x6216;&#x8005;&#x8BF4;&#xFF0C;&#x6709;&#x591A;&#x5C11;&#x4E2A;&#x90E8;&#x95E8;&#x6240;&#x77E5;&#x9053;&#x7684;&#x90E8;&#x95E8;&#x6570;&#x91CF;&#xFF08;&#x5305;&#x62EC;&#x81EA;&#x5DF1;&#xFF09;&#x6B63;&#x597D;&#x662F;N&#x3002;&#x8F93;&#x5165;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x8F93;&#x5165;&#x7684;&#x7B2C;&#x4E00;&#x884C;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6574;&#x6570;N, M&#xFF0C;&#x5206;&#x522B;&#x8868;&#x793A;&#x90E8;&#x95E8;&#x7684;&#x6570;&#x91CF;&#x548C;&#x5355;&#x5411;&#x901A;&#x8DEF;&#x7684;&#x6570;&#x91CF;&#x3002;&#x6240;&#x6709;&#x90E8;&#x95E8;&#x4ECE;1&#x5230;N&#x6807;&#x53F7;&#x3002;&#x3000;&#x3000;&#x63A5;&#x4E0B;&#x6765;M&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4E24;&#x4E2A;&#x6574;&#x6570;a, b&#xFF0C;&#x8868;&#x793A;&#x90E8;&#x95E8;a&#x5230;&#x90E8;&#x95E8;b&#x6709;&#x4E00;&#x6761;&#x5355;&#x5411;&#x901A;&#x8DEF;&#x3002;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x8F93;&#x51FA;&#x4E00;&#x884C;&#xFF0C;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x7B54;&#x6848;&#x3002;&#x6837;&#x4F8B;&#x8F93;&#x5165;4 41 21 32 43 4&#x6837;&#x4F8B;&#x8F93;&#x51FA;2&#x6837;&#x4F8B;&#x8BF4;&#x660E;&#x3000;&#x3000;&#x90E8;&#x95E8;1&#x548C;&#x90E8;&#x95E8;4&#x77E5;&#x9053;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x90E8;&#x95E8;&#x7684;&#x5B58;&#x5728;&#x3002;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#x89C4;&#x6A21;&#x4E0E;&#x7EA6;&#x5B9A;&#x3000;&#x3000;&#x5BF9;&#x4E8E;30%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N &#x2264; 10&#xFF0C;1 &#x2264; M &#x2264; 20&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;60%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N &#x2264; 100&#xFF0C;1 &#x2264; M &#x2264; 1000&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;100%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N &#x2264; 1000&#xFF0C;1 &#x2264; M &#x2264; 10000&#x3002; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859import java.util.Arrays;import java.util.Scanner;import java.util.ArrayList;public class Main { private static int N; private static ArrayList&lt;Integer&gt;[] line; private static int[][] knows; private static int[] visited; private static int top; private static void dfs(int cur) { knows[top][cur] = knows[cur][top] = visited[cur] = 1; for (int i = 0; i &lt; line[cur].size(); i++) { if (visited[line[cur].get(i)] == 0) { dfs(line[cur].get(i)); } } } public static void main(String[] args) { Scanner In = new Scanner(System.in); N = In.nextInt(); int M = In.nextInt(); int ans = 0; line = new ArrayList[N + 1]; knows = new int[N + 1][N + 1]; visited = new int[N + 1]; for (int i = 0; i &lt; line.length; i++) { line[i] = new ArrayList&lt;Integer&gt;(); } while (M-- &gt; 0) { int l = In.nextInt(); Integer r = In.nextInt(); line[l].add(r); } for (int i = 1; i &lt;= N; i++) { Arrays.fill(visited, 0); top = i; dfs(i); } for (int i = 1; i &lt;= N; i++) { int j = 1; for (; j &lt;= N; j++) { if (knows[i][j] == 0) { break; } } if (j == N + 1) { ans ++; } } System.out.println(ans); }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>CCF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CCF 201709-5 除法 Java]]></title>
    <url>%2F2018%2F03%2F22%2FCCF_201709-5_%E9%99%A4%E6%B3%95%2F</url>
    <content type="text"><![CDATA[&#x95EE;&#x9898;&#x63CF;&#x8FF0;&#x3000;&#x3000;&#x5C0F;&#x8471;&#x559C;&#x6B22;&#x9664;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x4ED6;&#x7ED9;&#x4E86;&#x4F60;N&#x4E2A;&#x6570;a1, a2, &#x22EF;, aN&#xFF0C;&#x5E76;&#x4E14;&#x5E0C;&#x671B;&#x4F60;&#x6267;&#x884C;M&#x6B21;&#x64CD;&#x4F5C;&#xFF0C;&#x6BCF;&#x6B21;&#x64CD;&#x4F5C;&#x53EF;&#x80FD;&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x79CD;&#xFF1A;&#x3000;&#x3000;&#x7ED9;&#x4F60;&#x4E09;&#x4E2A;&#x6570;l, r, v&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5C06;al, al+1, &#x22EF;, ar&#x4E4B;&#x95F4;&#x6240;&#x6709;v&#x7684;&#x500D;&#x6570;&#x9664;&#x4EE5;v&#x3002;&#x3000;&#x3000;&#x7ED9;&#x4F60;&#x4E24;&#x4E2A;&#x6570;l, r&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x56DE;&#x7B54;al + al+1 + &#x22EF; + ar&#x7684;&#x503C;&#x662F;&#x591A;&#x5C11;&#x3002;&#x8F93;&#x5165;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x7B2C;&#x4E00;&#x884C;&#x4E24;&#x4E2A;&#x6574;&#x6570;N, M&#xFF0C;&#x4EE3;&#x8868;&#x6570;&#x7684;&#x4E2A;&#x6570;&#x548C;&#x64CD;&#x4F5C;&#x7684;&#x6B21;&#x6570;&#x3002;&#x3000;&#x3000;&#x63A5;&#x4E0B;&#x6765;&#x4E00;&#x884C;N&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x4EE3;&#x8868;N&#x4E2A;&#x6570;&#x4E00;&#x5F00;&#x59CB;&#x7684;&#x503C;&#x3002;&#x3000;&#x3000;&#x63A5;&#x4E0B;&#x6765;M&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x4EE3;&#x8868;&#x4F9D;&#x6B21;&#x64CD;&#x4F5C;&#x3002;&#x6BCF;&#x884C;&#x5F00;&#x59CB;&#x6709;&#x4E00;&#x4E2A;&#x6574;&#x6570;opt&#x3002;&#x5982;&#x679C;opt=1&#xFF0C;&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x6709;&#x4E09;&#x4E2A;&#x6570;l, r, v&#xFF0C;&#x4EE3;&#x8868;&#x8FD9;&#x6B21;&#x64CD;&#x4F5C;&#x9700;&#x8981;&#x5C06;&#x7B2C;l&#x4E2A;&#x6570;&#x5230;&#x7B2C;r&#x4E2A;&#x6570;&#x4E2D;v&#x7684;&#x500D;&#x6570;&#x9664;&#x4EE5;v&#xFF1B;&#x5982;&#x679C;opt = 2&#xFF0C;&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x6709;&#x4E24;&#x4E2A;&#x6570;l, r&#xFF0C;&#x4EE3;&#x8868;&#x4F60;&#x9700;&#x8981;&#x56DE;&#x7B54;&#x7B2C;l&#x4E2A;&#x6570;&#x5230;&#x7B2C;r&#x4E2A;&#x6570;&#x7684;&#x548C;&#x3002;&#x8F93;&#x51FA;&#x683C;&#x5F0F;&#x3000;&#x3000;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x6B21;&#x7684;&#x7B2C;&#x4E8C;&#x79CD;&#x64CD;&#x4F5C;&#xFF0C;&#x8F93;&#x51FA;&#x4E00;&#x884C;&#x4EE3;&#x8868;&#x8FD9;&#x6B21;&#x64CD;&#x4F5C;&#x6240;&#x8BE2;&#x95EE;&#x7684;&#x503C;&#x3002; &#x6837;&#x4F8B;&#x8F93;&#x5165;5 31 2 3 4 52 1 51 1 3 22 1 5 &#x6837;&#x4F8B;&#x8F93;&#x51FA;1514&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#x89C4;&#x6A21;&#x4E0E;&#x7EA6;&#x5B9A;&#x3000;&#x3000;&#x5BF9;&#x4E8E;30%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N, M &#x2264; 1000&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;&#x53E6;&#x5916;20%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x79CD;&#x64CD;&#x4F5C;&#x4E2D;&#x4E00;&#x5B9A;&#x6709;l = r&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;&#x53E6;&#x5916;20%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;&#x4E00;&#x79CD;&#x64CD;&#x4F5C;&#x4E2D;&#x4E00;&#x5B9A;&#x6709;l = 1 , r = N&#xFF1B;&#x3000;&#x3000;&#x5BF9;&#x4E8E;100%&#x7684;&#x8BC4;&#x6D4B;&#x7528;&#x4F8B;&#xFF0C;1 &#x2264; N, M &#x2264; 105&#xFF0C;0 &#x2264; a1, a2, &#x22EF;, aN &#x2264; 106, 1 &#x2264; v &#x2264; 106, 1 &#x2264; l &#x2264; r &#x2264; N&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970import java.util.Scanner;public class Main { private static int[] arr = new int[100010]; private static long[] tarr = new long[100010]; private static int N; private static int lowbit(int i) { return i &amp; (-i); } private static void toValue(int i, int num) { while (i &lt;= N) { tarr[i] += num; i += lowbit(i); } } private static long sum(int i) { long total = 0; while(i != 0) { total += tarr[i]; i -= lowbit(i); } return total; } private static void fun1(int l, int r, int v) { if (v == 1) return; for (int i = l; i &lt;= r; i++) { if (arr[i] &gt;= v &amp;&amp; arr[i] % v == 0) { toValue(i, arr[i] / v - arr[i]); arr[i] /= v; } } } private static void fun2(int l, int r) { System.out.println(sum(r) - sum(l-1)); } public static void main(String[] args) { Scanner In = new Scanner(System.in); N = In.nextInt(); int M = In.nextInt(); arr = new int[N + 1]; tarr = new long[N + 1]; for (int i = 1; i &lt;= N; i++) { arr[i] = In.nextInt(); toValue(i, arr[i]); } while (M-- &gt; 0) { int opt = In.nextInt(); if (opt == 1) { int a = In.nextInt(); int b = In.nextInt(); int c = In.nextInt(); fun1(a, b, c); } else if (opt == 2) { int l = In.nextInt(); int r = In.nextInt(); fun2(l, r); } } }} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>CCF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据库系统知识点整理]]></title>
    <url>%2F2018%2F03%2F22%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x6982;&#x8BBA;1.1 &#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x6982;&#x8FF0; &#x6570;&#x636E;&#xFF1A;&#x63CF;&#x8FF0;&#x4E8B;&#x7269;&#x7684;&#x7B26;&#x53F7;&#x8BB0;&#x5F55;&#x79F0;&#x4E3A;&#x6570;&#x636E;&#x3002; &#x6570;&#x636E;&#x5E93;&#xFF1A;&#x5B58;&#x653E;&#x6570;&#x636E;&#x7684;&#x4ED3;&#x5E93;&#x3002;&#x6570;&#x636E;&#x5E93;&#x662F;&#x957F;&#x671F;&#x50A8;&#x5B58;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x5185;&#xFF0C;&#x6709;&#x7EC4;&#x7EC7;&#x7684;&#xFF0C;&#x53EF;&#x5171;&#x4EAB;&#x7684;&#x5927;&#x91CF;&#x6570;&#x636E;&#x7684;&#x96C6;&#x5408;&#x3002; &#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#xFF1A;&#x662F;&#x4F4D;&#x4E8E;&#x7528;&#x6237;&#x4E0E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x7684;&#x7684;&#x4E00;&#x5C42;&#x6570;&#x636E;&#x7BA1;&#x7406;&#x8F6F;&#x4EF6;&#x3002;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x6709;&#xFF1A;&#x6570;&#x636E;&#x5B9A;&#x4E49;&#x529F;&#x80FD;&#xFF1B;&#x6570;&#x636E;&#x7EC4;&#x7EC7;&#xFF0C;&#x5B58;&#x50A8;&#x548C;&#x7BA1;&#x7406;&#xFF1B;&#x6570;&#x636E;&#x64CD;&#x7EB5;&#x529F;&#x80FD;&#xFF1B;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x548C;&#x8FD0;&#x884C;&#x7BA1;&#x7406;&#xFF1B;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5EFA;&#x7ACB;&#x548C;&#x7EF4;&#x62A4;&#x529F;&#x80FD;&#xFF1B;&#x5176;&#x4ED6;&#x529F;&#x80FD;&#x3002; &#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#xFF1A;&#x662F;&#x7531;&#x6570;&#x636E;&#x5E93;&#x3001;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#xFF08;&#x53CA;&#x5176;&#x5E94;&#x7528;&#x5F00;&#x53D1;&#x5DE5;&#x5177;&#xFF09;&#x3001;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x548C;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x5458;&#xFF08;DataBase Administrator&#xFF09;&#x7EC4;&#x6210;&#x7684;&#x5B58;&#x50A8;&#x3001;&#x7BA1;&#x7406;&#x3001;&#x5904;&#x7406;&#x548C;&#x7EF4;&#x62A4;&#x6570;&#x636E;&#x7684;&#x7CFB;&#x7EDF;&#x3002; &#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x6280;&#x672F;&#x7ECF;&#x5386;&#x4E86;&#x4E09;&#x4E2A;&#x9636;&#x6BB5;&#xFF1A;&#x4EBA;&#x5DE5;&#x7BA1;&#x7406;&#x3001;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x3001;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x3002; &#x4EBA;&#x5DE5;&#x7BA1;&#x7406;&#x9636;&#x6BB5; &#x6570;&#x636E;&#x4E0D;&#x4FDD;&#x5B58; &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7BA1;&#x7406;&#x6570;&#x636E; &#x6570;&#x636E;&#x4E0D;&#x5171;&#x4EAB; &#x6570;&#x636E;&#x4E0D;&#x5177;&#x6709;&#x72EC;&#x7ACB;&#x6027; &#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x9636;&#x6BB5; &#x6570;&#x636E;&#x53EF;&#x4EE5;&#x957F;&#x671F;&#x4FDD;&#x5B58; &#x7531;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x6570;&#x636E; &#x6570;&#x636E;&#x5171;&#x4EAB;&#x6027;&#x5DEE;&#xFF0C;&#x5197;&#x4F59;&#x5EA6;&#x5927; &#x6570;&#x636E;&#x72EC;&#x7ACB;&#x6027;&#x5DEE; &#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x9636;&#x6BB5; &#x6570;&#x636E;&#x7ED3;&#x6784;&#x5316;&#x3002;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x5B9E;&#x73B0;&#x6574;&#x4F53;&#x6570;&#x636E;&#x7684;&#x7ED3;&#x6784;&#x5316;&#xFF0C;&#x8FD9;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4E3B;&#x8981;&#x7279;&#x5F81;&#x4E4B;&#x4E00;&#xFF0C;&#x4E5F;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x4E0E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x672C;&#x8D28;&#x533A;&#x522B; &#x6570;&#x636E;&#x7684;&#x5171;&#x4EAB;&#x6027;&#x9AD8;&#x3001;&#x5197;&#x4F59;&#x5EA6;&#x4F4E;&#x4E14;&#x6291;&#x90C1;&#x6269;&#x5145;&#x3002;&#x6570;&#x636E;&#x5171;&#x4EAB;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x6570;&#x636E;&#x5197;&#x4F59;&#xFF0C;&#x8282;&#x7EA6;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#xFF0C;&#x6570;&#x636E;&#x5171;&#x4EAB;&#x8FD8;&#x80FD;&#x907F;&#x514D;&#x6570;&#x636E;&#x4E4B;&#x95F4;&#x7684;&#x4E0D;&#x76F8;&#x5BB9;&#x6027;&#x4E0E;&#x4E0D;&#x4E00;&#x81F4;&#x6027; &#x6570;&#x636E;&#x72EC;&#x7ACB;&#x6027;&#x9AD8;&#x3002;&#x6570;&#x636E;&#x72EC;&#x7ACB;&#x6027;&#x5305;&#x62EC;&#x7269;&#x7406;&#x72EC;&#x7ACB;&#x6027;&#x3001;&#x903B;&#x8F91;&#x72EC;&#x7ACB;&#x6027;&#x3002;&#x7269;&#x7406;&#x72EC;&#x7ACB;&#x6027;&#x662F;&#x6307;&#x7528;&#x6237;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0E;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x7269;&#x7406;&#x5B58;&#x50A8;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x7684;&#x3002;&#x903B;&#x8F91;&#x72EC;&#x7ACB;&#x6027;&#x662F;&#x6307;&#x7528;&#x6237;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0E;&#x6570;&#x636E;&#x5E93;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x7684;&#x3002; &#x6570;&#x636E;&#x7531;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x7EDF;&#x4E00;&#x7BA1;&#x7406;&#x548C;&#x63A7;&#x5236;&#x3002;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x8FD8;&#x5FC5;&#x987B;&#x63D0;&#x4F9B;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x65B9;&#x9762;&#x7684;&#x6570;&#x636E;&#x63A7;&#x5236;&#x529F;&#x80FD;&#xFF1A; &#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x6027;&#x4FDD;&#x62A4;&#xFF1A;&#x662F;&#x6307;&#x4FDD;&#x62A4;&#x6570;&#x636E;&#x4EE5;&#x9632;&#x6B62;&#x4E0D;&#x5408;&#x6CD5;&#x4F7F;&#x7528;&#x9020;&#x6210;&#x7684;&#x6570;&#x636E;&#x6CC4;&#x5BC6;&#x548C;&#x7834;&#x574F;&#x3002; &#x6570;&#x636E;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x68C0;&#x67E5;&#xFF1A;&#x662F;&#x6307;&#x6570;&#x636E;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3011;&#x6709;&#x6548;&#x6027;&#x548C;&#x76F8;&#x5BB9;&#x6027;&#x3002; &#x5E76;&#x53D1;&#x63A7;&#x5236; &#x6570;&#x636E;&#x5E93;&#x6062;&#x590D; 1.2 &#x6570;&#x636E;&#x6A21;&#x578B; &#x6570;&#x636E;&#x6A21;&#x578B;&#x662F;&#x5BF9;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x6570;&#x636E;&#x7279;&#x5F81;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x6570;&#x636E;&#x6A21;&#x578B;&#x662F;&#x7528;&#x6765;&#x63CF;&#x8FF0;&#x6570;&#x636E;&#x3001;&#x7EC4;&#x7EC7;&#x6570;&#x636E;&#x548C;&#x5BF9;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7684;&#xFF1B;&#x6570;&#x636E;&#x6A21;&#x578B;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x7684;&#x6838;&#x5FC3;&#x548C;&#x57FA;&#x7840;&#x3002; &#x6570;&#x636E;&#x6A21;&#x578B;&#x5E94;&#x6EE1;&#x8DB3;&#x4E09;&#x65B9;&#x9762;&#x7684;&#x8981;&#x6C42;&#xFF1A;&#x4E00;&#x662F;&#x6BD4;&#x8F83;&#x771F;&#x5B9E;&#x7684;&#x6A21;&#x62DF;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#xFF0C;&#x4E8C;&#x662F;&#x5BB9;&#x6613;&#x4E3A;&#x4EBA;&#x6240;&#x7406;&#x89E3;&#xFF0C;&#x4E09;&#x662F;&#x4FBF;&#x4E8E;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x4E0A;&#x5B9E;&#x73B0;&#x3002; &#x6839;&#x636E;&#x6A21;&#x578B;&#x5E94;&#x7528;&#x7684;&#x4E0D;&#x540C;&#x76EE;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x4E9B;&#x6A21;&#x578B;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7C7B;&#xFF1A;&#x7B2C;&#x4E00;&#x7C7B;&#x662F;&#x6982;&#x5FF5;&#x6A21;&#x578B;&#xFF0C;&#x7B2C;&#x4E8C;&#x7C7B;&#x662F;&#x903B;&#x8F91;&#x6A21;&#x578B;&#x548C;&#x7269;&#x7406;&#x6A21;&#x578B;&#x3002; &#x7B2C;&#x4E00;&#x7C7B;&#x6982;&#x5FF5;&#x6A21;&#x578B;&#xFF0C;&#x4E5F;&#x79F0;&#x4FE1;&#x606F;&#x6A21;&#x578B;&#xFF0C;&#x5B83;&#x662F;&#x6309;&#x7528;&#x6237;&#x7684;&#x89C2;&#x70B9;&#x6765;&#x5BF9;&#x6570;&#x636E;&#x548C;&#x4FE1;&#x606F;&#x5EFA;&#x6A21;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x5E93;&#x8BBE;&#x8BA1;&#x3002; &#x7B2C;&#x4E8C;&#x7C7B;&#x7684;&#x903B;&#x8F91;&#x6A21;&#x578B;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x5C42;&#x6B21;&#x6A21;&#x578B;&#x3001;&#x7F51;&#x72B6;&#x6A21;&#x578B;&#x3001;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x3001;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x6570;&#x636E;&#x6A21;&#x578B;&#x548C;&#x5BF9;&#x8C61;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x6A21;&#x578B;&#x3001;&#x534A;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x6A21;&#x578B;&#x7B49;&#x3002;&#x5B83;&#x662F;&#x6309;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x7684;&#x89C2;&#x70B9;&#x5BF9;&#x6570;&#x636E;&#x5EFA;&#x6A21;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x7684;&#x5B9E;&#x73B0;&#x3002; &#x7B2C;&#x4E8C;&#x7C7B;&#x4E2D;&#x7684;&#x7269;&#x7406;&#x6A21;&#x578B;&#x662F;&#x5BF9;&#x6570;&#x636E;&#x6700;&#x5E95;&#x5C42;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x5B83;&#x63CF;&#x8FF0;&#x6570;&#x636E;&#x5728;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x7684;&#x8868;&#x793A;&#x65B9;&#x5F0F;&#x548C;&#x5B58;&#x53D6;&#x65B9;&#x6CD5;&#xFF0C;&#x662F;&#x9762;&#x5411;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x7684;&#x3002; &#x5B9E;&#x4F53;&#xFF1A;&#x5BA2;&#x89C2;&#x5B58;&#x5728;&#x5E76;&#x53EF;&#x76F8;&#x4E92;&#x533A;&#x522B;&#x7684;&#x4E8B;&#x7269;&#x79F0;&#x4E3A;&#x5B9E;&#x4F53; &#x5C5E;&#x6027;&#xFF1A;&#x5B9E;&#x4F53;&#x5177;&#x6709;&#x7684;&#x67D0;&#x4E00;&#x7279;&#x5F81;&#x79F0;&#x4E3A;&#x5C5E;&#x6027; &#x7801;&#xFF1A;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x5B9E;&#x4F53;&#x7684;&#x5C5E;&#x6027;&#x96C6;&#x79F0;&#x4E3A;&#x7801; &#x5B9E;&#x4F53;&#x578B;&#xFF1A;&#x5177;&#x6709;&#x76F8;&#x540C;&#x5C5E;&#x6027;&#x7684;&#x5B9E;&#x4F53;&#x5FC5;&#x7136;&#x5177;&#x6709;&#x5171;&#x540C;&#x7684;&#x7279;&#x5F81;&#x548C;&#x6027;&#x8D28;&#xFF0C;&#x7528;&#x5B9E;&#x4F53;&#x540D;&#x53CA;&#x5176;&#x5C5E;&#x6027;&#x540D;&#x96C6;&#x5408;&#x6765;&#x62BD;&#x8C61;&#x548C;&#x523B;&#x753B;&#x540C;&#x7C7B;&#x5B9E;&#x4F53;&#xFF0C;&#x79F0;&#x4E3A;&#x5B9E;&#x4F53;&#x578B;&#x3002; &#x5B9E;&#x4F53;&#x96C6;&#xFF1A;&#x540C;&#x4E00;&#x7C7B;&#x578B;&#x5B9E;&#x4F53;&#x7684;&#x96C6;&#x5408;&#x79F0;&#x4E3A;&#x5B9E;&#x4F53;&#x96C6;&#x3002; &#x8054;&#x7CFB;&#xFF1A;&#x5B9E;&#x4F53;&#x5185;&#x90E8;&#x4EE5;&#x53CA;&#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x662F;&#x6709;&#x8054;&#x7CFB;&#x7684;&#x3002;&#x5B9E;&#x4F53;&#x5185;&#x90E8;&#x7684;&#x8054;&#x7CFB;&#x901A;&#x5E38;&#x662F;&#x6307;&#x7EC4;&#x6210;&#x5B9E;&#x4F53;&#x7684;&#x4E2A;&#x5C5E;&#x6027;&#x4E4B;&#x95F4;&#x7684;&#x8054;&#x7CFB;&#xFF0C;&#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x7684;&#x8054;&#x7CFB;&#x901A;&#x5E38;&#x662F;&#x6307;&#x4E0D;&#x540C;&#x5B9E;&#x4F53;&#x96C6;&#x4E4B;&#x95F4;&#x7684;&#x8054;&#x7CFB;&#x3002; &#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x7684;&#x8054;&#x7CFB;&#x6709;&#x4E00;&#x5BF9;&#x4E00;&#x3001;&#x4E00;&#x5BF9;&#x591A;&#x548C;&#x591A;&#x5BF9;&#x591A;&#x7B49;&#x591A;&#x79CD;&#x8054;&#x7CFB;&#x3002; &#x6982;&#x5FF5;&#x6A21;&#x578B;&#x7684;&#x4E00;&#x79CD;&#x8868;&#x793A;&#x65B9;&#x6CD5;&#xFF1A;&#x5B9E;&#x4F53;-&#x8054;&#x7CFB;&#x65B9;&#x6CD5;&#xFF08;Entity-Relationship approach&#xFF09;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x7528; E - R &#x56FE;&#xFF08;E - R diagram&#xFF09;&#x6765;&#x63CF;&#x8FF0;&#x73B0;&#x5B9E;&#x4E16;&#x754C;&#x7684;&#x6982;&#x5FF5;&#x6A21;&#x578B;&#xFF0C;E - R &#x65B9;&#x6CD5;&#x4E5F;&#x79F0;&#x4E3A; E - R &#x6A21;&#x578B;&#x3002; &#x6570;&#x636E;&#x6A21;&#x578B;&#x901A;&#x5E38;&#x7531;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3001;&#x6570;&#x636E;&#x64CD;&#x4F5C;&#x548C;&#x6570;&#x636E;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x4E09;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#x3002; &#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x63CF;&#x8FF0;&#x6570;&#x636E;&#x5E93;&#x7EC4;&#x6210;&#x5BF9;&#x8C61;&#x4EE5;&#x53CA;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x7684;&#x8054;&#x7CFB;&#x3002; &#x6570;&#x636E;&#x64CD;&#x4F5C;&#xFF1A;&#x6570;&#x636E;&#x64CD;&#x4F5C;&#x662F;&#x6307;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x5404;&#x79CD;&#x5BF9;&#x8C61;&#xFF08;&#x578B;&#xFF09;&#x7684;&#x5B9E;&#x4F8B;&#xFF08;&#x503C;&#xFF09;&#x5141;&#x8BB8;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x5305;&#x62EC;&#x64CD;&#x4F5C;&#x53CA;&#x6709;&#x5173;&#x7684;&#x64CD;&#x4F5C;&#x89C4;&#x5219;&#x3002;&#x6570;&#x636E;&#x5E93;&#x4E3B;&#x8981;&#x6709;&#x67E5;&#x8BE2;&#x548C;&#x66F4;&#x65B0;&#xFF08;&#x5305;&#x62EC;&#x63D2;&#x5165;&#x3001;&#x5220;&#x9664;&#x548C;&#x4FEE;&#x6539;&#xFF09;&#x4E24;&#x5927;&#x7C7B;&#x64CD;&#x4F5C;&#x3002; &#x6570;&#x636E;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF1A;&#x6570;&#x636E;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x662F;&#x4E00;&#x7EC4;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#x3002;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#x662F;&#x7ED9;&#x5B9A;&#x7684;&#x6570;&#x636E;&#x6A21;&#x578B;&#x4E2D;&#x6570;&#x636E;&#x53CA;&#x5176;&#x8054;&#x7CFB;&#x6240;&#x5177;&#x6709;&#x7684;&#x5236;&#x7EA6;&#x548C;&#x4F9D;&#x5B58;&#x89C4;&#x5219;&#xFF0C;&#x7528;&#x4EE5;&#x9650;&#x5B9A;&#x7B26;&#x5408;&#x6570;&#x636E;&#x6A21;&#x578B;&#x7684;&#x6570;&#x636E;&#x5E93;&#x72B6;&#x6001;&#x4EE5;&#x53CA;&#x72B6;&#x6001;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x7684;&#x6B63;&#x786E;&#xFF0C;&#x6709;&#x6548;&#x548C;&#x76F8;&#x5BB9;&#x3002; &#x6570;&#x636E;&#x5E93;&#x9886;&#x57DF;&#x4E2D;&#x4E3B;&#x8981;&#x7684;&#x903B;&#x8F91;&#x6570;&#x636E;&#x6A21;&#x578B;&#x6709;&#xFF1A; &#x5C42;&#x6B21;&#x6A21;&#x578B; &#x7F51;&#x72B6;&#x6A21;&#x578B; &#x5173;&#x7CFB;&#x6A21;&#x578B; &#x9762;&#x5411;&#x5BF9;&#x8C61;&#x6570;&#x636E;&#x6A21;&#x578B; &#x5BF9;&#x8C61;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x6A21;&#x578B; &#x534A;&#x7ED3;&#x6784;&#x5316;&#x6570;&#x636E;&#x6A21;&#x578B; &#x5176;&#x4E2D;&#x5C42;&#x6B21;&#x6A21;&#x578B;&#x548C;&#x7F51;&#x72B6;&#x6A21;&#x578B;&#x7EDF;&#x79F0;&#x4E3A;&#x683C;&#x5F0F;&#x5316;&#x6A21;&#x578B; &#x5C42;&#x6B21;&#x6A21;&#x578B;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A; &#x6709;&#x4E14;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x6CA1;&#x6709;&#x53CC;&#x4EB2;&#x7ED3;&#x70B9;&#xFF0C;&#x8FD9;&#x4E2A;&#x7ED3;&#x70B9;&#x79F0;&#x4E3A;&#x6839;&#x8282;&#x70B9; &#x6839;&#x4EE5;&#x5916;&#x7684;&#x5176;&#x4ED6;&#x7ED3;&#x70B9;&#x6709;&#x4E14;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x53CC;&#x4EB2;&#x7ED3;&#x70B9; &#x5C42;&#x6B21;&#x6A21;&#x578B;&#x50CF;&#x4E00;&#x68F5;&#x5012;&#x7ACB;&#x7684;&#x6811;&#xFF0C;&#x8282;&#x70B9;&#x7684;&#x53CC;&#x4EB2;&#x662F;&#x552F;&#x4E00;&#x7684; &#x7F51;&#x72B6;&#x6A21;&#x578B;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A; &#x5141;&#x8BB8;&#x4E00;&#x4E2A;&#x4EE5;&#x4E0A;&#x7684;&#x7ED3;&#x70B9;&#x65E0;&#x53CC;&#x4EB2; &#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E8E;&#x4E00;&#x4E2A;&#x7684;&#x53CC;&#x4EB2; &#x5173;&#x7CFB;&#x6A21;&#x578B;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A; &#x5173;&#x7CFB;&#xFF08;relation&#xFF09;&#xFF1A;&#x4E00;&#x4E2A;&#x5173;&#x7CFB;&#x5BF9;&#x5E94;&#x4E00;&#x5F20;&#x8868;&#x3002; &#x5143;&#x7EC4;&#xFF08;tuple&#xFF09;&#xFF1A;&#x8868;&#x4E2D;&#x7684;&#x4E00;&#x884C;&#x5373;&#x4E3A;&#x4E00;&#x4E2A;&#x5143;&#x7956;&#x3002; &#x5C5E;&#x6027;&#xFF08;attribute&#xFF09;&#xFF1A;&#x8868;&#x4E2D;&#x7684;&#x4E00;&#x5217;&#x5373;&#x4E3A;&#x4E00;&#x4E2A;&#x5C5E;&#x6027; &#x7801;&#xFF08;key&#xFF09;&#xFF1A;&#x4E5F;&#x79F0;&#x7801;&#x952E;&#x3002;&#x8868;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x5C5E;&#x6027;&#x7EC4;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x552F;&#x4E00;&#x786E;&#x5B9A;&#x4E00;&#x4E2A;&#x5143;&#x7956;&#x3002; &#x57DF;&#xFF08;domain&#xFF09;&#xFF1A;&#x57DF;&#x662F;&#x4E00;&#x7EC4;&#x5177;&#x6709;&#x76F8;&#x540C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x7684;&#x96C6;&#x5408;&#x3002;&#x5C5E;&#x6027;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x6765;&#x81EA;&#x67D0;&#x4E2A;&#x57DF;&#x3002; &#x5206;&#x91CF;&#xFF1A;&#x5143;&#x7EC4;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x503C;&#x3002; &#x5173;&#x7CFB;&#x6A21;&#x5F0F;&#x4E00;&#x822C;&#x8868;&#x793A;&#x4E3A;&#xFF1A;&#x5173;&#x7CFB;&#x540D;&#xFF08;&#x5C5E;&#x6027;1&#xFF0C;&#x5C5E;&#x6027;2&#xFF0C;&#x2026;&#xFF0C;&#x5C5E;&#x6027;n&#xFF09; &#x5173;&#x7CFB;&#x6A21;&#x578B;&#x8981;&#x6C42;&#x5173;&#x7CFB;&#x5FC5;&#x987B;&#x662F;&#x89C4;&#x8303;&#x5316;&#x7684;&#xFF0C;&#x5173;&#x7CFB;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5206;&#x91CF;&#x5FC5;&#x987B;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x5206;&#x7684;&#x6570;&#x636E;&#x9879;&#x3002; 1.3 &#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x7684;&#x7ED3;&#x6784; &#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x7684;&#x4E09;&#x7EA7;&#x6A21;&#x5F0F;&#x7ED3;&#x6784;&#x662F;&#x6307;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x662F;&#x7531;&#x5916;&#x6A21;&#x5F0F;&#x3001;&#x6A21;&#x5F0F;&#x548C;&#x5185;&#x6A21;&#x5F0F;&#x4E09;&#x673A;&#x6784;&#x6210;&#x3002; &#x5916;&#x6A21;&#x5F0F;&#xFF1A;&#x5916;&#x6A21;&#x5F0F;&#x4E5F;&#x79F0;&#x5B50;&#x6A21;&#x5F0F;&#x6216;&#x7528;&#x6237;&#x6A21;&#x5F0F;&#xFF0C;&#x5B83;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7528;&#x6237;&#x80FD;&#x591F;&#x770B;&#x89C1;&#x548C;&#x4F7F;&#x7528;&#x7684;&#x5C40;&#x90E8;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x548C;&#x7279;&#x5F81;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5E93;&#x7528;&#x6237;&#x7684;&#x6570;&#x636E;&#x89C6;&#x56FE;&#xFF0C;&#x662F;&#x4E0E;&#x67D0;&#x4E00;&#x5E94;&#x7528;&#x6709;&#x5173;&#x7684;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x8868;&#x793A;&#x3002;&#x5916;&#x6A21;&#x5F0F;&#x901A;&#x5E38;&#x662F;&#x6A21;&#x5F0F;&#x7684;&#x5B50;&#x96C6;&#xFF0C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E2A;&#x5916;&#x6A21;&#x5F0F;&#x3002;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x5916;&#x6A21;&#x5F0F;&#x6570;&#x636E;&#x5B9A;&#x4E49;&#x8BED;&#x8A00;&#xFF08;&#x5916;&#x6A21;&#x5F0F;DDL&#xFF09;&#x6765;&#x4E25;&#x683C;&#x5730;&#x5B9A;&#x4E49;&#x5916;&#x6A21;&#x5F0F;&#x3002; &#x6A21;&#x5F0F;&#xFF1A;&#x6A21;&#x5F0F;&#x4E5F;&#x79F0;&#x903B;&#x8F91;&#x6A21;&#x5F0F;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x5168;&#x4F53;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x7ED3;&#x6784;&#x548C;&#x7279;&#x5F81;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x662F;&#x6240;&#x6709;&#x7528;&#x6237;&#x7684;&#x516C;&#x5171;&#x6570;&#x636E;&#x89C6;&#x56FE;&#x3002;&#x6A21;&#x5F0F;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x5728;&#x903B;&#x8F91;&#x7EA7;&#x4E0A;&#x7684;&#x89C6;&#x56FE;&#xFF0C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6A21;&#x5F0F;&#x3002;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x6A21;&#x5F0F;&#x6570;&#x636E;&#x5B9A;&#x4E49;&#x8BED;&#x8A00;&#xFF08;&#x6A21;&#x5F0F;DDL&#xFF09;&#x6765;&#x4E25;&#x683C;&#x5B9A;&#x4E49;&#x6A21;&#x5F0F;&#x3002; &#x5185;&#x6A21;&#x5F0F;&#xFF1A;&#x5185;&#x6A21;&#x5F0F;&#x4E5F;&#x79F0;&#x5B58;&#x50A8;&#x6A21;&#x5F0F;&#xFF0C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5185;&#x6A21;&#x5F0F;&#xFF0C;&#x5B83;&#x662F;&#x6570;&#x636E;&#x7269;&#x7406;&#x7ED3;&#x6784;&#x4E0E;&#x5B58;&#x50A8;&#x65B9;&#x5F0F;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x662F;&#x6570;&#x636E;&#x5728;&#x6570;&#x636E;&#x5E93;&#x5185;&#x90E8;&#x7684;&#x7EC4;&#x7EC7;&#x65B9;&#x5F0F;&#x3002; &#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x7684;&#x4E09;&#x7EA7;&#x6A21;&#x5F0F;&#x662F;&#x6570;&#x636E;&#x7684;&#x4E09;&#x4E2A;&#x62BD;&#x8C61;&#x7EA7;&#x522B;&#xFF0C;&#x4ED6;&#x628A;&#x6570;&#x636E;&#x7684;&#x5177;&#x4F53;&#x7EC4;&#x7EC7;&#x7559;&#x7ED9;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#xFF0C;&#x4F7F;&#x7528;&#x6237;&#x80FD;&#x903B;&#x8F91;&#x5730;&#x3001;&#x62BD;&#x8C61;&#x5730;&#x5904;&#x7406;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x4E0D;&#x5173;&#x5FC3;&#x6570;&#x636E;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x7684;&#x5177;&#x4F53;&#x8868;&#x73B0;&#x65B9;&#x5F0F;&#x4E0E;&#x5B58;&#x50A8;&#x65B9;&#x5F0F;&#x3002;&#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x5728;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x8FD9;&#x4E09;&#x4E2A;&#x62BD;&#x8C61;&#x5C42;&#x6B21;&#x7684;&#x8054;&#x7CFB;&#x548C;&#x8F6C;&#x6362;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x5728;&#x8FD9;&#x4E09;&#x7EA7;&#x6A21;&#x5F0F;&#x4E4B;&#x95F4;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x5C42;&#x6620;&#x50CF;&#xFF1A;&#x5916;&#x6A21;&#x5F0F; / &#x6A21;&#x5F0F;&#x6620;&#x50CF;&#x548C;&#x6A21;&#x5F0F;/&#x5185;&#x6A21;&#x5F0F;&#x6620;&#x50CF;&#x3002; &#x4E24;&#x5C42;&#x6620;&#x50CF;&#x4FDD;&#x8BC1;&#x4E86;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x80FD;&#x591F;&#x5177;&#x6709;&#x8F83;&#x9AD8;&#x7684;&#x903B;&#x8F91;&#x72EC;&#x7ACB;&#x6027;&#x548C;&#x7269;&#x7406;&#x72EC;&#x7ACB;&#x6027; &#x5916;&#x6A21;&#x5F0F; / &#x6A21;&#x5F0F;&#x6620;&#x50CF;&#xFF1A;&#x5F53;&#x6A21;&#x5F0F;&#x6539;&#x53D8;&#x65F6;&#xFF0C;&#x6709;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x5458;&#x5BF9;&#x5404;&#x4E2A;&#x5916;&#x6A21;&#x5F0F;/&#x6A21;&#x5F0F;&#x6620;&#x50CF;&#x505A;&#x76F8;&#x5E94;&#x7684;&#x6539;&#x53D8;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x5916;&#x6A21;&#x5F0F;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x3002;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x662F;&#x4F9D;&#x636E;&#x6570;&#x636E;&#x7684;&#x5916;&#x6A21;&#x5F0F;&#x7F16;&#x5199;&#x7684;&#xFF0C;&#x4ECE;&#x800C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E0D;&#x5FC5;&#x4FEE;&#x6539;&#xFF0C;&#x4FDD;&#x8BC1;&#x4E86;&#x6570;&#x636E;&#x4E0E;&#x7A0B;&#x5E8F;&#x7684;&#x903B;&#x8F91;&#x72EC;&#x7ACB;&#x6027;&#xFF0C;&#x7B80;&#x79F0;&#x6570;&#x636E;&#x7684;&#x903B;&#x8F91;&#x72EC;&#x7ACB;&#x6027;&#x3002; &#x6A21;&#x5F0F; / &#x5185;&#x6A21;&#x5F0F;&#x6620;&#x50CF;&#xFF1A;&#x5F53;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x6539;&#x53D8;&#x65F6;&#xFF0C;&#x7531;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x5458;&#x5BF9;&#x6A21;&#x5F0F;/&#x5185;&#x6A21;&#x5F0F;&#x6620;&#x50CF;&#x4F5C;&#x76F8;&#x5E94;&#x6539;&#x53D8;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x6A21;&#x5F0F;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#xFF0C;&#x4ECE;&#x800C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E5F;&#x4E0D;&#x6BD4;&#x6539;&#x53D8;&#x3002;&#x4FDD;&#x8BC1;&#x4E86;&#x6570;&#x636E;&#x4E0E;&#x7A0B;&#x5E8F;&#x7684;&#x7269;&#x7406;&#x72EC;&#x7ACB;&#x6027;&#xFF0C;&#x7B80;&#x79F0;&#x6570;&#x636E;&#x7684;&#x7269;&#x7406;&#x72EC;&#x7ACB;&#x6027;&#x3002; 1.4 &#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x7684;&#x7EC4;&#x6210; &#x786C;&#x4EF6;&#x5E73;&#x53F0;&#x7EA7;&#x6570;&#x636E;&#x5E93; &#x8F6F;&#x4EF6; &#x4EBA;&#x5458;&#xFF1A; &#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x5458;&#xFF1A;&#x8D1F;&#x8D23;&#x5168;&#x9762;&#x7BA1;&#x7406;&#x548C;&#x63A7;&#x5236;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF; &#x51B3;&#x5B9A;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x4FE1;&#x606F;&#x5185;&#x5BB9;&#x548C;&#x7ED3;&#x6784; &#x51B3;&#x5B9A;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5B58;&#x50A8;&#x7ED3;&#x6784;&#x548C;&#x5B58;&#x53D6;&#x7B56;&#x7565; &#x5B9A;&#x4E49;&#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x6027;&#x8981;&#x6C42;&#x548C;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#x6761;&#x4EF6; &#x76D1;&#x63A7;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4F7F;&#x7528;&#x548C;&#x8FD0;&#x884C; &#x6570;&#x636E;&#x5E93;&#x7684;&#x6539;&#x8FDB;&#x548C;&#x91CD;&#x7EC4;&#x3001;&#x91CD;&#x6784; &#x7CFB;&#x7EDF;&#x5206;&#x6790;&#x5458;&#xFF1A;&#x8D1F;&#x8D23;&#x5E94;&#x7528;&#x7CFB;&#x7EDF;&#x7684;&#x9700;&#x6C42;&#x5206;&#x6790;&#x548C;&#x89C4;&#x8303;&#x8BF4;&#x660E;&#xFF0C;&#x8981;&#x548C;&#x7528;&#x6237;&#x53CA;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x5458;&#x76F8;&#x7ED3;&#x5408;&#xFF0C;&#x786E;&#x5B9A;&#x7CFB;&#x7EDF;&#x7684;&#x786C;&#x4EF6;&#x8F6F;&#x4EF6;&#x914D;&#x7F6E;&#xFF0C;&#x5E76;&#x53C2;&#x4E0E;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#x7684;&#x6982;&#x8981;&#x8BBE;&#x8BA1; &#x6570;&#x636E;&#x5E93;&#x8BBE;&#x8BA1;&#x4EBA;&#x5458;&#xFF1A;&#x8D1F;&#x8D23;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6570;&#x636E;&#x7684;&#x786E;&#x5B9A;&#x53CA;&#x6570;&#x636E;&#x5E93;&#x5404;&#x7EA7;&#x6A21;&#x5F0F;&#x7684;&#x8BBE;&#x8BA1;&#x3002; &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5458;&#xFF1A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5458;&#x8D1F;&#x8D23;&#x8BBE;&#x8BA1;&#x548C;&#x7F16;&#x5199;&#x5E94;&#x7528;&#x7CFB;&#x7EDF;&#x7684;&#x7A0B;&#x5E8F;&#x6A21;&#x5757;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#x548C;&#x5B89;&#x88C5; &#x7528;&#x6237;&#xFF1A;&#x8FD9;&#x91CC;&#x7684;&#x7528;&#x6237;&#x6307;&#x6700;&#x7EC8;&#x7528;&#x6237;&#x3002;&#x6700;&#x7EC8;&#x7528;&#x6237;&#x901A;&#x8FC7;&#x5E94;&#x7528;&#x7CFB;&#x7EDF;&#x7684;&#x7528;&#x6237;&#x63A5;&#x53E3;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x5E93;&#x3002;&#x5E38;&#x7528;&#x7684;&#x63A5;&#x53E3;&#x6709;&#x6D4F;&#x89C8;&#x5668;&#x3001;&#x83DC;&#x5355;&#x9A71;&#x52A8;&#x3001;&#x8868;&#x683C;&#x64CD;&#x4F5C;&#x3001;&#x56FE;&#x5F62;&#x663E;&#x793A;&#x7B49;&#x3002; 2.1 &#x5173;&#x7CFB;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x53CA;&#x5F62;&#x5F0F;&#x5B9A;&#x4E49; &#x57DF;&#xFF1A;&#x57DF;&#x662F;&#x4E00;&#x7EC4;&#x5177;&#x6709;&#x76F8;&#x540C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x7684;&#x96C6;&#x5408; &#x7B1B;&#x5361;&#x5C14;&#x79EF;&#xFF1A;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#x662F;&#x57DF;&#x4E0A;&#x7684;&#x4E00;&#x79CD;&#x96C6;&#x5408;&#x8FD0;&#x7B97; &#x4E00;&#x4E2A;&#x57DF;&#x5141;&#x8BB8;&#x7684;&#x4E0D;&#x540C;&#x53D6;&#x503C;&#x4E2A;&#x6570;&#x79F0;&#x4E3A;&#x8FD9;&#x4E2A;&#x57DF;&#x7684;&#x57FA;&#x6570; &#x82E5;&#x5173;&#x7CFB;&#x4E2D;&#x7684;&#x67D0;&#x4E00;&#x5C5E;&#x6027;&#x7EC4;&#x7684;&#x503C;&#x80FD;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x4E00;&#x4E2A;&#x5143;&#x7956;&#xFF0C;&#x800C;&#x5176;&#x5B50;&#x96C6;&#x4E0D;&#x80FD;&#xFF0C;&#x5219;&#x79F0;&#x8BE5;&#x5C5E;&#x6027;&#x7EC4;&#x4E3A;&#x5019;&#x9009;&#x7801;&#xFF0C;&#x82E5;&#x4E00;&#x4E2A;&#x5173;&#x7CFB;&#x6709;&#x591A;&#x4E2A;&#x5019;&#x9009;&#x7801;&#xFF0C;&#x5219;&#x9009;&#x5B9A;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x4E3A;&#x4E3B;&#x7801; &#x5173;&#x7CFB;&#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#xFF1A;&#x57FA;&#x672C;&#x5173;&#x7CFB;&#xFF08;&#x901A;&#x5E38;&#x53C8;&#x79F0;&#x4E3A;&#x57FA;&#x672C;&#x8868;&#x6216;&#x57FA;&#x8868;&#xFF09;&#x3001;&#x67E5;&#x8BE2;&#x8868;&#x548C;&#x89C6;&#x56FE;&#x8868;&#x3002; &#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#xFF0C;&#x5173;&#x7CFB;&#x6A21;&#x5F0F;&#x662F;&#x578B;&#xFF0C;&#x5173;&#x7CFB;&#x662F;&#x503C;&#xFF0C;&#x5173;&#x7CFB;&#x6A21;&#x5F0F;&#x662F;&#x5BF9;&#x5173;&#x7CFB;&#x7684;&#x63CF;&#x8FF0;&#x3002; 2.2 &#x5173;&#x7CFB;&#x64CD;&#x4F5C; &#x5173;&#x7CFB;&#x6A21;&#x5F0F;&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x5173;&#x7CFB;&#x64CD;&#x4F5C;&#x5305;&#x62EC;&#x67E5;&#x8BE2;&#xFF08;query&#xFF09;&#x64CD;&#x4F5C;&#x548C;&#x63D2;&#x5165;&#xFF08;insert&#xFF09;&#x3001;&#x5220;&#x9664;&#xFF08;delete&#xFF09;&#x3001;&#x4FEE;&#x6539;&#xFF08;update&#xFF09;&#x64CD;&#x4F5C;&#x4E24;&#x5927;&#x90E8;&#x5206; &#x67E5;&#x8BE2;&#x64CD;&#x4F5C;&#x53C8;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x9009;&#x62E9;&#xFF08;select&#xFF09;&#x3001;&#x6295;&#x5F71;&#xFF08;project&#xFF09;&#x3001;&#x8FDE;&#x63A5;&#xFF08;join&#xFF09;&#x3001;&#x9664;&#xFF08;divide&#xFF09;&#x3001;&#x5E76;&#xFF08;union&#xFF09;&#x3001;&#x5DEE;&#xFF08;except&#xFF09;&#x3001;&#x4EA4;&#xFF08;intersection&#xFF09;&#x3001;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#x7B49;&#x3002;&#x5176;&#x4E2D;&#x9009;&#x62E9;&#x3001;&#x6295;&#x5F71;&#x3001;&#x5E76;&#x3001;&#x5DEE;&#x3001;&#x7B1B;&#x5361;&#x5C14;&#x79EF;&#x662F; 5 &#x79CD;&#x57FA;&#x672C;&#x64CD;&#x4F5C;&#x3002; &#x5173;&#x7CFB;&#x6570;&#x636E;&#x8BED;&#x8A00;&#x5206;&#x4E3A;&#xFF1A; &#x5173;&#x7CFB;&#x4EE3;&#x6570;&#x8BED;&#x8A00; &#x5173;&#x7CFB;&#x6F14;&#x7B97;&#x8BED;&#x8A00; &#x5143;&#x7EC4;&#x5173;&#x7CFB;&#x6F14;&#x7B97;&#x8BED;&#x8A00; &#x57DF;&#x5173;&#x7CFB;&#x6F14;&#x7B97;&#x8BED;&#x8A00; &#x5177;&#x6709;&#x5173;&#x7CFB;&#x4EE3;&#x6570;&#x548C;&#x5173;&#x7CFB;&#x6F14;&#x7B97;&#x53CC;&#x91CD;&#x7279;&#x70B9;&#x7684;&#x8BED;&#x8A00;-&#x7ED3;&#x6784;&#x5316;&#x67E5;&#x8BE2;&#x8BED;&#x8A00; 2.3 &#x5173;&#x7CFB;&#x7684;&#x5B8C;&#x6574;&#x6027; &#x5173;&#x7CFB;&#x6A21;&#x578B;&#x4E2D;&#x6709;&#x4E09;&#x7C7B;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#xFF1A;&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x3001;&#x53C2;&#x7167;&#x5B8C;&#x6574;&#x6027;&#x548C;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x5B8C;&#x6574;&#x6027;&#x3002;&#x5176;&#x4E2D;&#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x548C;&#x53C2;&#x7167;&#x5B8C;&#x6574;&#x6027;&#x662F;&#x5173;&#x7CFB;&#x6A21;&#x578B;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;&#x7684;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x88AB;&#x79F0;&#x4F5C;&#x662F;&#x5173;&#x7CFB;&#x7684;&#x4E24;&#x4E2A;&#x4E0D;&#x53D8;&#x6027;&#x3002; &#x5B9E;&#x4F53;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#xFF1A;&#x82E5;&#x5C5E;&#x6027;&#xFF08;&#x6307;&#x4E00;&#x4E2A;&#x6216;&#x4E00;&#x7EC4;&#x5C5E;&#x6027;&#xFF09;A &#x662F;&#x57FA;&#x672C;&#x5173;&#x7CFB; R &#x7684;&#x4E3B;&#x5C5E;&#x6027;&#xFF0C;&#x5219; A &#x4E0D;&#x80FD;&#x53D6;&#x7A7A;&#x503C;&#xFF08;nullvalue&#xFF09;&#x3002;&#x6240;&#x8C13;&#x7A7A;&#x503C;&#x5C31;&#x662F;&#x201C;&#x4E0D;&#x77E5;&#x9053;&#x201D;&#x6216;&#x201C;&#x4E0D;&#x5B58;&#x5728;&#x201D;&#x6216;&#x201C;&#x65E0;&#x610F;&#x4E49;&#x201D;&#x7684;&#x503C;&#x3002; &#x53C2;&#x7167;&#x5B8C;&#x6574;&#x6027;&#x89C4;&#x5219;&#xFF1A;&#x82E5;&#x5C5E;&#x6027;&#xFF08;&#x6216;&#x5C5E;&#x6027;&#x7EC4;&#xFF09;F &#x662F;&#x57FA;&#x672C;&#x5173;&#x7CFB; R &#x7684;&#x5916;&#x7801;&#xFF0C;&#x5B83;&#x4E0E;&#x57FA;&#x672C;&#x5173;&#x7CFB; S &#x7684;&#x4E3B;&#x7801; K &#x76F8;&#x5BF9;&#x5E94;&#xFF08;&#x57FA;&#x672C;&#x5173;&#x7CFB; R &#x548C; S &#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x5173;&#x7CFB;&#xFF09;&#xFF0C;&#x5219;&#x5BF9;&#x4E8E; R &#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7EC4;&#x5728; F &#x4E0A;&#x7684;&#x503C;&#x5FC5;&#x987B;&#xFF1A; &#x6216;&#x8005;&#x53D6;&#x7A7A;&#x503C;&#xFF08;F &#x7684;&#x6BCF;&#x4E2A;&#x5C5E;&#x6027;&#x503C;&#x5747;&#x4E3A;&#x7A7A;&#x503C;&#xFF09; &#x6216;&#x8005;&#x7B49;&#x4E8E; S &#x4E2D;&#x67D0;&#x4E2A;&#x5143;&#x7EC4;&#x7684;&#x4E3B;&#x7801;&#x503C; &#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x5B8C;&#x6574;&#x6027;&#x5C31;&#x662F;&#x9488;&#x5BF9;&#x67D0;&#x4E00;&#x5177;&#x4F53;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#xFF0C;&#x5B83;&#x53CD;&#x5E94;&#x67D0;&#x4E00;&#x5177;&#x4F53;&#x5E94;&#x7528;&#x6240;&#x6D89;&#x53CA;&#x7684;&#x6570;&#x636E;&#x5FC5;&#x987B;&#x6EE1;&#x8DB3;&#x7684;&#x8BED;&#x4E49;&#x8981;&#x6C42;&#x3002; 2.4 &#x5173;&#x7CFB;&#x4EE3;&#x6570; &#x4F20;&#x7EDF;&#x7684;&#x96C6;&#x5408;&#x8FD0;&#x7B97;&#x662F;&#x4E8C;&#x76EE;&#x8FD0;&#x7B97;&#xFF0C;&#x5305;&#x62EC;&#x5E76;&#x3001;&#x5DEE;&#x3001;&#x4EA4;&#x3001;&#x7B1B;&#x5361;&#x5C14;&#x79EF; 4 &#x79CD;&#x8FD0;&#x7B97;&#x3002; &#x4E13;&#x95E8;&#x7684;&#x5173;&#x7CFB;&#x8FD0;&#x5305;&#x62EC;&#x9009;&#x62E9;&#x3001;&#x6295;&#x5F71;&#x3001;&#x8FDE;&#x63A5;&#x3001;&#x9664;&#x7B49;&#x8FD0;&#x7B97;&#x3002; 3.1 SQL &#x6982;&#x8FF0; SQL &#x96C6;&#x6570;&#x636E;&#x67E5;&#x8BE2;&#x3001;&#x6570;&#x636E;&#x64CD;&#x7EB5;&#x3001;&#x6570;&#x636E;&#x5B9A;&#x4E49;&#x548C;&#x6570;&#x636E;&#x63A7;&#x5236;&#x529F;&#x80FD;&#x4E8E;&#x4E00;&#x4F53;&#xFF0C;&#x5176;&#x4E3B;&#x8981;&#x7279;&#x70B9;&#x5305;&#x62EC;&#xFF1A; &#x7EFC;&#x5408;&#x7EDF;&#x4E00; &#x9AD8;&#x5EA6;&#x975E;&#x8FC7;&#x7A0B;&#x5316; &#x9762;&#x5411;&#x96C6;&#x5408;&#x7684;&#x64CD;&#x4F5C;&#x65B9;&#x5F0F; &#x4EE5;&#x540C;&#x4E00;&#x79CD;&#x8BED;&#x6CD5;&#x7ED3;&#x6784;&#x63D0;&#x4F9B;&#x591A;&#x79CD;&#x4F7F;&#x7528;&#x65B9;&#x5F0F; &#x8BED;&#x8A00;&#x7B80;&#x6D01;&#xFF0C;&#x6613;&#x5B66;&#x6613;&#x7528; &#x652F;&#x6301; SQL &#x7684;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x540C;&#x6837;&#x652F;&#x6301;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x4E09;&#x7EA7;&#x6A21;&#x5F0F;&#x7ED3;&#x6784;&#x3002;&#x5176;&#x4E2D;&#x5916;&#x6A21;&#x5F0F;&#x5305;&#x62EC;&#x82E5;&#x5E72;&#x89C6;&#x56FE;&#x548C;&#x90E8;&#x5206;&#x57FA;&#x672C;&#x8868;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x6A21;&#x5F0F;&#x5305;&#x62EC;&#x82E5;&#x5E72;&#x57FA;&#x672C;&#x8868;&#xFF0C;&#x5185;&#x6A21;&#x5F0F;&#x5305;&#x62EC;&#x82E5;&#x5E72;&#x5B58;&#x50A8;&#x6587;&#x4EF6;&#x3002; 3.2 &#x5B66;&#x751F;-&#x8BFE;&#x7A0B;&#x6570;&#x636E;&#x5E93; &#x5B66;&#x751F;&#x8868;&#xFF1A;Student&#xFF08;Sno&#xFF0C;Sname&#xFF0C;Ssex&#xFF0C;Sage&#xFF0C;Sdept&#xFF09; &#x8BFE;&#x7A0B;&#x8868;&#xFF1A;Course&#xFF08;Cno&#xFF0C;Cname&#xFF0C;Cpno&#xFF0C;Ccredit&#xFF09; &#x5B66;&#x751F;&#x9009;&#x8BFE;&#x8868;&#xFF1A;SC&#xFF08;Sno&#xFF0C;Cno&#xFF0C;Grade&#xFF09; 3.3 &#x6570;&#x636E;&#x5B9A;&#x4E49; - &#x521B;&#x5EFA; &#x5220;&#x9664; &#x4FEE;&#x6539; &#x6A21;&#x5F0F; CREATE SCHEMA DROP SCHEMA &#x8868; CREATE TABLE DROP TABLE ALTER TABLE &#x89C6;&#x56FE; CREATE VIEW DROP VIEW &#x7D22;&#x5F15; CREATE INDEX DROP INDEX ALTER INDEX &#x4E00;&#x4E2A;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x7684;&#x5B9E;&#x4F8B;&#x4E2D;&#x53EF;&#x4EE5;&#x5EFA;&#x7ACB;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x53EF;&#x4EE5;&#x5EFA;&#x7ACB;&#x591A;&#x4E2A;&#x6A21;&#x5F0F;&#xFF0C;&#x4E00;&#x4E2A;&#x6A21;&#x5F0F;&#x4E0B;&#x901A;&#x5E38;&#x5305;&#x62EC;&#x591A;&#x4E2A;&#x8868;&#x3001;&#x89C6;&#x56FE;&#x548C;&#x7D22;&#x5F15;&#x7B49;&#x6570;&#x636E;&#x5E93;&#x5BF9;&#x8C61;&#x3002; &#x5B9A;&#x4E49;&#x6A21;&#x5F0F;&#xFF1A; CREATE SCHEMA &lt;&#x6A21;&#x5F0F;&#x540D;&gt; AUTHORIZATION &lt;&#x7528;&#x6237;&#x540D;&gt; &#x5220;&#x9664;&#x6A21;&#x5F0F;&#xFF1A; DROP SCHEMA &lt;&#x6A21;&#x5F0F;&#x540D;&gt;&lt;CASCADE | RESTRICT&gt; &#x5B9A;&#x4E49;&#x57FA;&#x672C;&#x8868;&#xFF1A; CREATE TABLE &lt;&#x8868;&#x540D;&gt; &#xFF08;&lt;&#x5217;&#x540D;&gt;&lt;&#x6570;&#x636E;&#x7C7B;&#x578B;&gt; [&#x5217;&#x7EA7;&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;&#x6761;&#x4EF6;] ...&#xFF09; &#x5EFA;&#x7ACB;&#x4E00;&#x4E2A; &#x201C;&#x5B66;&#x751F;&#x201D; &#x8868; Student 1234567CREATE TABLE Student (trueSno CHAR(9) PRIMARY KEY,trueSname CHAR(20) UNIQUE,trueSsex CHAR(2),trueSage SMALLINT,trueSdept CHAR(20)); &#x6570;&#x636E;&#x7C7B;&#x578B; &#x6570;&#x636E;&#x7C7B;&#x578B; &#x542B;&#x4E49; CHAR(n),character(n) &#x957F;&#x5EA6;&#x4E3A; n &#x7684;&#x5B9A;&#x957F;&#x5B57;&#x7B26;&#x4E32; varchar(n),charactervarying(n) &#x6700;&#x5927;&#x957F;&#x5EA6;&#x4E3A; n &#x7684;&#x53D8;&#x957F;&#x5B57;&#x7B26;&#x4E32; CLOB &#x5B57;&#x7B26;&#x4E32;&#x5927;&#x5BF9;&#x8C61; BLOB &#x4E8C;&#x8FDB;&#x5236;&#x5927;&#x5BF9;&#x8C61; INT, INTEGER &#x957F;&#x6574;&#x6570; smallint &#x77ED;&#x6574;&#x6570; bigint &#x5927;&#x6574;&#x6570; real &#x5355;&#x7CBE;&#x5EA6;&#x6D6E;&#x70B9;&#x6570; double persision &#x53CC;&#x7CBE;&#x5EA6;&#x6D6E;&#x70B9;&#x6570; float(n) &#x53EF;&#x9009;&#x7CBE;&#x5EA6;&#x7684;&#x6D6E;&#x70B9;&#x6570; boolean &#x903B;&#x8F91;&#x5E03;&#x5C14;&#x91CF; date &#x65F6;&#x95F4;&#xFF0C;&#x5E74;&#x6708;&#x65E5; time &#x65F6;&#x95F4;&#xFF0C;&#x65F6;&#x5206;&#x79D2; timestamp &#x65F6;&#x95F4;&#x6233;&#x7C7B;&#x578B; interval &#x65F6;&#x95F4;&#x95F4;&#x9694;&#x7C7B;&#x578B; &#x6A21;&#x5F0F;&#x4E0E;&#x8868; CREATE TABLE &#x201C;S-T&#x201D;.Student(...) / Student &#x6240;&#x5C5E;&#x7684;&#x6A21;&#x5F0F;&#x662F; S-T / &#x4FEE;&#x6539;&#x57FA;&#x672C;&#x8868; 1234ALTER TABLE &lt;&#x8868;&#x540D;&gt;[ADD [COLUMN] &lt;&#x65B0;&#x5217;&#x540D;&gt;&lt;&#x6570;&#x636E;&#x7ED3;&#x6784;&gt; [&#x5B8C;&#x6574;&#x6027;&#x7EA6;&#x675F;]][DROP [COLUMN] &lt;&#x5217;&#x540D;&gt; [CASCADE | RESTRICT]][ALTER COLUMN &lt;&#x5217;&#x540D;&gt;&lt;&#x6570;&#x636E;&#x7ED3;&#x6784;&gt;]&#xFF1B; &#x5411; Student &#x8868;&#x589E;&#x52A0;&#x201C;&#x5165;&#x5B66;&#x65F6;&#x95F4;&#x201D;&#x5217;&#xFF0C;&#x5176;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3A;&#x65E5;&#x671F; ALTER TABLE Student ADD S_entrance DATE&#xFF1B; &#x5C06;&#x5E74;&#x9F84;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7531;&#x5B57;&#x7B26;&#x578B;&#x6539;&#x4E3A;&#x6574;&#x6570; ALTER TABLE Student ALTER COLUMN Sage INT&#xFF1B; &#x589E;&#x52A0;&#x8BFE;&#x7A0B;&#x540D;&#x79F0;&#x5FC5;&#x987B;&#x53D6;&#x552F;&#x4E00;&#x503C;&#x7684;&#x7EA6;&#x675F;&#x6761;&#x4EF6; ALTER TABLE Course ADD UNIQUE(Cname)&#xFF1B; &#x5220;&#x9664;&#x57FA;&#x672C;&#x8868; 1DROP TABLE &lt;&#x8868;&#x540D;&gt; [RESTRICT | CASCADE]; &#x5220;&#x9664; Student &#x8868; DROP TABLE Student CASCADE; &#x5EFA;&#x7ACB;&#x7D22;&#x5F15; 1CREATE [UNIQUE] [CLUSTER] INDEX &lt;&#x7D22;&#x5F15;&#x540D;&gt; ON &lt;&#x8868;&#x540D;&gt;(&lt;&#x5217;&#x540D;&gt; ...); &#x4FEE;&#x6539;&#x7D22;&#x5F15; ALTER INDEX &lt;&#x65E7;&#x7D22;&#x5F15;&#x540D;&gt; RENAME TO &lt;&#x65B0;&#x7D22;&#x5F15;&#x540D;&gt;; &#x5220;&#x9664;&#x7D22;&#x5F15; DROP INDEX &lt;&#x7D22;&#x5F15;&#x540D;&gt; &#x6570;&#x636E;&#x67E5;&#x8BE2; 12345SELECT [ALL | DISTINCT] &lt;&#x76EE;&#x6807;&#x8868;&#x8FBE;&#x5F0F;&gt; [,&lt;&#x76EE;&#x6807;&#x8868;&#x8FBE;&#x5F0F;&#x5217;&#x8868;&gt;] ...FROM &lt;&#x8868;&#x540D;&#x6216;&#x89C6;&#x56FE;&#x540D;&gt; [,&lt;&#x8868;&#x540D;&#x6216;&#x89C6;&#x56FE;&#x540D;&gt; ...] | (&lt;SELECT &#x8BED;&#x53E5;&gt;) [AS] &lt;&#x522B;&#x540D;&gt;[WHERE &lt;&#x6761;&#x4EF6;&#x8868;&#x8FBE;&#x5F0F;&gt;][GROUP BY &lt;&#x5217;&#x540D; 1&gt; [HAVING &lt;&#x6761;&#x4EF6;&#x8868;&#x8FBE;&#x5F0F;&gt;]][ORDER BY &lt;&#x5217;&#x540D; 2&gt; [ASC | DESC]]; &#x67E5;&#x8BE2;&#x5168;&#x4F53;&#x5B66;&#x751F;&#x7684;&#x5B66;&#x53F7;&#x548C;&#x59D3;&#x540D; 12SELECT Sno, SnameFROM Student; &#x67E5;&#x8BE2;&#x5168;&#x4F53;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x3001;&#x5B66;&#x53F7;&#x3001;&#x6240;&#x5728;&#x7CFB;&#x3002; 12SELECT Sname, Sno, SdeptFROM Student; &#x67E5;&#x8BE2;&#x5168;&#x90E8;&#x5217; 12SELECT *FROM Student; &#x67E5;&#x8BE2;&#x5168;&#x4F53;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x53CA;&#x5176;&#x51FA;&#x751F;&#x5E74;&#x4EFD; 12SELECT Sname, 2017-SageFROM Student; &#x67E5;&#x8BE2;&#x5168;&#x4F53;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x3001;&#x51FA;&#x751F;&#x5E74;&#x4EFD;&#x548C;&#x6240;&#x5728;&#x7CFB;&#xFF0C;&#x8981;&#x6C42;&#x7528;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#x8868;&#x793A;&#x7CFB;&#x540D; 12SELECT Sname, &apos;Year of Brith:&apos;, 2017-Sage, LOWER(Sdept)FROM Student; &#x67E5;&#x8BE2;&#x9009;&#x4FEE;&#x4E86;&#x8BFE;&#x7A0B;&#x7684;&#x5B66;&#x751F;&#x5B66;&#x53F7;&#xFF08;&#x53BB;&#x6389;&#x91CD;&#x590D;&#x884C;&#xFF09; 12SELECT DISTINCT SnoFROM SC&#xFF1B; &#x67E5;&#x8BE2;&#x6240;&#x6709;&#x5E74;&#x9F84;&#x5728; 20 &#x5C81;&#x4EE5;&#x4E0B;&#x7684;&#x5B66;&#x751F;&#x59D3;&#x540D;&#x53CA;&#x5176;&#x5E74;&#x9F84; 123SELECT Sname&#xFF0C;SageFROM StudentWHERE Sage &lt; 20; &#x67E5;&#x8BE2;&#x8003;&#x8BD5;&#x6210;&#x7EE9;&#x4E0D;&#x53CA;&#x683C;&#x7684;&#x5B66;&#x751F;&#x7684;&#x5B66;&#x53F7; 123SELECT DISTINCT SnoFROM SCWHERE Grade &lt; 60; &#x67E5;&#x8BE2;&#x5E74;&#x9F84;&#x5728; 20 &#xFF5E; 23 &#x5C81;&#x4E4B;&#x95F4;&#x7684;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x3001;&#x7CFB;&#x522B;&#x548C;&#x5E74;&#x9F84; 123SELECT Sname&#xFF0C;Sdept&#xFF0C;SageFROM StudentWHERE Sage BETWEEN 20 AND 23&#xFF1B; &#x67E5;&#x8BE2;&#x5E74;&#x9F84;&#x4E0D;&#x5728; 20 &#xFF5E; 23 &#x4E4B;&#x95F4;&#x7684;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x3001;&#x7CFB;&#x522B;&#x548C;&#x5E74;&#x9F84; 123SELECT Sname&#xFF0C;Sdept&#xFF0C;SageFROM StudentWHERE Sage NOT BETWEEN 20 AND 23 &#xFF1B; &#x67E5;&#x8BE2;&#x65E2;&#x4E0D;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x3001;&#x6570;&#x5B66;&#x7CFB;&#x3001;&#x4E5F;&#x4E0D;&#x662F;&#x4FE1;&#x606F;&#x7CFB;&#x7684;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x548C;&#x6027;&#x522B; 123SELECT Sname&#xFF0C;SsexFROM StudentWHERE Sdept NOT IN (&apos;CS&apos;, &apos;MA&apos;, &apos;IS&apos;); &#x901A;&#x914D;&#x7B26; % &#x4EE3;&#x8868;&#x4EFB;&#x610F;&#x957F;&#x5EA6;&#x7684;&#x5B57;&#x7B26;&#x4E32; &#x901A;&#x914D;&#x7B26; _ &#x4EE3;&#x8868;&#x4EFB;&#x610F;&#x5355;&#x4E2A;&#x5B57;&#x7B26; &#x67E5;&#x8BE2;&#x5B66;&#x53F7;&#x4E3A; 201215121 &#x7684;&#x5B66;&#x751F;&#x7684;&#x8BE6;&#x7EC6;&#x60C5;&#x51B5; 123SELECT * FROM StudentWHERE Sno LIKE &apos;201215121&apos;; &#x7B49;&#x4EF7;&#x4E8E; WHERE Sno = &apos;201215121&apos;; &#x67E5;&#x8BE2;&#x6240;&#x6709;&#x59D3;&#x5218;&#x7684;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x3001;&#x5B66;&#x53F7;&#x548C;&#x6027;&#x522B; 123SELECT Sname&#xFF0C;Sno&#xFF0C;SsexFROM StudentWHERE Sname LIKE &#x2018;&#x5218;%&#x2019;&#xFF1B; &#x67E5;&#x8BE2;&#x6240;&#x6709;&#x4E0D;&#x662F;&#x59D3;&#x5218;&#x7684;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x3001;&#x5B66;&#x53F7;&#x548C;&#x6027;&#x522B; 123SELECT Sname&#xFF0C; Sno&#xFF0C;SsexFROM StudentWHERE Sname NOT LIKE &#x2018;&#x5218;%&#x2018;&#xFF1B; &#x67E5;&#x8BE2;&#x6240;&#x6709;&#x6709;&#x6210;&#x7EE9;&#x7684;&#x5B66;&#x751F;&#x7684;&#x5B66;&#x53F7;&#x548C;&#x8BFE;&#x7A0B;&#x53F7; 123SELECT Sno&#xFF0C;CnoFROM SCWHERE Grade IS NOT NULL&#xFF1B; &#x67E5;&#x8BE2;&#x9009;&#x4FEE;&#x4E86;3&#x53F7;&#x8BFE;&#x7A0B;&#x7684;&#x5B66;&#x751F;&#x7684;&#x5B66;&#x53F7;&#x548C;&#x6210;&#x7EE9;&#xFF0C;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x6309;&#x5206;&#x6570;&#x7684;&#x964D;&#x5E8F;&#x6392;&#x5217; 1234SELECT Sno&#xFF0C;GradeFROM SCWHERE Cno = &#x2019;3&#x2018;ORDER BY Grade DESC(default ASC); &#x67E5;&#x8BE2;&#x5168;&#x4F53;&#x5B66;&#x751F;&#x60C5;&#x51B5;&#xFF0C;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x6309;&#x6240;&#x5728;&#x7CFB;&#x7684;&#x7CFB;&#x53F7;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#xFF0C;&#x540C;&#x4E00;&#x7CFB;&#x4E2D;&#x7684;&#x5B66;&#x751F;&#x6309;&#x5E74;&#x9F84;&#x964D;&#x5E8F;&#x6392;&#x5E8F;&#x3002; 123SELECT * FROM StudentORDER BY Sdept, Sage, DESC; &#x805A;&#x96C6;&#x51FD;&#x6570; &#x51FD;&#x6570;&#x540D; &#x529F;&#x80FD; COUNT([DISTINCT ALL] &lt;&#x5217;&#x540D;&gt;) &#x7EDF;&#x8BA1;&#x4E00;&#x5217;&#x4E2D;&#x503C;&#x7684;&#x4E2A;&#x6570; COUNT(*) &#x7EDF;&#x8BA1;&#x5143;&#x7956;&#x4E2A;&#x6570; SUM([DISTINCT ALL]] &lt;&#x5217;&#x540D;&gt;) &#x8BA1;&#x7B97;&#x4E00;&#x5217;&#x503C;&#x7684;&#x603B;&#x548C; AVG([DISTINCT ALL]] &lt;&#x5217;&#x540D;&gt;) &#x8BA1;&#x7B97;&#x4E00;&#x5217;&#x503C;&#x7684;&#x5E73;&#x5747;&#x503C; MAX([DISTINCT ALL]] &lt;&#x5217;&#x540D;&gt;) &#x6C42;&#x4E00;&#x5217;&#x503C;&#x4E2D;&#x7684;&#x6700;&#x5927;&#x503C; MIN([DISTINCT ALL]] &lt;&#x5217;&#x540D;&gt;) &#x6C42;&#x4E00;&#x5217;&#x503C;&#x4E2D;&#x7684;&#x6700;&#x5C0F;&#x503C; &#x67E5;&#x8BE2;&#x5B66;&#x751F;&#x603B;&#x6570; 12SELECT COUNT(*)FROM Student; &#x67E5;&#x8BE2;&#x9009;&#x4FEE;&#x4E86;&#x8BFE;&#x7A0B;&#x7684;&#x5B66;&#x751F;&#x4EBA;&#x6570; 12SELECT COUNT(DISTINCT Sno)FROM SC; &#x8BA1;&#x7B97;&#x9009;&#x4FEE;&#x4E86;&#x4E00;&#x53F7;&#x8BFE;&#x7A0B;&#x7684;&#x5B66;&#x751F;&#x5E73;&#x5747;&#x6210;&#x7EE9; 123SELECT AVG(Grade)From SCWHERE Cno=&apos;1&apos;; &#x67E5;&#x8BE2;&#x9009;&#x4FEE;1&#x53F7;&#x8BFE;&#x7A0B;&#x7684;&#x5B66;&#x751F;&#x6700;&#x9AD8;&#x5206;&#x6570; 123SELECT MAX(Grade)FROM SCWHERE Cno=&apos;1&apos;; &#x67E5;&#x8BE2;&#x5B66;&#x751F;201215012&#x9009;&#x4FEE;&#x8BFE;&#x7A0B;&#x7684;&#x603B;&#x5B66;&#x5206;&#x6570;&#x3002; 123SELECT SUM(Ccredit)FROM SC,CourseWHERE Sno=&apos;201215012&apos; AND SC.Cno = Course.Cno; &#x6C42;&#x5404;&#x4E2A;&#x8BFE;&#x7A0B;&#x53F7;&#x53CA;&#x76F8;&#x5E94;&#x7684;&#x9009;&#x8BFE;&#x4EBA;&#x6570; 123SELECT Cno&#xFF0C;COUNT(Sno)FROM SCGROUP BY Cno; &#x67E5;&#x8BE2;&#x9009;&#x4FEE;&#x4E86;&#x4E09;&#x95E8;&#x4EE5;&#x4E0A;&#x8BFE;&#x7A0B;&#x7684;&#x5B66;&#x751F;&#x5B66;&#x53F7; 1234SELECT SnoFROM SCGROUP BY SnoHAVING COUNT(*) &gt; 3; &#x67E5;&#x8BE2;&#x5E73;&#x5747;&#x6210;&#x7EE9;&#x5927;&#x4E8E;&#x7B49;&#x4E8E; 90 &#x5206;&#x7684;&#x5B66;&#x751F;&#x5B66;&#x53F7;&#x548C;&#x5E73;&#x5747;&#x6210;&#x7EE9; 1234SELECT Sno, AVG(Grade)FROM SCGROUP BY SnoHAVING AVG(Grade) &gt;= 90; &#x67E5;&#x8BE2;&#x6BCF;&#x4E2A;&#x5B66;&#x751F;&#x53CA;&#x5176;&#x9009;&#x4FEE;&#x8BFE;&#x7684;&#x60C5;&#x51B5; 123SELECT Student.*, SC.*FROM Student, SCWHERE Student.Sno = SC.Sno; &#x67E5;&#x8BE2;&#x9009;&#x4FEE; 2 &#x53F7;&#x8BFE;&#x7A0B;&#x4E14;&#x6210;&#x7EE9;&#x5728; 90 &#x5206;&#x4EE5;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x5B66;&#x751F;&#x7684;&#x5B66;&#x53F7;&#x548C;&#x59D3;&#x540D; 123SELECT Student.Sno, SnameFROM Student,SCWHERE Student.Sno=SC.Sno AND SC.Cno = &apos;2&apos; AND SC.Grade &gt; 90; &#x67E5;&#x8BE2;&#x6BCF;&#x4E2A;&#x5B66;&#x751F;&#x7684;&#x5B66;&#x53F7;&#x3001;&#x59D3;&#x540D;&#x3001;&#x9009;&#x4FEE;&#x7684;&#x8BFE;&#x7A0B;&#x540D;&#x53CA;&#x6210;&#x7EE9; 123SELECT Student.Sno, Sname, Cname, GradeFROM Student, SC, CourseWHERE Student.Sno=SC.Sno AND SC.Cno=Course.Cno; 3.7 &#x89C6;&#x56FE; &#x5EFA;&#x7ACB;&#x89C6;&#x56FE; 123CREATE VIEW &lt;&#x89C6;&#x56FE;&#x540D;&gt; AS &lt;&#x5B50;&#x67E5;&#x8BE2;&gt;[WITH CHECK OPTION]; &#x5EFA;&#x7ACB;&#x4FE1;&#x606F;&#x7CFB;&#x5B66;&#x751F;&#x7684;&#x89C6;&#x56FE; 12345CREATE VIEW IS_StudentASSELECT Sno,sname,SageFROM StudentWHERE Sdept=&apos;IS&apos;; &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53CD;&#x6620;&#x5B66;&#x751F;&#x51FA;&#x751F;&#x5E74;&#x4EFD;&#x7684;&#x89C6;&#x56FE; 1234CREATE VIEW BT_S(Sno,Sname, Sbirth)ASSELECT Sno,Sname,2014-SageFROM Student; &#x6570;&#x636E;&#x5E93;&#x5B89;&#x5168;&#x6027; &#x6570;&#x636E;&#x5E93;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x62A4;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x6570;&#x636E;&#x7684;&#x5B89;&#x5168;&#x6027;&#x548C;&#x5B8C;&#x6574;&#x6027;&#x3002; &#x6570;&#x636E;&#x5E93;&#x7684;&#x5B89;&#x5168;&#x6027;&#x662F;&#x6307;&#x4FDD;&#x62A4;&#x6570;&#x636E;&#x5E93;&#x4EE5;&#x9632;&#x6B62;&#x4E0D;&#x5408;&#x6CD5;&#x4F7F;&#x7528;&#x6240;&#x9020;&#x6210;&#x7684;&#x6570;&#x636E;&#x6CC4;&#x9732;&#x3001;&#x66F4;&#x6539;&#x6216;&#x7834;&#x574F;&#x3002; &#x6570;&#x636E;&#x5E93;&#x7684;&#x4E0D;&#x5B89;&#x5168;&#x56E0;&#x7D20; &#x975E;&#x6388;&#x6743;&#x7528;&#x6237;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x7684;&#x6076;&#x610F;&#x5B58;&#x53D6;&#x548C;&#x7834;&#x574F; &#x4EE5;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x514D;&#x53D7;&#x672A;&#x7ECF;&#x6388;&#x6743;&#x7684;&#x8BBF;&#x95EE;&#x548C;&#x7834;&#x574F;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x7684;&#x5B89;&#x5168;&#x63AA;&#x65BD;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x7528;&#x6237;&#x8EAB;&#x4EFD;&#x9274;&#x522B;&#x3001;&#x5B58;&#x53D6;&#x63A7;&#x5236;&#x548C;&#x89C6;&#x56FE;&#x7B49;&#x6280;&#x672F;&#x3002; &#x6570;&#x636E;&#x5E93;&#x4E2D;&#x91CD;&#x8981;&#x6216;&#x654F;&#x611F;&#x7684;&#x6570;&#x636E;&#x88AB;&#x6CC4;&#x9732; &#x4E3A;&#x9632;&#x6B62;&#x6570;&#x636E;&#x6CC4;&#x9732;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x7684;&#x4E3B;&#x8981;&#x6280;&#x672F;&#x6709;&#x5F3A;&#x5236;&#x5B58;&#x53D6;&#x63A7;&#x5236;&#x3001;&#x6570;&#x636E;&#x52A0;&#x5BC6;&#x5B58;&#x50A8;&#x548C;&#x52A0;&#x5BC6;&#x4F20;&#x8F93;&#x7B49;&#x3002; &#x5B89;&#x5168;&#x73AF;&#x5883;&#x7684;&#x8106;&#x5F31;&#x6027; L2Dwidget.init({});]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>数据库系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入理解计算机系统读书笔记]]></title>
    <url>%2F2018%2F03%2F22%2F%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[&#x7B2C; 1 &#x7AE0; &#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x6F2B;&#x6E38;&#x4FE1;&#x606F;&#x5C31;&#x662F;&#x4F4D; + &#x4E0A;&#x4E0B;&#x6587; &#x6E90;&#x7A0B;&#x5E8F;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7531;&#x503C; 0 &#x548C; 1 &#x7EC4;&#x6210;&#x7684;&#x4F4D;&#xFF08;&#x53C8;&#x79F0;&#x4F4D;&#x6BD4;&#x7279;&#xFF09;&#x5E8F;&#x5217;&#xFF0C;8 &#x4E2A;&#x5B57;&#x8282;&#x88AB;&#x7EC4;&#x7EC7;&#x6210;&#x4E00;&#x7EC4;&#xFF0C;&#x79F0;&#x4E3A;&#x5B57;&#x8282;&#x3002;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x8868;&#x793A;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x67D0;&#x4E9B;&#x6587;&#x672C;&#x5B57;&#x7B26;&#x3002; &#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x4FE1;&#x606F;&#x2014;&#x2014;&#x5305;&#x62EC;&#x78C1;&#x76D8;&#x6587;&#x4EF6;&#x3001;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7A0B;&#x5E8F;&#x3001;&#x5185;&#x5B58;&#x4E2D;&#x5B58;&#x653E;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#x4EE5;&#x53CA;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x4F20;&#x9001;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x90FD;&#x662F;&#x7531;&#x4E00;&#x4E32;&#x6BD4;&#x7279;&#x8868;&#x793A;&#x7684;&#x3002;&#x533A;&#x5206;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x7684;&#x552F;&#x4E00;&#x65B9;&#x6CD5;&#x662F;&#x6211;&#x4EEC;&#x8BFB;&#x5230;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x65F6;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x3002; &#x7CFB;&#x7EDF;&#x7684;&#x786C;&#x4EF6;&#x7EC4;&#x6210;- 1. &#x603B;&#x7EBF;&#xFF1A;&#x8D2F;&#x7A7F;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;&#x7684;&#x662F;&#x4E00;&#x7EC4;&#x7535;&#x5B50;&#x7BA1;&#x9053;&#xFF0C;&#x79F0;&#x4F5C;&#x603B;&#x7EBF;&#xFF0C;&#x5B83;&#x643A;&#x5E26;&#x4FE1;&#x606F;&#x5B57;&#x8282;&#x5E76;&#x8D1F;&#x8D23;&#x5728;&#x5404;&#x4E2A;&#x90E8;&#x4EF6;&#x95F4;&#x4F20;&#x9012;&#x3002; 2. I/O &#x8BBE;&#x5907;&#xFF1A;I/O &#xFF08;&#x8F93;&#x5165;/&#x8F93;&#x51FA;&#xFF09;&#x8BBE;&#x5907;&#x662F;&#x7CFB;&#x7EDF;&#x4E0E;&#x5916;&#x90E8;&#x4E16;&#x754C;&#x7684;&#x8054;&#x7CFB;&#x901A;&#x9053;&#x3002;&#x4E00;&#x822C;&#x7CFB;&#x7EDF;&#x90FD;&#x5305;&#x62EC;&#x56DB;&#x4E2A; I/O &#x8BBE;&#x5907;&#xFF1A;&#x4F5C;&#x4E3A;&#x7528;&#x6237;&#x8F93;&#x5165;&#x7684;&#x952E;&#x76D8;&#x548C;&#x9F20;&#x6807;&#xFF0C;&#x4F5C;&#x4E3A;&#x7528;&#x6237;&#x8F93;&#x51FA;&#x7684;&#x663E;&#x793A;&#x5668;&#xFF0C;&#x4EE5;&#x53CA;&#x7528;&#x4E8E;&#x957F;&#x671F;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x548C;&#x7A0B;&#x5E8F;&#x7684;&#x78C1;&#x76D8;&#x9A71;&#x52A8;&#x5668;&#xFF08;&#x7B80;&#x5355;&#x7684;&#x8BF4;&#x89E3;&#x91CA;&#x78C1;&#x76D8;&#xFF09;&#x3002;&#x6BCF;&#x4E2A; I/O &#x8BBE;&#x5907;&#x90FD;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x5668;&#x6216;&#x9002;&#x914D;&#x5668;&#x4E0E; I/O &#x603B;&#x7EBF;&#x76F8;&#x8FDE;&#x3002;&#x63A7;&#x5236;&#x5668;&#x548C;&#x9002;&#x914D;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x533A;&#x522B;&#x4E3B;&#x8981;&#x5728;&#x4E8E;&#x4ED6;&#x4EEC;&#x7684;&#x5C01;&#x88C5;&#x65B9;&#x5F0F;&#x3002;&#x63A7;&#x5236;&#x5668;&#x662F; I/O &#x8BBE;&#x5907;&#x672C;&#x8EAB;&#x6216;&#x8005;&#x7CFB;&#x7EDF;&#x7684;&#x4E3B;&#x5370;&#x5237;&#x7535;&#x8DEF;&#x677F;&#xFF08;&#x901A;&#x5E38;&#x79F0;&#x4F5C;&#x4E3B;&#x677F;&#xFF09;&#x4E0A;&#x7684;&#x82AF;&#x7247;&#x7EC4;&#x3002;&#x4E8C;&#x9002;&#x914D;&#x5668;&#x5219;&#x662F;&#x4E00;&#x5757;&#x63D2;&#x5728;&#x4E3B;&#x677F;&#x63D2;&#x69FD;&#x4E0A;&#x7684;&#x5361;&#x3002;&#x65E0;&#x8BBA;&#x5982;&#x4F55;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;&#x529F;&#x80FD;&#x90FD;&#x662F;&#x5728; I/O &#x603B;&#x7EBF;&#x548C; I/O &#x8BBE;&#x5907;&#x4E4B;&#x95F4;&#x4F20;&#x9012;&#x4FE1;&#x606F;&#x3002; 3. &#x4E3B;&#x5B58;&#xFF1A;&#x4E3B;&#x5B58;&#x662F;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#xFF0C;&#x5728;&#x5904;&#x7406;&#x5668;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x65F6;&#xFF0C;&#x7528;&#x6765;&#x5B58;&#x653E;&#x7A0B;&#x5E8F;&#x548C;&#x7A0B;&#x5E8F;&#x5904;&#x7406;&#x7684;&#x6570;&#x636E;&#x3002;&#x4ECE;&#x7269;&#x7406;&#x4E0A;&#x6765;&#x8BF4;&#xFF0C;&#x4E3B;&#x5B58;&#x662F;&#x7531;&#x4E00;&#x7EC4; **&#x52A8;&#x6001;&#x968F;&#x673A;&#x5B58;&#x53D6;&#x5B58;&#x50A8;&#x5668;&#xFF08;DRAM&#xFF09;** &#x82AF;&#x7247;&#x7EC4;&#x6210;&#x7684;&#x3002;&#x4ECE;&#x903B;&#x8F91;&#x4E0A;&#x8BF4;&#xFF0C;&#x5B58;&#x50A8;&#x5668;&#x662F;&#x4E00;&#x4E2A;&#x7EBF;&#x6027;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x90FD;&#x6709;&#x5176;&#x552F;&#x4E00;&#x7684;&#x5730;&#x5740;&#xFF08;&#x6570;&#x7EC4;&#x7D22;&#x5F15;&#xFF09;&#xFF0C;&#x8FD9;&#x4E9B;&#x5730;&#x5740;&#x662F;&#x4ECE;&#x96F6;&#x5F00;&#x59CB;&#x7684;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x7EC4;&#x6210;&#x7A0B;&#x5E8F;&#x7684;&#x6BCF;&#x6761;&#x673A;&#x5668;&#x6307;&#x4EE4;&#x90FD;&#x7531;&#x4E0D;&#x540C;&#x6570;&#x91CF;&#x7684;&#x5B57;&#x8282;&#x6784;&#x6210;&#x3002; 4. &#x5904;&#x7406;&#x5668;&#xFF1A;**&#x4E2D;&#x592E;&#x5904;&#x7406;&#x5355;&#x5143;&#xFF08;CPU&#xFF09;** &#x7B80;&#x79F0;&#x5904;&#x7406;&#x5668;&#xFF0C;&#x662F;&#x89E3;&#x91CA;&#xFF08;&#x6216;&#x6267;&#x884C;&#xFF09;&#x5B58;&#x50A8;&#x5728;&#x4E3B;&#x5B58;&#x4E2D;&#x6307;&#x4EE4;&#x7684;&#x5F15;&#x64CE;&#x3002;&#x5904;&#x7406;&#x5668;&#x7684;&#x6838;&#x5FC3;&#x662F;&#x4E00;&#x4E2A;&#x5927;&#x5C0F;&#x4E3A;&#x4E00;&#x4E2A;&#x5B57;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#xFF08;&#x6216;&#x5BC4;&#x5B58;&#x5668;&#xFF09;&#xFF0C;&#x79F0;&#x4E3A;**&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#xFF08;PC&#xFF09;**&#x3002;&#x5728;&#x4EFB;&#x4F55;&#x65F6;&#x523B;&#xFF0C;PC &#x90FD;&#x6307;&#x5411;&#x4E3B;&#x5B58;&#x4E2D;&#x7684;&#x67D0;&#x6761;&#x673A;&#x5668;&#x8BED;&#x8A00;&#x6307;&#x4EE4;&#xFF08;&#x5373;&#x542B;&#x6709;&#x8BE5;&#x6307;&#x4EE4;&#x7684;&#x5730;&#x5740;&#xFF09;&#x3002; &#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5B58;&#x50A8;&#x5668;&#xFF08;cache memory&#xFF0C;&#x7B80;&#x79F0; cache &#x6216;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#xFF09;&#xFF0C;&#x4F5C;&#x4E3A;&#x6682;&#x65F6;&#x7684;&#x96C6;&#x7ED3;&#x533A;&#x57DF;&#xFF0C;&#x5B58;&#x653E;&#x8FD1;&#x671F;&#x53EF;&#x80FD;&#x4F1A;&#x9700;&#x8981;&#x7684;&#x4FE1;&#x606F;&#x3002; &#x9759;&#x6001;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x5B58;&#x50A8;&#x5668;&#xFF08;SRAM&#xFF09; &#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x5F62;&#x6210;&#x5C42;&#x6B21;&#x7ED3;&#x6784; &#x5B58;&#x50A8;&#x5668;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x4E3B;&#x8981;&#x601D;&#x60F3;&#x662F;&#x4E0A;&#x4E00;&#x5C42;&#x7684;&#x5B58;&#x50A8;&#x5668;&#x4F5C;&#x4E3A;&#x4F4E;&#x4E00;&#x5C42;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x786C;&#x4EF6; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5427;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x770B;&#x6210;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x548C;&#x786C;&#x4EF6;&#x4E4B;&#x95F4;&#x7684;&#x4E00;&#x5C42;&#x8F6F;&#x4EF6;&#xFF0C;&#x6240;&#x6709;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5BF9;&#x786C;&#x4EF6;&#x7684;&#x64CD;&#x4F5C;&#x5C1D;&#x8BD5;&#x90FD;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x6709;&#x4E24;&#x4E2A;&#x57FA;&#x672C;&#x529F;&#x80FD;&#xFF1A; &#x9632;&#x6B62;&#x786C;&#x4EF6;&#x88AB;&#x5931;&#x63A7;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6EE5;&#x7528;&#xFF1B; &#x5411;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x63D0;&#x4F9B;&#x7B80;&#x5355;&#x4E00;&#x81F4;&#x7684;&#x673A;&#x5236;&#x6765;&#x63A7;&#x5236;&#x590D;&#x6742;&#x800C;&#x53C8;&#x901A;&#x5E38;&#x5927;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x4F4E;&#x7EA7;&#x786C;&#x4EF6;&#x8BBE;&#x5907;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x901A;&#x8FC7;&#x51E0;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#xFF08;&#x8FDB;&#x7A0B;&#x3001;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x548C;&#x6587;&#x4EF6;&#xFF09;&#x6765;&#x5B9E;&#x73B0;&#x8FD9;&#x4E24;&#x4E2A;&#x529F;&#x80FD;&#x3002; &#x6587;&#x4EF6;&#x662F;&#x5BF9; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x8868;&#x793A;&#xFF0C;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x662F;&#x5BF9;&#x4E3B;&#x5B58;&#x548C;&#x78C1;&#x76D8; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x8868;&#x793A;&#xFF0C;&#x8FDB;&#x7A0B;&#x662F;&#x5BF9;&#x5904;&#x7406;&#x5668;&#x3001;&#x4E3B;&#x5B58;&#x548C; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x8868;&#x793A;&#x3002; &#x8FDB;&#x7A0B;&#xFF1A; &#x8FDB;&#x7A0B;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x4E00;&#x4E2A;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x79CD;&#x62BD;&#x8C61;&#x3002;&#x5728;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x4E0A;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x800C;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x597D;&#x50CF;&#x5728;&#x72EC;&#x5360;&#x5730;&#x4F7F;&#x7528;&#x786C;&#x4EF6;&#x3002;&#x800C;&#x5E76;&#x53D1;&#x8FD0;&#x884C;&#xFF0C;&#x5219;&#x662F;&#x8BF4;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x6307;&#x4EE4;&#x548C;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x6307;&#x4EE4;&#x662F;&#x4EA4;&#x9519;&#x6267;&#x884C;&#x7684;&#x3002; &#x4ECE;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x8F6C;&#x6362;&#x662F;&#x7531;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF; &#x5185;&#x6838;&#xFF08;kernel&#xFF09; &#x7BA1;&#x7406;&#x7684;&#x3002;&#x5185;&#x6838;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4EE3;&#x7801;&#x5E38;&#x9A7B;&#x4E3B;&#x5B58;&#x7684;&#x90E8;&#x5206;&#x3002;&#x5185;&#x6838;&#x662F;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x5168;&#x90E8;&#x8FDB;&#x7A0B;&#x6240;&#x7528;&#x4EE3;&#x7801;&#x548C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x96C6;&#x5408;&#x3002; &#x7EBF;&#x7A0B;&#xFF1A; &#x5728;&#x73B0;&#x4EE3;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x5B9E;&#x9645;&#x4E0A;&#x53EF;&#x4EE5;&#x7531;&#x591A;&#x4E2A;&#x79F0;&#x4E3A;&#x7EBF;&#x7A0B;&#x7684;&#x6267;&#x884C;&#x5355;&#x5143;&#x7EC4;&#x6210;&#xFF0C;&#x6BCF;&#x4E2A;&#x7EBF;&#x90FD;&#x8FD0;&#x884C;&#x5728;&#x8FDB;&#x7A0B;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x5E76;&#x5171;&#x4EAB;&#x540C;&#x6837;&#x7684;&#x4EE3;&#x7801;&#x548C;&#x5168;&#x5C40;&#x6570;&#x636E;&#x3002; &#x865A;&#x62DF;&#x5185;&#x5B58;&#xFF1A; &#x865A;&#x62DF;&#x5185;&#x5B58;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x4E3A;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x5047;&#x8C61;&#xFF0C;&#x5373;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x5728;&#x72EC;&#x5360;&#x5730;&#x4F7F;&#x7528;&#x4E3B;&#x5B58;&#x3002;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x770B;&#x5230;&#x7684;&#x5185;&#x5B58;&#x90FD;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x79F0;&#x4E3A; &#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4; &#x3002; &#x6587;&#x4EF6;&#xFF1A; &#x6587;&#x4EF6;&#x5C31;&#x662F;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#xFF0C;&#x4EC5;&#x6B64;&#x800C;&#x5DF2;&#x3002;&#x6BCF;&#x4E2A; I/O &#x8BBE;&#x5907;&#xFF0C;&#x5305;&#x62EC;&#x78C1;&#x76D8;&#x3001;&#x952E;&#x76D8;&#x3001;&#x663E;&#x793A;&#x5668;&#xFF0C;&#x751A;&#x81F3;&#x7F51;&#x7EDC;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x6587;&#x4EF6;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x4E2D;&#x62BD;&#x8C61;&#x7684;&#x91CD;&#x8981;&#x6027; &#x6587;&#x4EF6;&#x662F;&#x5BF9; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x3002; &#x865A;&#x62DF;&#x5185;&#x5B58;&#x662F;&#x5BF9;&#x7A0B;&#x5E8F;&#x5B58;&#x50A8;&#x5668;&#x7684;&#x62BD;&#x8C61;&#x3002; &#x8FDB;&#x7A0B;&#x662F;&#x5BF9;&#x4E00;&#x4E2A;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x62BD;&#x8C61;&#x3002; &#x865A;&#x62DF;&#x673A;&#x662F;&#x5BF9;&#x6574;&#x4E2A;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x62BD;&#x8C61;&#x3002; &#x5C0F;&#x7ED3; &#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x662F;&#x7531;&#x786C;&#x4EF6;&#x548C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x7EC4;&#x6210;&#x7684;&#xFF0C;&#x4ED6;&#x4EEC;&#x5171;&#x540C;&#x534F;&#x4F5C;&#x4EE5;&#x8FD0;&#x884C;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;&#x8BA1;&#x7B97;&#x673A;&#x5185;&#x90E8;&#x7684;&#x4FE1;&#x606F;&#x88AB;&#x8868;&#x793A;&#x4E3A;&#x4E00;&#x7EC4;&#x7EC4;&#x7684;&#x4F4D;&#xFF0C;&#x4ED6;&#x4EEC;&#x4F9D;&#x636E;&#x4E0A;&#x4E0B;&#x6587;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x89E3;&#x91CA;&#x65B9;&#x5F0F;&#x3002;&#x7A0B;&#x5E8F;&#x88AB;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x7FFB;&#x8BD1;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x5F00;&#x59CB;&#x65F6;&#x662F; ASCII &#x6587;&#x672C;&#xFF0C;&#x7136;&#x540E;&#x7F16;&#x8BD1;&#x5668;&#x548C;&#x94FE;&#x63A5;&#x5668;&#x7FFB;&#x8BD1;&#x6210;&#x4E8C;&#x8FDB;&#x5236;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002; &#x5904;&#x7406;&#x5668;&#x8BFB;&#x53D6;&#x5E76;&#x89E3;&#x91CA;&#x5B58;&#x653E;&#x5728;&#x4E3B;&#x5B58;&#x91CC;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6307;&#x4EE4;&#x3002;&#x56E0;&#x4E3A;&#x8BA1;&#x7B97;&#x673A;&#x82B1;&#x8D39;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x65F6;&#x95F4;&#x5728;&#x5185;&#x5B58;&#x3001;I/O &#x8BBE;&#x5907;&#x548C; CPU &#x5BC4;&#x5B58;&#x5668;&#x4E4B;&#x95F4;&#x590D;&#x5236;&#x590D;&#x5236;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x5C06;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x5212;&#x5206;&#x6210;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x2014;&#x2014;CPU &#x5BC4;&#x5B58;&#x5668;&#x5728;&#x9876;&#x90E8;&#xFF0C;&#x63A5;&#x7740;&#x662F;&#x591A;&#x5C42;&#x7684;&#x786C;&#x4EF6;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x5668;&#x3001;DRAM &#x4E3B;&#x5B58;&#x548C;&#x78C1;&#x76D8;&#x5B58;&#x50A8;&#x5668;&#x3002;&#x5728;&#x5C42;&#x6B21;&#x6A21;&#x578B;&#x4E2D;&#xFF0C;&#x4F4D;&#x4E8E;&#x66F4;&#x9AD8;&#x5C42;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x6BD4;&#x5E95;&#x5C42;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x8981;&#x66F4;&#x5FEB;&#xFF0C;&#x5355;&#x4F4D;&#x6BD4;&#x7279;&#x9020;&#x4EF7;&#x4E5F;&#x66F4;&#x9AD8;&#x3002;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x4E2D;&#x8F83;&#x9AD8;&#x5C42;&#x6B21;&#x7684;&#x5B58;&#x50A8;&#x8BBE;&#x5907;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x8F83;&#x4F4E;&#x5C42;&#x6B21;&#x8BBE;&#x5907;&#x7684;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3002;&#x901A;&#x8FC7;&#x7406;&#x89E3;&#x548C;&#x8FD0;&#x7528;&#x8FD9;&#x79CD;&#x5B58;&#x50A8;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x77E5;&#x8BC6;&#xFF0C;&#x7A0B;&#x5E8F;&#x5458;&#x53EF;&#x4EE5;&#x4F18;&#x5316; C &#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5185;&#x6838;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x548C;&#x786C;&#x76D8;&#x4E4B;&#x95F4;&#x7684;&#x5A92;&#x4ECB;&#x3002;&#x4ED6;&#x63D0;&#x4F9B;&#x4E09;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x62BD;&#x8C61;&#xFF1A; &#x6587;&#x4EF6;&#x662F;&#x5BF9; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#xFF1B; &#x865A;&#x62DF;&#x5185;&#x5B58;&#x662F;&#x5BF9;&#x4E3B;&#x5B58;&#x548C;&#x78C1;&#x76D8;&#x7684;&#x62BD;&#x8C61;&#xFF1B; &#x8FDB;&#x7A0B;&#x662F;&#x5904;&#x7406;&#x5668;&#x3001;&#x4E3B;&#x5B58;&#x548C; I/O &#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x7F51;&#x7EDC;&#x63D0;&#x4F9B;&#x4E86;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x901A;&#x4FE1;&#x7684;&#x624B;&#x6BB5;&#x3002;&#x4ECE;&#x7279;&#x6B8A;&#x7CFB;&#x7EDF;&#x7684;&#x89D2;&#x5EA6;&#x6765;&#x770B;&#xFF0C;&#x7F51;&#x7EDC;&#x5C31;&#x662F;&#x4E00;&#x79CD; I/O &#x8BBE;&#x5907;&#x3002; &#x7B2C;&#x4E8C;&#x7AE0; &#x4FE1;&#x606F;&#x7684;&#x8868;&#x793A;&#x548C;&#x5904;&#x7406;&#x4FE1;&#x606F;&#x5B58;&#x50A8;- &#x673A;&#x5668;&#x7EA7;&#x7A0B;&#x5E8F;&#x5C06;&#x5185;&#x5B58;&#x89C6;&#x4E3A;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5927;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x79F0;&#x4E3A;**&#x865A;&#x62DF;&#x5185;&#x5B58;&#xFF08;virtual memory&#xFF09;**&#x3002;&#x5185;&#x5B58;&#x7684;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x90FD;&#x7531;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x6570;&#x5B57;&#x6765;&#x6807;&#x8BC6;&#xFF0C;&#x79F0;&#x4E3A;&#x5B83;&#x7684;**&#x5730;&#x5740;&#xFF08;address&#xFF09;**&#xFF0C;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x5730;&#x5740;&#x7684;&#x96C6;&#x5408;&#x5C31;&#x79F0;&#x4E3A;**&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF08;virtual address space&#xFF09;**&#x3002;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x8FD9;&#x4E2A;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x5C55;&#x73B0;&#x7ED9;&#x673A;&#x5668;&#x7EA7;&#x7A0B;&#x5E8F;&#x7684;&#x6982;&#x5FF5;&#x6027;&#x6620;&#x50CF;&#x3002;&#x5B9E;&#x9645;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x5C06;&#x52A8;&#x6001;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#x5B58;&#x50A8;&#x5668;&#xFF08;DRAM&#xFF09;&#x3001;&#x95EA;&#x5B58;&#x3001;&#x78C1;&#x76D8;&#x5B58;&#x50A8;&#x5668;&#xFF0C;&#x7279;&#x6B8A;&#x786C;&#x4EF6;&#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x4E3A;&#x7A0B;&#x5E8F;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x770B;&#x4E0A;&#x53BB;&#x7EDF;&#x4E00;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x3002; &#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x6CD5;- &#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7531; 8 &#x4F4D;&#x7EC4;&#x6210;&#x3002;&#x7531;&#x4E8E;&#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x6CD5;&#x592A;&#x5197;&#x957F;&#xFF0C;&#x800C;&#x5341;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x6CD5;&#x4E0E;&#x4F4D;&#x6A21;&#x5F0F;&#x7684;&#x4E92;&#x76F8;&#x8F6C;&#x5316;&#x5F88;&#x9EBB;&#x70E6;&#x3002;&#x6240;&#x4EE5;&#x4EE5; 16 &#x4E3A;&#x57FA;&#x6570;&#xFF0C;&#x53EB;&#x505A;**&#x5341;&#x516D;&#x8FDB;&#x5236;&#xFF08;hexadecimal&#xFF09;&#x6570;**&#xFF0C;&#x6765;&#x8868;&#x793A;&#x4F4D;&#x6A21;&#x5F0F;&#x3002;&#x5341;&#x516D;&#x8FDB;&#x5236;&#xFF08;&#x7B80;&#x5199;&#x4E3A;&#x2018;hex&#x2019;&#xFF09;&#x4F7F;&#x7528; &#x2018;0&#x2019; &#xFF5E; &#x2018;9&#x2019; &#x4EE5;&#x53CA;&#x5B57;&#x7B26; &#x2018;A&apos; ~ &apos;F&apos; L2Dwidget.init({});]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>计算机系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PAT 真题题解]]></title>
    <url>%2F2018%2F03%2F22%2FPAT_%E7%9C%9F%E9%A2%98%E9%A2%98%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[1012. &#x6570;&#x5B57;&#x5206;&#x7C7B; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x7ED9;&#x5B9A;&#x4E00;&#x7CFB;&#x5217;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x8BF7;&#x6309;&#x8981;&#x6C42;&#x5BF9;&#x6570;&#x5B57;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#xFF0C;&#x5E76;&#x8F93;&#x51FA;&#x4EE5;&#x4E0B;5&#x4E2A;&#x6570;&#x5B57;&#xFF1A; A1 = &#x80FD;&#x88AB;5&#x6574;&#x9664;&#x7684;&#x6570;&#x5B57;&#x4E2D;&#x6240;&#x6709;&#x5076;&#x6570;&#x7684;&#x548C;&#xFF1B; A2 = &#x5C06;&#x88AB;5&#x9664;&#x540E;&#x4F59;1&#x7684;&#x6570;&#x5B57;&#x6309;&#x7ED9;&#x51FA;&#x987A;&#x5E8F;&#x8FDB;&#x884C;&#x4EA4;&#x9519;&#x6C42;&#x548C;&#xFF0C;&#x5373;&#x8BA1;&#x7B97;n1-n2+n3-n4&#x2026;&#xFF1B; A3 = &#x88AB;5&#x9664;&#x540E;&#x4F59;2&#x7684;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;&#xFF1B; A4 = &#x88AB;5&#x9664;&#x540E;&#x4F59;3&#x7684;&#x6570;&#x5B57;&#x7684;&#x5E73;&#x5747;&#x6570;&#xFF0C;&#x7CBE;&#x786E;&#x5230;&#x5C0F;&#x6570;&#x70B9;&#x540E;1&#x4F4D;&#xFF1B; A5 = &#x88AB;5&#x9664;&#x540E;&#x4F59;4&#x7684;&#x6570;&#x5B57;&#x4E2D;&#x6700;&#x5927;&#x6570;&#x5B57;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x5148;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;1000&#x7684;&#x6B63;&#x6574;&#x6570;N&#xFF0C; &#x968F;&#x540E;&#x7ED9;&#x51FA;N&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;1000&#x7684;&#x5F85;&#x5206;&#x7C7B;&#x7684;&#x6B63;&#x6574;&#x6570;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x5BF9;&#x7ED9;&#x5B9A;&#x7684;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x6309;&#x9898;&#x76EE;&#x8981;&#x6C42;&#x8BA1;&#x7B97;A1~A5&#x5E76;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x3002; &#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x4F46;&#x884C;&#x672B;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002; &#x82E5;&#x5176;&#x4E2D;&#x67D0;&#x4E00;&#x7C7B;&#x6570;&#x5B57;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x5728;&#x76F8;&#x5E94;&#x4F4D;&#x7F6E;&#x8F93;&#x51FA;&#x201C;N&#x201D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A; 13 1 2 3 4 5 6 7 8 9 10 20 16 18 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A; 30 11 2 9.7 9 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A; 8 1 2 4 5 6 7 9 16 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A; N 11 2 N 9 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main() { int a1 = 0, a2 = 0, a3 = 0, a5 = 0; float a4 = 0.0; int N; cin &gt;&gt; N; int *a; a = new int[N]; for (int i = 0; i &lt; N; ++i) { cin &gt;&gt; a[i]; } int cnt1 = 0, cnt2 = 0, cnt3 = 0, cnt4 = 0, cnt5 = 0; int temp = 1; for (int i = 0; i &lt; N; ++i) { if (a[i] % 5 == 0 &amp;&amp; a[i] % 2 == 0) { a1 += a[i]; cnt1++; } else if (a[i] % 5 == 1) { a2 = a2 + temp * a[i]; temp = -temp; cnt2++; } else if (a[i] % 5 == 2) { a3++; cnt3++; } else if (a[i] % 5 == 3) { a4 += a[i]; cnt4++; } else if (a[i] % 5 == 4) { if (a5 &lt; a[i]) { a5 = a[i]; } cnt5++; } } if (cnt1 == 0) { cout &lt;&lt; &quot;N &quot;; } else { cout &lt;&lt; a1 &lt;&lt; &quot; &quot;; } if (cnt2 == 0) { cout &lt;&lt; &quot;N &quot;; } else { cout &lt;&lt; a2 &lt;&lt; &quot; &quot;; } if (cnt3 == 0) { cout &lt;&lt; &quot;N &quot;; } else { cout &lt;&lt; a3 &lt;&lt; &quot; &quot;; } if (cnt4 == 0) { cout &lt;&lt; &quot;N &quot;; } else { printf(&quot;%.1f &quot;, a4 / cnt4); } if (cnt5 == 0) { cout &lt;&lt; &quot;N&quot;; } else { cout &lt;&lt; a5; } delete[] a; return 0;} 1013. &#x6570;&#x7D20;&#x6570; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x4EE4;Pi&#x8868;&#x793A;&#x7B2C;i&#x4E2A;&#x7D20;&#x6570;&#x3002;&#x73B0;&#x4EFB;&#x7ED9;&#x4E24;&#x4E2A;&#x6B63;&#x6574;&#x6570;M &lt;= N &lt;= 10^4&#xFF0C;&#x8BF7;&#x8F93;&#x51FA;PM&#x5230;PN&#x7684;&#x6240;&#x6709;&#x7D20;&#x6570;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;M&#x548C;N&#xFF0C;&#x5176;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x51FA;&#x4ECE;PM&#x5230;PN&#x7684;&#x6240;&#x6709;&#x7D20;&#x6570;&#xFF0C;&#x6BCF;10&#x4E2A;&#x6570;&#x5B57;&#x5360;1&#x884C;&#xFF0C;&#x5176;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x4F46;&#x884C;&#x672B;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 5 27 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 1234567891011121314151617181920212223242526272829303132333435363738394041424344#include &lt;iostream&gt;#include &lt;cmath&gt;using namespace std;bool isprime(int a) { for (int i = 2; i &lt;= sqrt(a) ; ++i) { if (a % i == 0) return false; } return true;}int main() { int a, b; cin &gt;&gt; a &gt;&gt; b; int vec[10001]; int k = 2; int i = 0; int t = 0; while (t &lt; b) { if (isprime(k)) { t++; if (t &gt;= a) vec[++i] = k; } k++; } int temp = 0; for (int j = 1; j &lt;= i; j++) { if (j % 10 == 1) { ++temp; cout &lt;&lt; vec[j]; continue; } cout &lt;&lt; &quot; &quot; &lt;&lt; vec[j]; if (++temp % 10 == 0) cout &lt;&lt; endl; } return 0;} 1014. &#x798F;&#x5C14;&#x6469;&#x65AF;&#x7684;&#x7EA6;&#x4F1A; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x5927;&#x4FA6;&#x63A2;&#x798F;&#x5C14;&#x6469;&#x65AF;&#x63A5;&#x5230;&#x4E00;&#x5F20;&#x5947;&#x602A;&#x7684;&#x5B57;&#x6761;&#xFF1A;&#x201C;&#x6211;&#x4EEC;&#x7EA6;&#x4F1A;&#x5427;&#xFF01;3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm&#x201D;&#x3002;&#x5927;&#x4FA6;&#x63A2;&#x5F88;&#x5FEB;&#x5C31;&#x660E;&#x767D;&#x4E86;&#xFF0C;&#x5B57;&#x6761;&#x4E0A;&#x5947;&#x602A;&#x7684;&#x4E71;&#x7801;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x7EA6;&#x4F1A;&#x7684;&#x65F6;&#x95F4;&#x201C;&#x661F;&#x671F;&#x56DB; 14:04&#x201D;&#xFF0C;&#x56E0;&#x4E3A;&#x524D;&#x9762;&#x4E24;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7B2C;1&#x5BF9;&#x76F8;&#x540C;&#x7684;&#x5927;&#x5199;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#xFF08;&#x5927;&#x5C0F;&#x5199;&#x6709;&#x533A;&#x5206;&#xFF09;&#x662F;&#x7B2C;4&#x4E2A;&#x5B57;&#x6BCD;&#x2019;D&#x2019;&#xFF0C;&#x4EE3;&#x8868;&#x661F;&#x671F;&#x56DB;&#xFF1B;&#x7B2C;2&#x5BF9;&#x76F8;&#x540C;&#x7684;&#x5B57;&#x7B26;&#x662F;&#x2019;E&#x2019;&#xFF0C;&#x90A3;&#x662F;&#x7B2C;5&#x4E2A;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#xFF0C;&#x4EE3;&#x8868;&#x4E00;&#x5929;&#x91CC;&#x7684;&#x7B2C;14&#x4E2A;&#x949F;&#x5934;&#xFF08;&#x4E8E;&#x662F;&#x4E00;&#x5929;&#x7684;0&#x70B9;&#x5230;23&#x70B9;&#x7531;&#x6570;&#x5B57;0&#x5230;9&#x3001;&#x4EE5;&#x53CA;&#x5927;&#x5199;&#x5B57;&#x6BCD;A&#x5230;N&#x8868;&#x793A;&#xFF09;&#xFF1B;&#x540E;&#x9762;&#x4E24;&#x5B57;&#x7B26;&#x4E32;&#x7B2C;1&#x5BF9;&#x76F8;&#x540C;&#x7684;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x2019;s&#x2019;&#x51FA;&#x73B0;&#x5728;&#x7B2C;4&#x4E2A;&#x4F4D;&#x7F6E;&#xFF08;&#x4ECE;0&#x5F00;&#x59CB;&#x8BA1;&#x6570;&#xFF09;&#x4E0A;&#xFF0C;&#x4EE3;&#x8868;&#x7B2C;4&#x5206;&#x949F;&#x3002;&#x73B0;&#x7ED9;&#x5B9A;&#x4E24;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8BF7;&#x5E2E;&#x52A9;&#x798F;&#x5C14;&#x6469;&#x65AF;&#x89E3;&#x7801;&#x5F97;&#x5230;&#x7EA6;&#x4F1A;&#x7684;&#x65F6;&#x95F4;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x5728;4&#x884C;&#x4E2D;&#x5206;&#x522B;&#x7ED9;&#x51FA;4&#x4E2A;&#x975E;&#x7A7A;&#x3001;&#x4E0D;&#x5305;&#x542B;&#x7A7A;&#x683C;&#x3001;&#x4E14;&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;60&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x7EA6;&#x4F1A;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;&#x201C;DAY HH:MM&#x201D;&#xFF0C;&#x5176;&#x4E2D;&#x201C;DAY&#x201D;&#x662F;&#x67D0;&#x661F;&#x671F;&#x7684;3&#x5B57;&#x7B26;&#x7F29;&#x5199;,&#x5373;MON&#x8868;&#x793A;&#x661F;&#x671F;&#x4E00;&#xFF0C;TUE&#x8868;&#x793A;&#x661F;&#x671F;&#x4E8C;&#xFF0C;WED&#x8868;&#x793A;&#x661F;&#x671F;&#x4E09;&#xFF0C;THU&#x8868;&#x793A;&#x661F;&#x671F;&#x56DB;&#xFF0C;FRI&#x8868;&#x793A;&#x661F;&#x671F;&#x4E94;&#xFF0C;SAT&#x8868;&#x793A;&#x661F;&#x671F;&#x516D;&#xFF0C;SUN&#x8868;&#x793A;&#x661F;&#x671F;&#x65E5;&#x3002;&#x9898;&#x76EE;&#x8F93;&#x5165;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x5B58;&#x5728;&#x552F;&#x4E00;&#x89E3;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; THU 14:04 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283#include &lt;iostream&gt;using namespace std;int main() { string a, b, c, d; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d; unsigned long alen = a.length(); unsigned long blen = b.length(); unsigned long clen = c.length(); unsigned long dlen = d.length(); char tc[2]; int i; i = 0; for (; i &lt; min(alen, blen); i++) { if (a[i] == b[i] &amp;&amp; (a[i] &gt;= &apos;A&apos; &amp;&amp; a[i] &lt;= &apos;G&apos;)) { tc[0] = a[i]; break; } } for (++i; i &lt; min(alen, blen); ++i) { if (a[i] == b[i] &amp;&amp; ((a[i] &gt;= &apos;0&apos; &amp;&amp; a[i] &lt;= &apos;9&apos;) || (a[i] &gt;= &apos;A&apos; &amp;&amp; a[i] &lt;= &apos;N&apos;))) { tc[1] = a[i]; break; } } int temp = 0; for (int j = 0; j &lt; min(clen, dlen); ++j) { if (c[j] == d[j] &amp;&amp; ((c[j] &gt;= &apos;a&apos; &amp;&amp; c[j] &lt;= &apos;z&apos;) || (c[j] &gt;= &apos;A&apos; &amp;&amp; c[j] &lt;= &apos;Z&apos;))) { temp = j; break; } } string string1; switch (tc[0]) { case &apos;A&apos;: string1 = &quot;MON&quot;; break; case &apos;B&apos;: string1 = &quot;TUE&quot;; break; case &apos;C&apos;: string1 = &quot;WED&quot;; break; case &apos;D&apos;: string1 = &quot;THU&quot;; break; case &apos;E&apos;: string1 = &quot;FRI&quot;; break; case &apos;F&apos;: string1 = &quot;SAT&quot;; break; case &apos;G&apos;: string1 = &quot;SUN&quot;; break; default: break; } cout &lt;&lt; string1 &lt;&lt; &quot; &quot;; int string2; if (tc[1] - &apos;0&apos; &lt; 10) { string2 = tc[1] - &apos;0&apos;; cout &lt;&lt; &apos;0&apos;; } else { string2 = tc[1] - &apos;A&apos; + 10; } cout &lt;&lt; string2 &lt;&lt; &quot;:&quot;; if (temp &lt; 10) cout &lt;&lt; &quot;0&quot; &lt;&lt; temp; else cout &lt;&lt; temp; return 0;} 1015. &#x5FB7;&#x624D;&#x8BBA; (25)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x9898;&#x76EE;&#x63CF;&#x8FF0;&#xFF1A; &#x5B8B;&#x4EE3;&#x53F2;&#x5B66;&#x5BB6;&#x53F8;&#x9A6C;&#x5149;&#x5728;&#x300A;&#x8D44;&#x6CBB;&#x901A;&#x9274;&#x300B;&#x4E2D;&#x6709;&#x4E00;&#x6BB5;&#x8457;&#x540D;&#x7684;&#x201C;&#x5FB7;&#x624D;&#x8BBA;&#x201D;&#xFF1A;&#x201C;&#x662F;&#x6545;&#x624D;&#x5FB7;&#x5168;&#x5C3D;&#x8C13;&#x4E4B;&#x5723;&#x4EBA;&#xFF0C;&#x624D;&#x5FB7;&#x517C;&#x4EA1;&#x8C13;&#x4E4B;&#x611A;&#x4EBA;&#xFF0C;&#x5FB7;&#x80DC;&#x624D;&#x8C13;&#x4E4B;&#x541B;&#x5B50;&#xFF0C;&#x624D;&#x80DC;&#x5FB7;&#x8C13;&#x4E4B;&#x5C0F;&#x4EBA;&#x3002;&#x51E1;&#x53D6;&#x4EBA;&#x4E4B;&#x672F;&#xFF0C;&#x82DF;&#x4E0D;&#x5F97;&#x5723;&#x4EBA;&#xFF0C;&#x541B;&#x5B50;&#x800C;&#x4E0E;&#x4E4B;&#xFF0C;&#x4E0E;&#x5176;&#x5F97;&#x5C0F;&#x4EBA;&#xFF0C;&#x4E0D;&#x82E5;&#x5F97;&#x611A;&#x4EBA;&#x3002;&#x201D; &#x73B0;&#x7ED9;&#x51FA;&#x4E00;&#x6279;&#x8003;&#x751F;&#x7684;&#x5FB7;&#x624D;&#x5206;&#x6570;&#xFF0C;&#x8BF7;&#x6839;&#x636E;&#x53F8;&#x9A6C;&#x5149;&#x7684;&#x7406;&#x8BBA;&#x7ED9;&#x51FA;&#x5F55;&#x53D6;&#x6392;&#x540D;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x7B2C;1&#x884C;&#x7ED9;&#x51FA;3&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#xFF1A;N&#xFF08;&lt;=105&#xFF09;&#xFF0C;&#x5373;&#x8003;&#x751F;&#x603B;&#x6570;&#xFF1B;L&#xFF08;&gt;=60&#xFF09;&#xFF0C;&#x4E3A;&#x5F55;&#x53D6;&#x6700;&#x4F4E;&#x5206;&#x6570;&#x7EBF;&#xFF0C;&#x5373;&#x5FB7;&#x5206;&#x548C;&#x624D;&#x5206;&#x5747;&#x4E0D;&#x4F4E;&#x4E8E;L&#x7684;&#x8003;&#x751F;&#x624D;&#x6709;&#x8D44;&#x683C;&#x88AB;&#x8003;&#x8651;&#x5F55;&#x53D6;&#xFF1B;H&#xFF08;&lt;100&#xFF09;&#xFF0C;&#x4E3A;&#x4F18;&#x5148;&#x5F55;&#x53D6;&#x7EBF;&#x2014;&#x2014;&#x5FB7;&#x5206;&#x548C;&#x624D;&#x5206;&#x5747;&#x4E0D;&#x4F4E;&#x4E8E;&#x6B64;&#x7EBF;&#x7684;&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x201C;&#x624D;&#x5FB7;&#x5168;&#x5C3D;&#x201D;&#xFF0C;&#x6B64;&#x7C7B;&#x8003;&#x751F;&#x6309;&#x5FB7;&#x624D;&#x603B;&#x5206;&#x4ECE;&#x9AD8;&#x5230;&#x4F4E;&#x6392;&#x5E8F;&#xFF1B;&#x624D;&#x5206;&#x4E0D;&#x5230;&#x4F46;&#x5FB7;&#x5206;&#x5230;&#x7EBF;&#x7684;&#x4E00;&#x7C7B;&#x8003;&#x751F;&#x5C5E;&#x4E8E;&#x201C;&#x5FB7;&#x80DC;&#x624D;&#x201D;&#xFF0C;&#x4E5F;&#x6309;&#x603B;&#x5206;&#x6392;&#x5E8F;&#xFF0C;&#x4F46;&#x6392;&#x5728;&#x7B2C;&#x4E00;&#x7C7B;&#x8003;&#x751F;&#x4E4B;&#x540E;&#xFF1B;&#x5FB7;&#x624D;&#x5206;&#x5747;&#x4F4E;&#x4E8E;H&#xFF0C;&#x4F46;&#x662F;&#x5FB7;&#x5206;&#x4E0D;&#x4F4E;&#x4E8E;&#x624D;&#x5206;&#x7684;&#x8003;&#x751F;&#x5C5E;&#x4E8E;&#x201C;&#x624D;&#x5FB7;&#x517C;&#x4EA1;&#x201D;&#x4F46;&#x5C1A;&#x6709;&#x201C;&#x5FB7;&#x80DC;&#x624D;&#x201D;&#x8005;&#xFF0C;&#x6309;&#x603B;&#x5206;&#x6392;&#x5E8F;&#xFF0C;&#x4F46;&#x6392;&#x5728;&#x7B2C;&#x4E8C;&#x7C7B;&#x8003;&#x751F;&#x4E4B;&#x540E;&#xFF1B;&#x5176;&#x4ED6;&#x8FBE;&#x5230;&#x6700;&#x4F4E;&#x7EBF;L&#x7684;&#x8003;&#x751F;&#x4E5F;&#x6309;&#x603B;&#x5206;&#x6392;&#x5E8F;&#xFF0C;&#x4F46;&#x6392;&#x5728;&#x7B2C;&#x4E09;&#x7C7B;&#x8003;&#x751F;&#x4E4B;&#x540E;&#x3002; &#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4F4D;&#x8003;&#x751F;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5305;&#x62EC;&#xFF1A;&#x51C6;&#x8003;&#x8BC1;&#x53F7;&#x3001;&#x5FB7;&#x5206;&#x3001;&#x624D;&#x5206;&#xFF0C;&#x5176;&#x4E2D;&#x51C6;&#x8003;&#x8BC1;&#x53F7;&#x4E3A;8&#x4F4D;&#x6574;&#x6570;&#xFF0C;&#x5FB7;&#x624D;&#x5206;&#x4E3A;&#x533A;&#x95F4;[0, 100]&#x5185;&#x7684;&#x6574;&#x6570;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x51FA;&#x7B2C;1&#x884C;&#x9996;&#x5148;&#x7ED9;&#x51FA;&#x8FBE;&#x5230;&#x6700;&#x4F4E;&#x5206;&#x6570;&#x7EBF;&#x7684;&#x8003;&#x751F;&#x4EBA;&#x6570;M&#xFF0C;&#x968F;&#x540E;M&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x6309;&#x7167;&#x8F93;&#x5165;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x4E00;&#x4F4D;&#x8003;&#x751F;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x8003;&#x751F;&#x6309;&#x8F93;&#x5165;&#x4E2D;&#x8BF4;&#x660E;&#x7684;&#x89C4;&#x5219;&#x4ECE;&#x9AD8;&#x5230;&#x4F4E;&#x6392;&#x5E8F;&#x3002;&#x5F53;&#x67D0;&#x7C7B;&#x8003;&#x751F;&#x4E2D;&#x6709;&#x591A;&#x4EBA;&#x603B;&#x5206;&#x76F8;&#x540C;&#x65F6;&#xFF0C;&#x6309;&#x5176;&#x5FB7;&#x5206;&#x964D;&#x5E8F;&#x6392;&#x5217;&#xFF1B;&#x82E5;&#x5FB7;&#x5206;&#x4E5F;&#x5E76;&#x5217;&#xFF0C;&#x5219;&#x6309;&#x51C6;&#x8003;&#x8BC1;&#x53F7;&#x7684;&#x5347;&#x5E8F;&#x8F93;&#x51FA;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 14 60 80 10000001 64 90 10000002 90 60 10000011 85 80 10000003 85 80 10000004 80 85 10000005 82 77 10000006 83 76 10000007 90 78 10000008 75 79 10000009 59 90 10000010 88 45 10000012 80 100 10000013 90 99 10000014 66 60 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 12 10000013 90 99 10000012 80 100 10000003 85 80 10000011 85 80 10000004 80 85 10000007 90 78 10000006 83 76 10000005 82 77 10000002 90 60 10000014 66 60 10000008 75 79 10000001 64 90 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std;struct node { int num; int de; int cai;};bool cmp(node a, node b) { if ((a.de + a.cai) != (b.cai + b.de)) { return (a.de + a.cai) &gt; (b.de + b.cai); } else if (a.de != b.de) { return a.de &gt; b.de; } else { return a.num &lt; b.num; }}int main() { int n, l, h; scanf(&quot;%d %d %d&quot;, &amp;n, &amp;l, &amp;h); vector&lt;node&gt; vec1, vec2, vec3, vec4; node temp = {}; int total = n; for (int i = 0; i &lt; n; ++i) { scanf(&quot;%d %d %d&quot;, &amp;temp.num, &amp;temp.de, &amp;temp.cai); if (temp.de &lt; l || temp.cai &lt; l) { total--; continue; } if (temp.de &gt;= h &amp;&amp; temp.cai &gt;= h) { vec1.push_back(temp); } else if (temp.de &gt;= h &amp;&amp; temp.cai &lt; h) { vec2.push_back(temp); } else if (temp.de &lt; h &amp;&amp; temp.cai &lt; h &amp;&amp; temp.de &gt;= temp.cai) { vec3.push_back(temp); } else { vec4.push_back(temp); } } sort(vec1.begin(), vec1.end(), cmp); sort(vec2.begin(), vec2.end(), cmp); sort(vec3.begin(), vec3.end(), cmp); sort(vec4.begin(), vec4.end(), cmp); printf(&quot;%d\n&quot;, total); for (int j = 0; j &lt; vec1.size(); j++) { printf(&quot;%d %d %d\n&quot;, vec1[j].num, vec1[j].de, vec1[j].cai); } for (int j = 0; j &lt; vec2.size(); j++) { printf(&quot;%d %d %d\n&quot;, vec2[j].num, vec2[j].de, vec2[j].cai); } for (int j = 0; j &lt; vec3.size(); j++) { printf(&quot;%d %d %d\n&quot;, vec3[j].num, vec3[j].de, vec3[j].cai); } for (int j = 0; j &lt; vec4.size(); j++) { printf(&quot;%d %d %d\n&quot;, vec4[j].num, vec4[j].de, vec4[j].cai); } return 0;} 1016. &#x90E8;&#x5206;A+B (15)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x6B63;&#x6574;&#x6570;A&#x7684;&#x201C;DA&#xFF08;&#x4E3A;1&#x4F4D;&#x6574;&#x6570;&#xFF09;&#x90E8;&#x5206;&#x201D;&#x5B9A;&#x4E49;&#x4E3A;&#x7531;A&#x4E2D;&#x6240;&#x6709;DA&#x7EC4;&#x6210;&#x7684;&#x65B0;&#x6574;&#x6570;PA&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x7ED9;&#x5B9A;A = 3862767&#xFF0C;DA = 6&#xFF0C;&#x5219;A&#x7684;&#x201C;6&#x90E8;&#x5206;&#x201D;PA&#x662F;66&#xFF0C;&#x56E0;&#x4E3A;A&#x4E2D;&#x6709;2&#x4E2A;6&#x3002; &#x73B0;&#x7ED9;&#x5B9A;A&#x3001;DA&#x3001;B&#x3001;DB&#xFF0C;&#x8BF7;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#x8BA1;&#x7B97;PA + PB&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x4F9D;&#x6B21;&#x7ED9;&#x51FA;A&#x3001;DA&#x3001;B&#x3001;DB&#xFF0C;&#x4E2D;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x5176;&#x4E2D;0 &lt; A, B &lt; 10^10&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;PA + PB&#x7684;&#x503C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A; 3862767 6 13530293 3 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A; 399 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A; 3862767 1 13530293 8 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A; 0 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;iostream&gt;using namespace std;int main() { string a, b; int m, n; cin &gt;&gt; a &gt;&gt; m &gt;&gt; b &gt;&gt; n; int alen = a.length(); int blen = b.length(); int countA = 0; int countB = 0; for (int i = 0; i &lt; alen; ++i) { if ((a[i] - &apos;0&apos;) == m) { countA++; } } for (int i = 0; i &lt; blen; ++i) { if ((b[i] - &apos;0&apos;) == n) { countB++; } } int ca = 0; int cb = 0; if (countA != 0) { ca = m; } if (countB != 0) { cb = n; } for (int i = 1; i &lt; countA; ++i) { ca = 10 * ca + m; } for (int i = 1; i &lt; countB; ++i) { cb = cb * 10 + n; } cout &lt;&lt; ca + cb; return 0;} 1017. A&#x9664;&#x4EE5;B (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x672C;&#x9898;&#x8981;&#x6C42;&#x8BA1;&#x7B97;A/B&#xFF0C;&#x5176;&#x4E2D;A&#x662F;&#x4E0D;&#x8D85;&#x8FC7;1000&#x4F4D;&#x7684;&#x6B63;&#x6574;&#x6570;&#xFF0C;B&#x662F;1&#x4F4D;&#x6B63;&#x6574;&#x6570;&#x3002;&#x4F60;&#x9700;&#x8981;&#x8F93;&#x51FA;&#x5546;&#x6570;Q&#x548C;&#x4F59;&#x6570;R&#xFF0C; &#x4F7F;&#x5F97;A = B * Q + R&#x6210;&#x7ACB;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x5728;1&#x884C;&#x4E2D;&#x4F9D;&#x6B21;&#x7ED9;&#x51FA;A&#x548C;B&#xFF0C;&#x4E2D;&#x95F4;&#x4EE5;1&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x5728;1&#x884C;&#x4E2D;&#x4F9D;&#x6B21;&#x8F93;&#x51FA;Q&#x548C;R&#xFF0C;&#x4E2D;&#x95F4;&#x4EE5;1&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 123456789050987654321 7 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 17636684150141093474 3 12345678910111213141516171819202122232425#include &lt;iostream&gt;using namespace std;int main() { string s; int a; cin &gt;&gt; s &gt;&gt; a; int len = s.length(); int t = 0; int temp = 0; t = (s[0] - &apos;0&apos;) / a; if ((t != 0 &amp;&amp; len &gt; 1) || len == 1) { cout &lt;&lt; t; } temp = (s[0] - &apos;0&apos;) % a; for (int i = 1; i &lt; len; ++i) { t = (temp * 10 + s[i] - &apos;0&apos;) / a; cout &lt;&lt; t; temp = (temp * 10 + s[i] - &apos;0&apos;) % a; } cout &lt;&lt; &quot; &quot; &lt;&lt; temp; return 0;} 1001. A+B Format (20)-PAT&#x7532;&#x7EA7;&#x771F;&#x9898;Calculate a + b and output the sum in standard format &#x2014; that is, the digits must be separated into groups of three by commas (unless there are less than four digits). Input Each input file contains one test case. Each case contains a pair of integers a and b where -1000000 &lt;= a, b &lt;= 1000000. The numbers are separated by a space. Output For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format. Sample Input -1000000 9 Sample Output -999,991 12345678910111213141516171819#include &lt;iostream&gt;using namespace std;int main() { int a, b; cin &gt;&gt; a &gt;&gt; b; string s = to_string(a + b); int len = s.length(); for (int i = 0; i &lt; len; ++i) { cout &lt;&lt; s[i]; if (s[i] == &apos;-&apos;) continue; if ((i + 1) % 3 == len % 3 &amp;&amp; i != len - 1) cout &lt;&lt; &apos;,&apos;; } return 0;} 1002. A+B for Polynomials (25)-PAT&#x7532;&#x7EA7;&#x771F;&#x9898;This time, you are supposed to find A+B where A and B are two polynomials. Input Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 &#x2026; NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, &#x2026;, K) are the exponents and coefficients, respectively. It is given that 1 &lt;= K &lt;= 10&#xFF0C;0 &lt;= NK &lt; &#x2026; &lt; N2 &lt; N1 &lt;=1000. Output For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place. Sample Input 2 1 2.4 0 3.2 2 2 1.5 1 0.5 Sample Output 3 2 1.5 1 2.9 0 3.2 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;iostream&gt;using namespace std;int main() { float c[1001] = {0}; int k1, k2, t; float temp; cin &gt;&gt; k1; for (int i = 0; i &lt; k1; ++i) { scanf(&quot;%d %f&quot;, &amp;t, &amp;temp); c[t] += temp; } cin &gt;&gt; k2; for (int i = 0; i &lt; k2; ++i) { scanf(&quot;%d %f&quot;, &amp;t, &amp;temp); c[t] += temp; } int count = 0; for (int i = 0; i &lt; 1001; ++i) { if (c[i] != 0) count++; } cout &lt;&lt; count; if (count != 0) cout &lt;&lt; &quot; &quot;; for (int i = 1000; i &gt;= 0; --i) { if (c[i] != 0 &amp;&amp; count &gt; 0){ printf(&quot;%d %.1f&quot;, i, c[i]); count--; if (count &gt;= 1) printf(&quot; &quot;); } } return 0;} PAT 1070. &#x7ED3;&#x7EF3;(25)-&#x4E59;&#x7EA7;&#x7ED9;&#x5B9A;&#x4E00;&#x6BB5;&#x4E00;&#x6BB5;&#x7684;&#x7EF3;&#x5B50;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x628A;&#x5B83;&#x4EEC;&#x4E32;&#x6210;&#x4E00;&#x6761;&#x7EF3;&#x3002;&#x6BCF;&#x6B21;&#x4E32;&#x8FDE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x628A;&#x4E24;&#x6BB5;&#x7EF3;&#x5B50;&#x5BF9;&#x6298;&#xFF0C;&#x518D;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x5957;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#x3002;&#x8FD9;&#x6837;&#x5F97;&#x5230;&#x7684;&#x7EF3;&#x5B50;&#x53C8;&#x88AB;&#x5F53;&#x6210;&#x662F;&#x53E6;&#x4E00;&#x6BB5;&#x7EF3;&#x5B50;&#xFF0C;&#x53EF;&#x4EE5;&#x518D;&#x6B21;&#x5BF9;&#x6298;&#x53BB;&#x8DDF;&#x53E6;&#x4E00;&#x6BB5;&#x7EF3;&#x5B50;&#x4E32;&#x8FDE;&#x3002;&#x6BCF;&#x6B21;&#x4E32;&#x8FDE;&#x540E;&#xFF0C;&#x539F;&#x6765;&#x4E24;&#x6BB5;&#x7EF3;&#x5B50;&#x7684;&#x957F;&#x5EA6;&#x5C31;&#x4F1A;&#x51CF;&#x534A;&#x3002; &#x7ED9;&#x5B9A;N&#x6BB5;&#x7EF3;&#x5B50;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x627E;&#x51FA;&#x5B83;&#x4EEC;&#x80FD;&#x4E32;&#x6210;&#x7684;&#x7EF3;&#x5B50;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7B2C;1&#x884C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;N (2 &lt;= N &lt;= 104)&#xFF1B;&#x7B2C;2&#x884C;&#x7ED9;&#x51FA;N&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x5373;&#x539F;&#x59CB;&#x7EF3;&#x6BB5;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002;&#x6240;&#x6709;&#x6574;&#x6570;&#x90FD;&#x4E0D;&#x8D85;&#x8FC7;104&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x80FD;&#x591F;&#x4E32;&#x6210;&#x7684;&#x7EF3;&#x5B50;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x3002;&#x7ED3;&#x679C;&#x5411;&#x4E0B;&#x53D6;&#x6574;&#xFF0C;&#x5373;&#x53D6;&#x4E3A;&#x4E0D;&#x8D85;&#x8FC7;&#x6700;&#x5927;&#x957F;&#x5EA6;&#x7684;&#x6700;&#x8FD1;&#x6574;&#x6570;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 8 10 15 12 3 4 13 1 15 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 14 123456789101112131415161718192021222324#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std;int main() { int n; cin &gt;&gt; n; vector&lt;int&gt; vec(n); for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; vec[i]; } sort(vec.begin(), vec.end()); int result = vec[0]; for (int i = 1; i &lt; n; ++i) { result = (result + vec[i]) / 2; } cout &lt;&lt; result; return 0;} L1-020. &#x5E05;&#x5230;&#x6CA1;&#x670B;&#x53CB;-PAT&#x56E2;&#x4F53;&#x7A0B;&#x5E8F;&#x8BBE;&#x8BA1;&#x5929;&#x68AF;&#x8D5B;GPLT&#x5F53;&#x82B8;&#x82B8;&#x4F17;&#x751F;&#x5FD9;&#x7740;&#x5728;&#x670B;&#x53CB;&#x5708;&#x4E2D;&#x53D1;&#x7167;&#x7247;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x4E9B;&#x4EBA;&#x56E0;&#x4E3A;&#x592A;&#x5E05;&#x800C;&#x6CA1;&#x6709;&#x670B;&#x53CB;&#x3002;&#x672C;&#x9898;&#x5C31;&#x8981;&#x6C42;&#x4F60;&#x627E;&#x51FA;&#x90A3;&#x4E9B;&#x5E05;&#x5230;&#x6CA1;&#x6709;&#x670B;&#x53CB;&#x7684;&#x4EBA;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x7B2C;&#x4E00;&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;N&#xFF08;&lt;=100&#xFF09;&#xFF0C;&#x662F;&#x5DF2;&#x77E5;&#x670B;&#x53CB;&#x5708;&#x7684;&#x4E2A;&#x6570;&#xFF1B;&#x968F;&#x540E;N&#x884C;&#xFF0C;&#x6BCF;&#x884C;&#x9996;&#x5148;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;K&#xFF08;&lt;=1000&#xFF09;&#xFF0C;&#x4E3A;&#x670B;&#x53CB;&#x5708;&#x4E2D;&#x7684;&#x4EBA;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5217;&#x51FA;&#x4E00;&#x4E2A;&#x670B;&#x53CB;&#x5708;&#x5185;&#x7684;&#x6240;&#x6709;&#x4EBA;&#x2014;&#x2014;&#x4E3A;&#x65B9;&#x4FBF;&#x8D77;&#x89C1;&#xFF0C;&#x6BCF;&#x4EBA;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;ID&#x53F7;&#xFF0C;&#x4E3A;5&#x4F4D;&#x6570;&#x5B57;&#xFF08;&#x4ECE;00000&#x5230;99999&#xFF09;&#xFF0C;ID&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF1B;&#x4E4B;&#x540E;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;M&#xFF08;&lt;=10000&#xFF09;&#xFF0C;&#x4E3A;&#x5F85;&#x67E5;&#x8BE2;&#x7684;&#x4EBA;&#x6570;&#xFF1B;&#x968F;&#x540E;&#x4E00;&#x884C;&#x4E2D;&#x5217;&#x51FA;M&#x4E2A;&#x5F85;&#x67E5;&#x8BE2;&#x7684;ID&#xFF0C;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x6CA1;&#x6709;&#x670B;&#x53CB;&#x7684;&#x4EBA;&#x53EF;&#x4EE5;&#x662F;&#x6839;&#x672C;&#x6CA1;&#x5B89;&#x88C5;&#x201C;&#x670B;&#x53CB;&#x5708;&#x201D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x53EA;&#x6709;&#x81EA;&#x5DF1;&#x4E00;&#x4E2A;&#x4EBA;&#x5728;&#x670B;&#x53CB;&#x5708;&#x7684;&#x4EBA;&#x3002;&#x867D;&#x7136;&#x6709;&#x4E2A;&#x522B;&#x81EA;&#x604B;&#x72C2;&#x4F1A;&#x81EA;&#x5DF1;&#x628A;&#x81EA;&#x5DF1;&#x53CD;&#x590D;&#x52A0;&#x8FDB;&#x670B;&#x53CB;&#x5708;&#xFF0C;&#x4F46;&#x9898;&#x76EE;&#x4FDD;&#x8BC1;&#x6240;&#x6709;K&#x8D85;&#x8FC7;1&#x7684;&#x670B;&#x53CB;&#x5708;&#x91CC;&#x90FD;&#x81F3;&#x5C11;&#x6709;2&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x4EBA;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x6309;&#x8F93;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x90A3;&#x4E9B;&#x5E05;&#x5230;&#x6CA1;&#x670B;&#x53CB;&#x7684;&#x4EBA;&#x3002;ID&#x95F4;&#x7528;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x884C;&#x7684;&#x9996;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4EBA;&#x592A;&#x5E05;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x201C;No one is handsome&#x201D;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x540C;&#x4E00;&#x4E2A;&#x4EBA;&#x53EF;&#x4EE5;&#x88AB;&#x67E5;&#x8BE2;&#x591A;&#x6B21;&#xFF0C;&#x4F46;&#x53EA;&#x8F93;&#x51FA;&#x4E00;&#x6B21;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A; 3 3 11111 22222 55555 2 33333 44444 4 55555 66666 99999 77777 8 55555 44444 10000 88888 22222 11111 23333 88888 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A; 10000 88888 23333 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A; 3 3 11111 22222 55555 2 33333 44444 4 55555 66666 99999 77777 4 55555 44444 22222 11111 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A; No one is handsome 123456789101112131415161718192021222324252627282930313233#include &lt;iostream&gt;#include &lt;set&gt;using namespace std;int main() { int a, b, c; cin &gt;&gt; a; set&lt;string&gt; s, ans; string str; for(int i = 0; i &lt; a; i++) { cin &gt;&gt; b; for(int j = 0; j &lt; b; j++) { cin &gt;&gt; str; if (b &gt;= 2) s.insert(str); } } cin &gt;&gt; c; int flag = 0; for(int i = 0; i &lt; c; i++) { cin &gt;&gt; str; if(s.find(str) == s.end() &amp;&amp; ans.find(str) == ans.end()) { ans.insert(str); if(flag == 1) cout &lt;&lt; &quot; &quot;; cout &lt;&lt; str; flag = 1; } } if(flag == 0) cout &lt;&lt; &quot;No one is handsome&quot;; return 0;} CCCC-GPLT L1-033. &#x51FA;&#x751F;&#x5E74; &#x5929;&#x68AF;&#x8D5B;&#x4EE5;&#x4E0A;&#x662F;&#x65B0;&#x6D6A;&#x5FAE;&#x535A;&#x4E2D;&#x4E00;&#x5947;&#x8469;&#x8D34;&#xFF1A;&#x201C;&#x6211;&#x51FA;&#x751F;&#x4E8E;1988&#x5E74;&#xFF0C;&#x76F4;&#x5230;25&#x5C81;&#x624D;&#x9047;&#x5230;4&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x5E74;&#x4EFD;&#x3002;&#x201D;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x76F4;&#x5230;2013&#x5E74;&#x624D;&#x8FBE;&#x5230;&#x201C;4&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x201D;&#x7684;&#x8981;&#x6C42;&#x3002;&#x672C;&#x9898;&#x8BF7;&#x4F60;&#x6839;&#x636E;&#x8981;&#x6C42;&#xFF0C;&#x81EA;&#x52A8;&#x586B;&#x5145;&#x201C;&#x6211;&#x51FA;&#x751F;&#x4E8E;y&#x5E74;&#xFF0C;&#x76F4;&#x5230;x&#x5C81;&#x624D;&#x9047;&#x5230;n&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x5E74;&#x4EFD;&#x201D;&#x8FD9;&#x53E5;&#x8BDD;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x7ED9;&#x51FA;&#x51FA;&#x751F;&#x5E74;&#x4EFD;y&#x548C;&#x76EE;&#x6807;&#x5E74;&#x4EFD;&#x4E2D;&#x4E0D;&#x540C;&#x6570;&#x5B57;&#x7684;&#x4E2A;&#x6570;n&#xFF0C;&#x5176;&#x4E2D;y&#x5728;[1, 3000]&#x4E4B;&#x95F4;&#xFF0C;n&#x53EF;&#x4EE5;&#x662F;2&#x3001;&#x6216;3&#x3001;&#x6216;4&#x3002;&#x6CE8;&#x610F;&#x4E0D;&#x8DB3;4&#x4F4D;&#x7684;&#x5E74;&#x4EFD;&#x8981;&#x5728;&#x524D;&#x9762;&#x8865;&#x96F6;&#xFF0C;&#x4F8B;&#x5982;&#x516C;&#x5143;1&#x5E74;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;0001&#x5E74;&#xFF0C;&#x6709;2&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x5B57;0&#x548C;1&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x6839;&#x636E;&#x8F93;&#x5165;&#xFF0C;&#x8F93;&#x51FA;x&#x548C;&#x80FD;&#x8FBE;&#x5230;&#x8981;&#x6C42;&#x7684;&#x5E74;&#x4EFD;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x4EE5;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x884C;&#x9996;&#x5C3E;&#x4E0D;&#x5F97;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002;&#x5E74;&#x4EFD;&#x8981;&#x6309;4&#x4F4D;&#x8F93;&#x51FA;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x6240;&#x8C13;&#x201C;n&#x4E2A;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x76F8;&#x540C;&#x201D;&#x662F;&#x6307;&#x4E0D;&#x540C;&#x7684;&#x6570;&#x5B57;&#x6B63;&#x597D;&#x662F;n&#x4E2A;&#x3002;&#x5982;&#x201C;2013&#x201D;&#x88AB;&#x89C6;&#x4E3A;&#x6EE1;&#x8DB3;&#x201C;4&#x4F4D;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x540C;&#x201D;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x4F46;&#x4E0D;&#x88AB;&#x89C6;&#x4E3A;&#x6EE1;&#x8DB3;2&#x4F4D;&#x6216;3&#x4F4D;&#x6570;&#x5B57;&#x4E0D;&#x540C;&#x7684;&#x6761;&#x4EF6;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A; 1988 4 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A; 25 2013 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A; 1 2 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A; 0 0001 1234567891011121314151617181920212223#include &lt;iostream&gt;#include &lt;set&gt;using namespace std;int main() { int y, n; cin &gt;&gt; y &gt;&gt; n; for (int i = y; i &lt;= 3012; ++i) { set&lt;int&gt; s; int num = i; for (int j = 0; j &lt; 4; ++j) { s.insert(num % 10); num /= 10; } if (s.size() == n) { printf(&quot;%d %04d&quot;, i - y, i); break; } } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PAT 乙级真题题解 1006~1011]]></title>
    <url>%2F2018%2F03%2F22%2FPAT_%E4%B9%99%E7%BA%A7%E7%9C%9F%E9%A2%98%E9%A2%98%E8%A7%A3_1006~1011%2F</url>
    <content type="text"><![CDATA[1006. &#x6362;&#x4E2A;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x6574;&#x6570; (15)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x8BA9;&#x6211;&#x4EEC;&#x7528;&#x5B57;&#x6BCD;B&#x6765;&#x8868;&#x793A;&#x201C;&#x767E;&#x201D;&#x3001;&#x5B57;&#x6BCD;S&#x8868;&#x793A;&#x201C;&#x5341;&#x201D;&#xFF0C;&#x7528;&#x201C;12&#x2026;n&#x201D;&#x6765;&#x8868;&#x793A;&#x4E2A;&#x4F4D;&#x6570;&#x5B57;n&#xFF08;&lt;10&#xFF09;&#xFF0C;&#x6362;&#x4E2A;&#x683C;&#x5F0F;&#x6765;&#x8F93;&#x51FA;&#x4EFB;&#x4E00;&#x4E2A;&#x4E0D;&#x8D85;&#x8FC7;3&#x4F4D;&#x7684;&#x6B63;&#x6574;&#x6570;&#x3002;&#x4F8B;&#x5982;234&#x5E94;&#x8BE5;&#x88AB;&#x8F93;&#x51FA;&#x4E3A;BBSSS1234&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x6709;2&#x4E2A;&#x201C;&#x767E;&#x201D;&#x3001;3&#x4E2A;&#x201C;&#x5341;&#x201D;&#x3001;&#x4EE5;&#x53CA;&#x4E2A;&#x4F4D;&#x7684;4&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;n&#xFF08;&lt;1000&#xFF09;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x8F93;&#x51FA;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x7528;&#x89C4;&#x5B9A;&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x51FA;n&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;1&#xFF1A; 234 &#x8F93;&#x51FA;&#x6837;&#x4F8B;1&#xFF1A; BBSSS1234 &#x8F93;&#x5165;&#x6837;&#x4F8B;2&#xFF1A; 23 &#x8F93;&#x51FA;&#x6837;&#x4F8B;2&#xFF1A; SS123 12345678910111213141516171819202122232425#include &lt;iostream&gt;using namespace std;int main() { int n; cin &gt;&gt; n; int i = 0; int b[3] = {0}; while (n) { b[i++] = n % 10; n = n / 10; } for (int j = 0; j &lt; b[2]; ++j) { cout &lt;&lt; &quot;B&quot;; } for (int k = 0; k &lt; b[1]; ++k) { cout &lt;&lt; &quot;S&quot;; } for (int l = 1; l &lt;= b[0]; ++l) { cout &lt;&lt; l; } return 0;} 1007. &#x7D20;&#x6570;&#x5BF9;&#x731C;&#x60F3; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x8BA9;&#x6211;&#x4EEC;&#x5B9A;&#x4E49; dn &#x4E3A;&#xFF1A;dn = pn+1 &#x2013; pn&#xFF0C;&#x5176;&#x4E2D; pi &#x662F;&#x7B2C;i&#x4E2A;&#x7D20;&#x6570;&#x3002;&#x663E;&#x7136;&#x6709; d1=1 &#x4E14;&#x5BF9;&#x4E8E;n&gt;1&#x6709; dn &#x662F;&#x5076;&#x6570;&#x3002;&#x201C;&#x7D20;&#x6570;&#x5BF9;&#x731C;&#x60F3;&#x201D;&#x8BA4;&#x4E3A;&#x201C;&#x5B58;&#x5728;&#x65E0;&#x7A77;&#x591A;&#x5BF9;&#x76F8;&#x90BB;&#x4E14;&#x5DEE;&#x4E3A;2&#x7684;&#x7D20;&#x6570;&#x201D;&#x3002; &#x73B0;&#x7ED9;&#x5B9A;&#x4EFB;&#x610F;&#x6B63;&#x6574;&#x6570;N (&lt; 105)&#xFF0C;&#x8BF7;&#x8BA1;&#x7B97;&#x4E0D;&#x8D85;&#x8FC7;N&#x7684;&#x6EE1;&#x8DB3;&#x731C;&#x60F3;&#x7684;&#x7D20;&#x6570;&#x5BF9;&#x7684;&#x4E2A;&#x6570;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;N&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x8F93;&#x51FA;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x4E0D;&#x8D85;&#x8FC7;N&#x7684;&#x6EE1;&#x8DB3;&#x731C;&#x60F3;&#x7684;&#x7D20;&#x6570;&#x5BF9;&#x7684;&#x4E2A;&#x6570;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 20 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 4 123456789101112131415161718192021222324#include &lt;iostream&gt;using namespace std;bool isPrime(int a) { for (int i = 2; i * i &lt;= a; ++i) { if (a % i == 0) return false; } return true;}int main() { int n; cin &gt;&gt; n; int count = 0; for (int i = 5; i &lt;= n; ++i) { if(isPrime(i - 2) &amp;&amp; isPrime(i)) count++; } cout &lt;&lt; count; return 0;} 1008. &#x6570;&#x7EC4;&#x5143;&#x7D20;&#x5FAA;&#x73AF;&#x53F3;&#x79FB;&#x95EE;&#x9898; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;A&#x4E2D;&#x5B58;&#x6709;N&#xFF08;N&gt;0&#xFF09;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x5728;&#x4E0D;&#x5141;&#x8BB8;&#x4F7F;&#x7528;&#x53E6;&#x5916;&#x6570;&#x7EC4;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x5C06;&#x6BCF;&#x4E2A;&#x6574;&#x6570;&#x5FAA;&#x73AF;&#x5411;&#x53F3;&#x79FB;M&#xFF08;M&gt;=0&#xFF09;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x5373;&#x5C06;A&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7531;&#xFF08;A0 A1&#x2026;&#x2026;AN-1&#xFF09;&#x53D8;&#x6362;&#x4E3A;&#xFF08;AN-M &#x2026;&#x2026; AN-1 A0 A1&#x2026;&#x2026;AN-M-1&#xFF09;&#xFF08;&#x6700;&#x540E;M&#x4E2A;&#x6570;&#x5FAA;&#x73AF;&#x79FB;&#x81F3;&#x6700;&#x524D;&#x9762;&#x7684;M&#x4E2A;&#x4F4D;&#x7F6E;&#xFF09;&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#x8003;&#x8651;&#x7A0B;&#x5E8F;&#x79FB;&#x52A8;&#x6570;&#x636E;&#x7684;&#x6B21;&#x6570;&#x5C3D;&#x91CF;&#x5C11;&#xFF0C;&#x8981;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x79FB;&#x52A8; &#x7684;&#x65B9;&#x6CD5;&#xFF1F; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x8F93;&#x5165;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;1&#x884C;&#x8F93;&#x5165;N ( 1&lt;=N&lt;=100)&#x3001;M&#xFF08;M&gt;=0&#xFF09;&#xFF1B;&#x7B2C;2&#x884C;&#x8F93;&#x5165;N&#x4E2A;&#x6574;&#x6570;, &#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x5FAA;&#x73AF;&#x53F3;&#x79FB;M&#x4F4D;&#x4EE5;&#x540E;&#x7684;&#x6574;&#x6570;&#x5E8F;&#x5217;&#xFF0C;&#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x5E8F;&#x5217;&#x7ED3;&#x5C3E;&#x4E0D;&#x80FD;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 6 2 1 2 3 4 5 6 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 5 6 1 2 3 4 123456789101112131415161718192021222324252627#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;algorithm&gt;using namespace std;int main() { int n, m; cin &gt;&gt; n &gt;&gt; m; vector&lt;int&gt; a(n); for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; a[i]; } if (m != n &amp;&amp; m != 0) { if (m &gt; n) m = m - n; reverse(a.begin(), a.begin() + n); reverse(a.begin(), a.begin() + m); reverse(a.begin() + m, a.begin() + n); } for (int j = 0; j &lt; n -1; ++j) { cout &lt;&lt; a[j] &lt;&lt; &quot; &quot;; } cout &lt;&lt; a[n - 1]; return 0;} 1009. &#x8BF4;&#x53CD;&#x8BDD; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x9898;&#x76EE;&#x63CF;&#x8FF0;&#xFF1A; &#x7ED9;&#x5B9A;&#x4E00;&#x53E5;&#x82F1;&#x8BED;&#xFF0C;&#x8981;&#x6C42;&#x4F60;&#x7F16;&#x5199;&#x7A0B;&#x5E8F;&#xFF0C;&#x5C06;&#x53E5;&#x4E2D;&#x6240;&#x6709;&#x5355;&#x8BCD;&#x7684;&#x987A;&#x5E8F;&#x98A0;&#x5012;&#x8F93;&#x51FA;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x5185;&#x7ED9;&#x51FA;&#x603B;&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;80&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x5B57;&#x7B26;&#x4E32;&#x7531;&#x82E5;&#x5E72;&#x5355;&#x8BCD;&#x548C;&#x82E5;&#x5E72;&#x7A7A;&#x683C;&#x7EC4;&#x6210;&#xFF0C;&#x5176;&#x4E2D;&#x5355;&#x8BCD;&#x662F;&#x7531;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#xFF08;&#x5927;&#x5C0F;&#x5199;&#x6709;&#x533A;&#x5206;&#xFF09;&#x7EC4;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5355;&#x8BCD;&#x4E4B;&#x95F4;&#x7528;1&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x5F00;&#xFF0C;&#x8F93;&#x5165;&#x4FDD;&#x8BC1;&#x53E5;&#x5B50;&#x672B;&#x5C3E;&#x6CA1;&#x6709;&#x591A;&#x4F59;&#x7684;&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x8F93;&#x51FA;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x8F93;&#x51FA;&#x5012;&#x5E8F;&#x540E;&#x7684;&#x53E5;&#x5B50;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; Hello World Here I Come &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; Come I Here World Hello 1234567891011121314151617181920#include &lt;iostream&gt;#include &lt;stack&gt;using namespace std;int main() { stack&lt;string&gt; v; string s; while(cin &gt;&gt; s) { v.push(s); } cout &lt;&lt; v.top(); v.pop(); while (!v.empty()) { cout &lt;&lt; &quot; &quot; &lt;&lt; v.top(); v.pop(); } return 0;} 1010. &#x4E00;&#x5143;&#x591A;&#x9879;&#x5F0F;&#x6C42;&#x5BFC; (25)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x8BBE;&#x8BA1;&#x51FD;&#x6570;&#x6C42;&#x4E00;&#x5143;&#x591A;&#x9879;&#x5F0F;&#x7684;&#x5BFC;&#x6570;&#x3002;&#xFF08;&#x6CE8;&#xFF1A;xn&#xFF08;n&#x4E3A;&#x6574;&#x6570;&#xFF09;&#x7684;&#x4E00;&#x9636;&#x5BFC;&#x6570;&#x4E3A;n*xn-1&#x3002;&#xFF09; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x4EE5;&#x6307;&#x6570;&#x9012;&#x964D;&#x65B9;&#x5F0F;&#x8F93;&#x5165;&#x591A;&#x9879;&#x5F0F;&#x975E;&#x96F6;&#x9879;&#x7CFB;&#x6570;&#x548C;&#x6307;&#x6570;&#xFF08;&#x7EDD;&#x5BF9;&#x503C;&#x5747;&#x4E3A;&#x4E0D;&#x8D85;&#x8FC7;1000&#x7684;&#x6574;&#x6570;&#xFF09;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x4EE5;&#x4E0E;&#x8F93;&#x5165;&#x76F8;&#x540C;&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x51FA;&#x5BFC;&#x6570;&#x591A;&#x9879;&#x5F0F;&#x975E;&#x96F6;&#x9879;&#x7684;&#x7CFB;&#x6570;&#x548C;&#x6307;&#x6570;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x4F46;&#x7ED3;&#x5C3E;&#x4E0D;&#x80FD;&#x6709;&#x591A;&#x4F59;&#x7A7A;&#x683C;&#x3002;&#x6CE8;&#x610F;&#x201C;&#x96F6;&#x591A;&#x9879;&#x5F0F;&#x201D;&#x7684;&#x6307;&#x6570;&#x548C;&#x7CFB;&#x6570;&#x90FD;&#x662F;0&#xFF0C;&#x4F46;&#x662F;&#x8868;&#x793A;&#x4E3A;&#x201C;0 0&#x201D;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 3 4 -5 2 6 1 -2 0 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 12 3 -10 1 6 0 123456789101112131415161718192021#include &lt;iostream&gt;using namespace std;int main() { int a, b; bool isFirst = false; while (cin &gt;&gt; a &gt;&gt; b) { if (b == 0) continue; if (isFirst) cout &lt;&lt; &quot; &quot;; else isFirst = true; cout &lt;&lt; a * b &lt;&lt; &quot; &quot; &lt;&lt; b - 1; } if (!isFirst) cout &lt;&lt; &quot;0 0&quot;; return 0;} 1011. A+B&#x548C;C (15)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x9898;&#x76EE;&#x63CF;&#x8FF0;&#xFF1A; &#x7ED9;&#x5B9A;&#x533A;&#x95F4;[-2^31, 2^31]&#x5185;&#x7684;3&#x4E2A;&#x6574;&#x6570;A&#x3001;B&#x548C;C&#xFF0C;&#x8BF7;&#x5224;&#x65AD;A+B&#x662F;&#x5426;&#x5927;&#x4E8E;C&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x5165;&#x7B2C;1&#x884C;&#x7ED9;&#x51FA;&#x6B63;&#x6574;&#x6570;T(&lt;=10)&#xFF0C;&#x662F;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x968F;&#x540E;&#x7ED9;&#x51FA;T&#x7EC4;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x6BCF;&#x7EC4;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x987A;&#x5E8F;&#x7ED9;&#x51FA;A&#x3001;B&#x548C;C&#x3002;&#x6574;&#x6570;&#x95F4;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x5BF9;&#x6BCF;&#x7EC4;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8F93;&#x51FA;&#x201C;Case #X: true&#x201D;&#x5982;&#x679C;A+B&gt;C&#xFF0C;&#x5426;&#x5219;&#x8F93;&#x51FA;&#x201C;Case #X: false&#x201D;&#xFF0C;&#x5176;&#x4E2D;X&#x662F;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x7F16;&#x53F7;&#xFF08;&#x4ECE;1&#x5F00;&#x59CB;&#xFF09;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 4 1 2 3 2 3 4 2147483647 0 2147483646 0 -2147483648 -2147483647 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; Case #1: false Case #2: true Case #3: true Case #4: false 1234567891011121314151617181920#include &lt;iostream&gt;using namespace std;int main() { int n; cin &gt;&gt; n; for (int i = 0; i &lt; n; ++i) { long long int a, b, c; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c; cout &lt;&lt; &quot;Case #&quot; &lt;&lt; i + 1 &lt;&lt; &quot;: &quot;; if (a + b &gt; c) cout &lt;&lt; &quot;true&quot;; else cout &lt;&lt; &quot;false&quot;; cout &lt;&lt; endl; } return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PAT 乙级真题题解 1001~1005]]></title>
    <url>%2F2018%2F03%2F22%2FPAT_%E4%B9%99%E7%BA%A7%E7%9C%9F%E9%A2%98%E9%A2%98%E8%A7%A31001~1005%2F</url>
    <content type="text"><![CDATA[1001. &#x5BB3;&#x6B7B;&#x4EBA;&#x4E0D;&#x507F;&#x547D;&#x7684;(3n+1)&#x731C;&#x60F3; (15)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x5361;&#x62C9;&#x5179;(Callatz)&#x731C;&#x60F3;&#xFF1A; &#x5BF9;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x81EA;&#x7136;&#x6570;n&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x662F;&#x5076;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x628A;&#x5B83;&#x780D;&#x6389;&#x4E00;&#x534A;&#xFF1B; &#x5982;&#x679C;&#x5B83;&#x662F;&#x5947;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x628A;(3n+1)&#x780D;&#x6389;&#x4E00;&#x534A;&#x3002;&#x8FD9;&#x6837;&#x4E00;&#x76F4;&#x53CD;&#x590D;&#x780D;&#x4E0B;&#x53BB;&#xFF0C; &#x6700;&#x540E;&#x4E00;&#x5B9A;&#x5728;&#x67D0;&#x4E00;&#x6B65;&#x5F97;&#x5230;n=1&#x3002;&#x5361;&#x62C9;&#x5179;&#x5728;1950&#x5E74;&#x7684;&#x4E16;&#x754C;&#x6570;&#x5B66;&#x5BB6;&#x5927;&#x4F1A;&#x4E0A;&#x516C;&#x5E03; &#x4E86;&#x8FD9;&#x4E2A;&#x731C;&#x60F3;&#xFF0C;&#x4F20;&#x8BF4;&#x5F53;&#x65F6;&#x8036;&#x9C81;&#x5927;&#x5B66;&#x5E08;&#x751F;&#x9F50;&#x52A8;&#x5458;&#xFF0C;&#x62FC;&#x547D;&#x60F3;&#x8BC1;&#x660E;&#x8FD9;&#x4E2A;&#x8C8C;&#x4F3C; &#x5F88;&#x50BB;&#x5F88;&#x5929;&#x771F;&#x7684;&#x547D;&#x9898;&#xFF0C;&#x7ED3;&#x679C;&#x95F9;&#x5F97;&#x5B66;&#x751F;&#x4EEC;&#x65E0;&#x5FC3;&#x5B66;&#x4E1A;&#xFF0C;&#x4E00;&#x5FC3;&#x53EA;&#x8BC1;(3n+1)&#xFF0C; &#x4EE5;&#x81F3;&#x4E8E;&#x6709;&#x4EBA;&#x8BF4;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x9634;&#x8C0B;&#xFF0C;&#x5361;&#x62C9;&#x5179;&#x662F;&#x5728;&#x84C4;&#x610F;&#x5EF6;&#x7F13;&#x7F8E;&#x56FD;&#x6570;&#x5B66;&#x754C;&#x6559;&#x5B66;&#x4E0E;&#x79D1;&#x7814;&#x7684;&#x8FDB;&#x5C55;&#x2026;&#x2026; &#x6211;&#x4EEC;&#x4ECA;&#x5929;&#x7684;&#x9898;&#x76EE;&#x4E0D;&#x662F;&#x8BC1;&#x660E;&#x5361;&#x62C9;&#x5179;&#x731C;&#x60F3;&#xFF0C;&#x800C;&#x662F;&#x5BF9;&#x7ED9;&#x5B9A;&#x7684;&#x4EFB;&#x4E00;&#x4E0D;&#x8D85;&#x8FC7;1000&#x7684;&#x6B63;&#x6574;&#x6570;n&#xFF0C; &#x7B80;&#x5355;&#x5730;&#x6570;&#x4E00;&#x4E0B;&#xFF0C;&#x9700;&#x8981;&#x591A;&#x5C11;&#x6B65;&#xFF08;&#x780D;&#x51E0;&#x4E0B;&#xFF09;&#x624D;&#x80FD;&#x5F97;&#x5230;n=1&#xFF1F; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5373;&#x7ED9;&#x51FA;&#x81EA;&#x7136;&#x6570;n&#x7684;&#x503C;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x8F93;&#x51FA;&#x4ECE;n&#x8BA1;&#x7B97;&#x5230;1&#x9700;&#x8981;&#x7684;&#x6B65;&#x6570;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 3 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 5 12345678910111213141516#include &lt;iostream&gt;using namespace std;int main() { int n; cin &gt;&gt; n; int count = 0; while (n != 1) { if (n % 2 != 0) { n = 3 * n + 1; } n = n / 2; count++; } cout &lt;&lt; count; return 0;} 1002. &#x5199;&#x51FA;&#x8FD9;&#x4E2A;&#x6570; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x8BFB;&#x5165;&#x4E00;&#x4E2A;&#x81EA;&#x7136;&#x6570;n&#xFF0C;&#x8BA1;&#x7B97;&#x5176;&#x5404;&#x4F4D;&#x6570;&#x5B57;&#x4E4B;&#x548C;&#xFF0C;&#x7528;&#x6C49;&#x8BED;&#x62FC;&#x97F3;&#x5199;&#x51FA;&#x548C;&#x7684;&#x6BCF;&#x4E00;&#x4F4D;&#x6570;&#x5B57;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x5373;&#x7ED9;&#x51FA;&#x81EA;&#x7136;&#x6570;n&#x7684;&#x503C;&#x3002;&#x8FD9;&#x91CC;&#x4FDD;&#x8BC1;n&#x5C0F;&#x4E8E;10100&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x5728;&#x4E00;&#x884C;&#x5185;&#x8F93;&#x51FA;n&#x7684;&#x5404;&#x4F4D;&#x6570;&#x5B57;&#x4E4B;&#x548C;&#x7684;&#x6BCF;&#x4E00;&#x4F4D;&#xFF0C;&#x62FC;&#x97F3;&#x6570;&#x5B57;&#x95F4;&#x6709;1 &#x7A7A;&#x683C;&#xFF0C;&#x4F46;&#x4E00;&#x884C;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x62FC;&#x97F3; &#x6570;&#x5B57;&#x540E;&#x6CA1;&#x6709;&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 1234567890987654321123456789 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; yi san wu 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &lt;iostream&gt;using namespace std;int main() { string s; cin &gt;&gt; s; unsigned long len; len = s.length(); int *a; a = new int[len]; int sum = 0; string str[10] = { &quot;ling&quot;, &quot;yi&quot;, &quot;er&quot;, &quot;san&quot;, &quot;si&quot;, &quot;wu&quot;, &quot;liu&quot;, &quot;qi&quot;, &quot;ba&quot;, &quot;jiu&quot; }; for (int i = 0; i &lt; len; ++i) { a[i] = s[i] - &apos;0&apos;; sum = sum + a[i]; } int *b; b = new int[len]; int j = 0; if (sum == 0) { cout &lt;&lt; &quot;ling&quot;; } else { while (sum != 0) { b[j++] = sum % 10; sum = sum / 10; } } for (int k = j - 1; k &gt;= 1; k--) { cout &lt;&lt; str[b[k]] &lt;&lt; &quot; &quot;; } cout &lt;&lt; str[b[0]]; delete[] a; delete[] b; return 0;} 1003. &#x6211;&#x8981;&#x901A;&#x8FC7;&#xFF01;(20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x201C;&#x7B54;&#x6848;&#x6B63;&#x786E;&#x201D;&#x662F;&#x81EA;&#x52A8;&#x5224;&#x9898;&#x7CFB;&#x7EDF;&#x7ED9;&#x51FA;&#x7684;&#x6700;&#x4EE4;&#x4EBA;&#x6B22;&#x559C;&#x7684;&#x56DE;&#x590D;&#x3002;&#x672C;&#x9898;&#x5C5E;&#x4E8E;PAT&#x7684;&#x201C;&#x7B54;&#x6848;&#x6B63;&#x786E;&#x201D;&#x5927;&#x6D3E;&#x9001; &#x2014;&#x2014; &#x53EA;&#x8981;&#x8BFB;&#x5165;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x6EE1;&#x8DB3;&#x4E0B;&#x5217;&#x6761;&#x4EF6;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C31;&#x8F93;&#x51FA;&#x201C;&#x7B54;&#x6848;&#x6B63;&#x786E;&#x201D;&#xFF0C;&#x5426;&#x5219;&#x8F93;&#x51FA;&#x201C;&#x7B54;&#x6848;&#x9519;&#x8BEF;&#x201D;&#x3002; &#x5F97;&#x5230;&#x201C;&#x7B54;&#x6848;&#x6B63;&#x786E;&#x201D;&#x7684;&#x6761;&#x4EF6;&#x662F;&#xFF1A; 1. &#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5FC5;&#x987B;&#x4EC5;&#x6709;P, A, T&#x8FD9;&#x4E09;&#x79CD;&#x5B57;&#x7B26;&#xFF0C;&#x4E0D;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x5176;&#x5B83;&#x5B57;&#x7B26;&#xFF1B; 2. &#x4EFB;&#x610F;&#x5F62;&#x5982; xPATx &#x7684;&#x5B57;&#x7B26;&#x4E32;&#x90FD;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x201C;&#x7B54;&#x6848;&#x6B63;&#x786E;&#x201D;&#xFF0C;&#x5176;&#x4E2D; x &#x6216;&#x8005;&#x662F;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x4EC5;&#x7531;&#x5B57;&#x6BCD; A &#x7EC4;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF1B; 3. &#x5982;&#x679C; aPbTc &#x662F;&#x6B63;&#x786E;&#x7684;&#xFF0C;&#x90A3;&#x4E48; aPbATca &#x4E5F;&#x662F;&#x6B63;&#x786E;&#x7684;&#xFF0C;&#x5176;&#x4E2D; a, b, c &#x5747;&#x6216;&#x8005;&#x662F;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x4EC5;&#x7531;&#x5B57;&#x6BCD; A &#x7EC4;&#x6210;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x73B0;&#x5728;&#x5C31;&#x8BF7;&#x4F60;&#x4E3A;PAT&#x5199;&#x4E00;&#x4E2A;&#x81EA;&#x52A8;&#x88C1;&#x5224;&#x7A0B;&#x5E8F;&#xFF0C;&#x5224;&#x5B9A;&#x54EA;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x201C;&#x7B54;&#x6848;&#x6B63;&#x786E;&#x201D;&#x7684;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A; &#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x3002;&#x7B2C;1&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x81EA;&#x7136;&#x6570;n (&lt;10)&#xFF0C;&#x662F;&#x9700;&#x8981;&#x68C0;&#x6D4B;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E2A;&#x6570;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#x4E0D;&#x8D85;&#x8FC7;100&#xFF0C;&#x4E14;&#x4E0D;&#x5305;&#x542B;&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A; &#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x68C0;&#x6D4B;&#x7ED3;&#x679C;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x201C;&#x7B54;&#x6848;&#x6B63;&#x786E;&#x201D;&#xFF0C;&#x5219;&#x8F93;&#x51FA;YES&#xFF0C;&#x5426;&#x5219;&#x8F93;&#x51FA;NO&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 8 PAT PAAT AAPATAA AAPAATAAAA xPATx PT Whatever APAAATAA &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; YES YES YES YES NO NO NO NO 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include &lt;iostream&gt;using namespace std;bool judge(string str) { unsigned long len; len = str.length(); if (len &lt;= 2) return false; bool book[3] = {false}; for (int i = 0; i &lt; len; i++) { if(str[i] == &apos;P&apos;) book[0] = true; else if(str[i] == &apos;A&apos;) book[1] = true; else if(str[i] == &apos;T&apos;) book[2] = true; else return false; if (str[i] == &apos;P&apos;) { for (int j = 0; j &lt; i; j++) { if (str[j] != &apos;A&apos;) return false; } if (str [i+1] != &apos;A&apos;) return false; for (int k = i + 2; k &lt; len; k++) { if (str[k] != &apos;A&apos;) { if (str[k] != &apos;T&apos;) { return false; } if ((len - 1 - k) != ((k - 1 - i) * i)) return false; for (int m = k + 1; m &lt; len; m++) { if (str[m] != &apos;A&apos;) return false; } } } } } return !(!book[0] || !book[1] || !book[2]);}int main() { int n; cin &gt;&gt; n; string s; for(int i = 0; i &lt; n; i++) { cin &gt;&gt; s; if(judge(s)) cout &lt;&lt; &quot;YES&quot; &lt;&lt; endl; else cout &lt;&lt; &quot;NO&quot; &lt;&lt; endl; } return 0;} 1004. &#x6210;&#x7EE9;&#x6392;&#x540D; (20)-PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x8BFB;&#x5165;n&#x540D;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x3001;&#x5B66;&#x53F7;&#x3001;&#x6210;&#x7EE9;&#xFF0C;&#x5206;&#x522B;&#x8F93;&#x51FA;&#x6210;&#x7EE9;&#x6700;&#x9AD8;&#x548C;&#x6210;&#x7EE9;&#x6700;&#x4F4E;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x548C;&#x5B66;&#x53F7;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A; &#x7B2C;1&#x884C;&#xFF1A;&#x6B63;&#x6574;&#x6570;n &#x7B2C;2&#x884C;&#xFF1A;&#x7B2C;1&#x4E2A;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D; &#x5B66;&#x53F7; &#x6210;&#x7EE9; &#x7B2C;3&#x884C;&#xFF1A;&#x7B2C;2&#x4E2A;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D; &#x5B66;&#x53F7; &#x6210;&#x7EE9; &#x2026; &#x2026; &#x2026; &#x7B2C;n+1&#x884C;&#xFF1A;&#x7B2C;n&#x4E2A;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D; &#x5B66;&#x53F7; &#x6210;&#x7EE9; &#x5176;&#x4E2D;&#x59D3;&#x540D;&#x548C;&#x5B66;&#x53F7;&#x5747;&#x4E3A;&#x4E0D;&#x8D85;&#x8FC7;10&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6210;&#x7EE9;&#x4E3A;0&#x5230;100&#x4E4B;&#x95F4;&#x7684;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#xFF0C;&#x8FD9;&#x91CC;&#x4FDD;&#x8BC1;&#x5728;&#x4E00;&#x7EC4;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x4E2D;&#x6CA1;&#x6709;&#x4E24;&#x4E2A;&#x5B66;&#x751F;&#x7684;&#x6210;&#x7EE9;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x5BF9;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x8F93;&#x51FA;2&#x884C;&#xFF0C;&#x7B2C;1&#x884C;&#x662F;&#x6210;&#x7EE9;&#x6700;&#x9AD8;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x548C;&#x5B66;&#x53F7;&#xFF0C;&#x7B2C;2&#x884C;&#x662F;&#x6210;&#x7EE9;&#x6700;&#x4F4E;&#x5B66;&#x751F;&#x7684;&#x59D3;&#x540D;&#x548C;&#x5B66;&#x53F7;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x95F4;&#x6709;1&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 3 Joe Math990112 89 Mike CS991301 100 Mary EE990830 95 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; Mike CS991301 Joe Math990112 1234567891011121314151617181920212223242526272829#include &lt;iostream&gt;using namespace std;int main() { int n; cin &gt;&gt; n; int max = -1, min = 101, score; string maxName, minName, maxNum, minNum, name, num; for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; name; cin &gt;&gt; num; cin &gt;&gt; score; if (max &lt; score) { max = score; maxName = name; maxNum = num; } if (min &gt; score) { min = score; minName = name; minNum = num; } } cout &lt;&lt; maxName &lt;&lt; &quot; &quot; &lt;&lt; maxNum &lt;&lt; endl &lt;&lt; minName &lt;&lt; &quot; &quot; &lt;&lt; minNum; return 0;} 1005. &#x7EE7;&#x7EED;(3n+1)&#x731C;&#x60F3; (25) PAT&#x4E59;&#x7EA7;&#x771F;&#x9898;&#x5361;&#x62C9;&#x5179;(Callatz)&#x731C;&#x60F3;&#x5DF2;&#x7ECF;&#x5728;1001&#x4E2D;&#x7ED9;&#x51FA;&#x4E86;&#x63CF;&#x8FF0;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x9898;&#x76EE;&#x91CC;&#xFF0C;&#x60C5;&#x51B5;&#x7A0D;&#x5FAE;&#x6709;&#x4E9B;&#x590D;&#x6742;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x9A8C;&#x8BC1;&#x5361;&#x62C9;&#x5179;&#x731C;&#x60F3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x91CD;&#x590D;&#x8BA1;&#x7B97;&#xFF0C;&#x53EF;&#x4EE5;&#x8BB0;&#x5F55;&#x4E0B;&#x9012;&#x63A8;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x6570;&#x3002;&#x4F8B;&#x5982;&#x5BF9;n=3&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BA1;&#x7B97;3&#x3001;5&#x3001;8&#x3001;4&#x3001;2&#x3001;1&#xFF0C;&#x5219;&#x5F53;&#x6211;&#x4EEC;&#x5BF9;n=5&#x3001;8&#x3001;4&#x3001;2&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5224;&#x5B9A;&#x5361;&#x62C9;&#x5179;&#x731C;&#x60F3;&#x7684;&#x771F;&#x4F2A;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x91CD;&#x590D;&#x8BA1;&#x7B97;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;4&#x4E2A;&#x6570;&#x5DF2;&#x7ECF;&#x5728;&#x9A8C;&#x8BC1;3&#x7684;&#x65F6;&#x5019;&#x9047;&#x5230;&#x8FC7;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;5&#x3001;8&#x3001;4&#x3001;2&#x662F;&#x88AB;3&#x201C;&#x8986;&#x76D6;&#x201D;&#x7684;&#x6570;&#x3002;&#x6211;&#x4EEC;&#x79F0;&#x4E00;&#x4E2A;&#x6570;&#x5217;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x6570;n&#x4E3A;&#x201C;&#x5173;&#x952E;&#x6570;&#x201D;&#xFF0C;&#x5982;&#x679C;n&#x4E0D;&#x80FD;&#x88AB;&#x6570;&#x5217;&#x4E2D;&#x7684;&#x5176;&#x4ED6;&#x6570;&#x5B57;&#x6240;&#x8986;&#x76D6;&#x3002; &#x73B0;&#x5728;&#x7ED9;&#x5B9A;&#x4E00;&#x7CFB;&#x5217;&#x5F85;&#x9A8C;&#x8BC1;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x9A8C;&#x8BC1;&#x5176;&#x4E2D;&#x7684;&#x51E0;&#x4E2A;&#x5173;&#x952E;&#x6570;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x5FC5;&#x518D;&#x91CD;&#x590D;&#x9A8C;&#x8BC1;&#x4F59;&#x4E0B;&#x7684;&#x6570;&#x5B57;&#x3002;&#x4F60;&#x7684;&#x4EFB;&#x52A1;&#x5C31;&#x662F;&#x627E;&#x51FA;&#x8FD9;&#x4E9B;&#x5173;&#x952E;&#x6570;&#x5B57;&#xFF0C;&#x5E76;&#x6309;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x7684;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x5B83;&#x4EEC;&#x3002; &#x8F93;&#x5165;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x8F93;&#x5165;&#x5305;&#x542B;1&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#xFF0C;&#x7B2C;1&#x884C;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;K(&lt;100)&#xFF0C;&#x7B2C;2&#x884C;&#x7ED9;&#x51FA;K&#x4E2A;&#x4E92;&#x4E0D;&#x76F8;&#x540C;&#x7684;&#x5F85;&#x9A8C;&#x8BC1;&#x7684;&#x6B63;&#x6574;&#x6570;n(1&lt;n&lt;=100)&#x7684;&#x503C;&#xFF0C;&#x6570;&#x5B57;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#x3002; &#x8F93;&#x51FA;&#x683C;&#x5F0F;&#xFF1A;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x7684;&#x8F93;&#x51FA;&#x5360;&#x4E00;&#x884C;&#xFF0C;&#x6309;&#x4ECE;&#x5927;&#x5230;&#x5C0F;&#x7684;&#x987A;&#x5E8F;&#x8F93;&#x51FA;&#x5173;&#x952E;&#x6570;&#x5B57;&#x3002;&#x6570;&#x5B57;&#x95F4;&#x7528;1&#x4E2A;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF0C;&#x4F46;&#x4E00;&#x884C;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x540E;&#x6CA1;&#x6709;&#x7A7A;&#x683C;&#x3002; &#x8F93;&#x5165;&#x6837;&#x4F8B;&#xFF1A; 6 3 5 6 7 8 11 &#x8F93;&#x51FA;&#x6837;&#x4F8B;&#xFF1A; 7 6 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include &lt;iostream&gt;#include &lt;algorithm&gt;using namespace std;int cmp(int a, int b) { return a &gt; b;}int main() { int n; cin &gt;&gt; n; int *a = new int[n]; for (int i = 0; i &lt; n; ++i) { cin &gt;&gt; a[i]; } int t; sort(a, a + n, cmp); for (int i = 0; i &lt; n; ++i) { t = a[i]; while (t != 1 &amp;&amp; t != 999) { if (t % 2 == 0) { t = t / 2; } else { t = (t * 3 + 1) / 2; } for (int j = 0; j &lt; n; ++j) { if (t == a[j] &amp;&amp; j != i) a[j] = 999; } } } sort(a, a + n, cmp); int temp = 0; for (int k = n - 1; k &gt;= 0; --k) { if (a[k] != 999) temp = k; } for (int l = temp; l &lt; n - 1; ++l) { cout &lt;&lt; a[l] &lt;&lt; &quot; &quot;; } cout &lt;&lt; a[n - 1]; delete[] a; return 0;} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>PAT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算机网络]]></title>
    <url>%2F2018%2F03%2F22%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x7B2C; &#x4E00; &#x7AE0; &#x6982;&#x8FF0;&#x672C;&#x7AE0;&#x7684;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#xFF08;&#x53EF;&#x7B80;&#x79F0;&#x4E3A;&#x7F51;&#x7EDC;&#xFF09;&#x628A;&#x8BB8;&#x591A;&#x8BA1;&#x7B97;&#x673A;&#x8FDE;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x800C;&#x4E92;&#x8054;&#x7F51;&#x5219;&#x628A;&#x8BB8;&#x591A;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x662F;&#x7F51;&#x7EDC;&#x7684;&#x7F51;&#x7EDC;&#x3002;Internet &#x7B2C;&#x662F;&#x4E16;&#x754C;&#x4E0A;&#x6700;&#x5927;&#x7684;&#x4E92;&#x8054;&#x7F51;&#x3002; &#x4EE5;&#x5C0F;&#x5199;&#x5B57;&#x6BCD; i &#x5F00;&#x59CB;&#x7684; internet &#xFF08;&#x4E92;&#x8054;&#x7F51;&#x6216;&#x4E92;&#x8FDE;&#x7F51;&#xFF09;&#x662F;&#x901A;&#x7528;&#x540D;&#x8BCD;&#xFF0C;&#x5B83;&#x6CDB;&#x6307;&#x7531;&#x591A;&#x4E2A;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x4E92;&#x8FDE;&#x800C;&#x6210;&#x7684;&#x7F51;&#x7EDC;&#x3002;&#x5728;&#x8FD9;&#x4E9B;&#x7F51;&#x7EDC;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x534F;&#x8BAE;&#xFF08;&#x5373;&#x901A;&#x4FE1;&#x89C4;&#x5219;&#xFF09;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x7684;&#x3002; &#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD; I &#x5F00;&#x59CB;&#x7684; Internet &#xFF08;&#x56E0;&#x7279;&#x7F51;&#xFF09;&#x662F;&#x4E13;&#x7528;&#x540D;&#x8BCD;&#xFF0C;&#x5B83;&#x6307;&#x5F53;&#x524D;&#x5168;&#x7403;&#x6700;&#x5927;&#x7684;&#x3001;&#x5F00;&#x653E;&#x7684;&#x3001;&#x7531;&#x4F17;&#x591A;&#x7F51;&#x7EDC;&#x76F8;&#x4E92;&#x8FDE;&#x63A5;&#x800C;&#x6210;&#x7684;&#x7279;&#x5B9A;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#xFF0C;&#x5B83;&#x91C7;&#x7528; TCP/IP &#x534F;&#x8BAE;&#x65CF;&#x4F5C;&#x4E3A;&#x901A;&#x4FE1;&#x89C4;&#x5219;&#xFF0C;&#x4E14;&#x5176;&#x524D;&#x8EAB;&#x662F;&#x7F8E;&#x56FD;&#x7684; APPANET&#x3002; &#x56E0;&#x7279;&#x7F51;&#x73B0;&#x5728;&#x91C7;&#x7528;&#x5B58;&#x50A8;&#x8F6C;&#x53D1;&#x7684;&#x5206;&#x7EC4;&#x4EA4;&#x6362;&#x6280;&#x672F;&#xFF0C;&#x4EE5;&#x53CA;&#x4E09;&#x5C42;&#x56E0;&#x7279;&#x7F51;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x8005;&#xFF08;ISP&#xFF09;&#x7ED3;&#x6784;&#x3002; &#x56E0;&#x7279;&#x7F51;&#x6309;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x53EF;&#x5212;&#x5206;&#x4E3A;&#x8FB9;&#x7F18;&#x90E8;&#x5206;&#x4E0E;&#x6838;&#x5FC3;&#x90E8;&#x5206;&#x3002;&#x4E3B;&#x673A;&#x5728;&#x7F51;&#x7EDC;&#x7684;&#x8FB9;&#x7F18;&#x90E8;&#x5206;&#xFF0C;&#x5176;&#x4F5C;&#x7528;&#x662F;&#x8FDB;&#x884C;&#x4FE1;&#x606F;&#x5904;&#x7406;&#x3002;&#x8DEF;&#x7531;&#x5668;&#x5728;&#x7F51;&#x7EDC;&#x7684;&#x6838;&#x5FC3;&#x90E8;&#x5206;&#xFF0C;&#x5176;&#x4F5C;&#x7528;&#x662F;&#x6309;&#x5B58;&#x50A8;&#x8F6C;&#x53D1;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#x4EA4;&#x6362;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x901A;&#x4FE1;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x7684;&#x8FDB;&#x7A0B;&#xFF08;&#x5373;&#x8FD0;&#x884C;&#x7740;&#x7684;&#x7A0B;&#x5E8F;&#xFF09;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x3002;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x91C7;&#x7528;&#x7684;&#x901A;&#x4FE1;&#x65B9;&#x5F0F;&#x662F;&#x5BA2;&#x6237;-&#x670D;&#x52A1;&#x5668;&#x65B9;&#x5F0F;&#x548C;&#x5BF9;&#x7B49;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;&#xFF08;P2P&#x65B9;&#x5F0F;&#xFF09;&#x3002; &#x5BA2;&#x6237;&#x548C;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x662F;&#x6307;&#x901A;&#x4FE1;&#x4E2D;&#x6240;&#x6D89;&#x53CA;&#x7684;&#x4E24;&#x4E2A;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x3002;&#x5BA2;&#x6237;&#x662F;&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x65B9;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x662F;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x65B9;&#x3002; &#x6309;&#x4F5C;&#x7528;&#x8303;&#x56F4;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x5206;&#x4E3A;&#x5E7F;&#x57DF;&#x7F51; WAN&#x3001;&#x57CE;&#x57DF;&#x7F51; MAN&#x3001;&#x5C40;&#x57DF;&#x7F51; LAN &#x548C; &#x4E2A;&#x4EBA;&#x5C40;&#x57DF;&#x7F51; PAN&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x6700;&#x5E38;&#x7528;&#x7684;&#x6027;&#x80FD;&#x6307;&#x6807;&#x662F;&#xFF1A;&#x901F;&#x7387;&#x3001;&#x5E26;&#x5BBD;&#x3001;&#x541E;&#x5410;&#x91CF;&#x3001;&#x65F6;&#x5EF6;&#xFF08;&#x53D1;&#x9001;&#x65F6;&#x5EF6;&#x3001;&#x4F20;&#x64AD;&#x65F6;&#x5EF6;&#x3001;&#x5904;&#x7406;&#x65F6;&#x5EF6;&#x3001;&#x6392;&#x961F;&#x65F6;&#x5EF6;&#xFF09;&#x3001;&#x65F6;&#x5EF6;&#x5E26;&#x5BBD;&#x79EF;&#x3001;&#x5F80;&#x8FD4;&#x65F6;&#x95F4;&#x548C;&#x4FE1;&#x9053;&#xFF08;&#x6216;&#x7F51;&#x7EDC;&#xFF09;&#x5229;&#x7528;&#x7387;&#x3002; &#x7F51;&#x7EDC;&#x534F;&#x8BAE;&#x5373;&#x534F;&#x8BAE;&#xFF0C;&#x662F;&#x4E3A;&#x8FDB;&#x884C;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x4EA4;&#x6362;&#x800C;&#x5EFA;&#x7ACB;&#x7684;&#x89C4;&#x5219;&#x3002;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x7684;&#x5404;&#x5C42;&#x53CA;&#x5176;&#x534F;&#x8BAE;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x79F0;&#x4E3A;&#x7F51;&#x7EDC;&#x7684;&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#x3002; &#x4E94;&#x5C42;&#x534F;&#x8BAE;&#x7684;&#x4F53;&#x7CFB;&#x7ED3;&#x6784;&#x7531;&#x5E94;&#x7528;&#x5C42;&#x3001;&#x8FD0;&#x8F93;&#x5C42;&#x3001;&#x7F51;&#x7EDC;&#x5C42;&#xFF08;&#x6216;&#x7F51;&#x9645;&#x5C42;&#xFF09;&#x3001;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x548C;&#x7269;&#x7406;&#x5C42;&#x7EC4;&#x6210;&#x3002;&#x8FD0;&#x8F93;&#x5C42;&#x6700;&#x91CD;&#x8981;&#x7684;&#x534F;&#x8BAE;&#x662F;&#x4F20;&#x8F93;&#x63A7;&#x5236;&#x534F;&#x8BAE; TCP &#x548C;&#x7528;&#x6237;&#x6570;&#x636E;&#x62A5;&#x534F;&#x8BAE; UDP&#xFF0C; &#x800C;&#x7F51;&#x7EDC;&#x5C42;&#x6700;&#x91CD;&#x8981;&#x7684;&#x534F;&#x8BAE;&#x662F;&#x7F51;&#x9645;&#x534F;&#x8BAE; IP&#x3002; &#x7B2C; &#x4E8C; &#x7AE0; &#x7269;&#x7406;&#x5C42;&#x672C;&#x7AE0;&#x7684;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x7269;&#x7406;&#x5C42;&#x7684;&#x4E3B;&#x8981;&#x4EFB;&#x52A1;&#x5C31;&#x662F;&#x786E;&#x5B9A;&#x4E0E;&#x4F20;&#x8F93;&#x5A92;&#x4F53;&#x7684;&#x63A5;&#x53E3;&#x6709;&#x5173;&#x7684;&#x4E00;&#x4E9B;&#x7279;&#x6027;&#xFF0C;&#x5982;&#x673A;&#x68B0;&#x7279;&#x6027;&#x3001;&#x7535;&#x6C14;&#x7279;&#x6027;&#x3001;&#x529F;&#x80FD;&#x7279;&#x6027;&#x548C;&#x8FC7;&#x7A0B;&#x7279;&#x6027;&#x3002; &#x4E00;&#x4E2A;&#x6570;&#x636E;&#x901A;&#x4FE1;&#x7CFB;&#x7EDF;&#x53EF;&#x5212;&#x5206;&#x4E3A;&#x4E09;&#x5927;&#x90E8;&#x5206;&#xFF0C;&#x5373;&#x6E90;&#x7CFB;&#x7EDF;&#x3001;&#x4F20;&#x8F93;&#x7CFB;&#x7EDF;&#x548C;&#x76EE;&#x7684;&#x7CFB;&#x7EDF;&#x3002;&#x6E90;&#x7CFB;&#x7EDF;&#x5305;&#x62EC;&#x6E90;&#x70B9;&#xFF08;&#x6216;&#x6E90;&#x7AD9;&#x3001;&#x4FE1;&#x6E90;&#xFF09;&#x548C;&#x53D1;&#x9001;&#x5668;&#xFF0C;&#x76EE;&#x7684;&#x7CFB;&#x7EDF;&#x5305;&#x62EC;&#x63A5;&#x6536;&#x5668;&#x548C;&#x7EC8;&#x70B9;&#xFF08;&#x6216;&#x76EE;&#x7684;&#x7AD9;&#x3001;&#x6216;&#x4FE1;&#x5BBF;&#xFF09;&#x3002; &#x901A;&#x4FE1;&#x7684;&#x76EE;&#x7684;&#x662F;&#x4F20;&#x9001;&#x6D88;&#x606F;&#xFF0C;&#x5982;&#x8BED;&#x97F3;&#x3001;&#x6587;&#x5B57;&#x3001;&#x56FE;&#x50CF;&#x3001;&#x89C6;&#x9891;&#x7B49;&#x90FD;&#x662F;&#x6D88;&#x606F;&#x3002;&#x6570;&#x636E;&#x662F;&#x8FD0;&#x9001;&#x6D88;&#x606F;&#x7684;&#x5B9E;&#x4F53;&#x3002;&#x4FE1;&#x53F7;&#x5219;&#x662F;&#x6570;&#x636E;&#x7684;&#x7535;&#x6C14;&#x6216;&#x7535;&#x78C1;&#x7684;&#x8868;&#x73B0;&#x3002; &#x6839;&#x636E;&#x4FE1;&#x53F7;&#x4E2D;&#x4EE3;&#x8868;&#x6D88;&#x606F;&#x7684;&#x53C2;&#x6570;&#x7684;&#x53D6;&#x503C;&#x65B9;&#x5F0F;&#x4E0D;&#x540C;&#xFF0C;&#x4FE1;&#x53F7;&#x53EF;&#x5206;&#x4E3A;&#x6A21;&#x62DF;&#x4FE1;&#x53F7;&#xFF08;&#x6216;&#x8FDE;&#x7EED;&#x4FE1;&#x53F7;&#xFF09;&#x548C;&#x6570;&#x5B57;&#x4FE1;&#x53F7;&#xFF08;&#x6216;&#x79BB;&#x6563;&#x4FE1;&#x53F7;&#xFF09;&#x3002;&#x4EE3;&#x8868;&#x6570;&#x5B57;&#x4FE1;&#x53F7;&#x4E0D;&#x540C;&#x79BB;&#x6563;&#x6570;&#x503C;&#x7684;&#x57FA;&#x672C;&#x6CE2;&#x5F62;&#x79F0;&#x4E3A;&#x7801;&#x5143;&#x3002; &#x6839;&#x636E;&#x53CC;&#x65B9;&#x4FE1;&#x606F;&#x4EA4;&#x4E92;&#x65B9;&#x5F0F;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x901A;&#x4FE1;&#x53EF;&#x4EE5;&#x5212;&#x5206;&#x4E3A;&#x5355;&#x5411;&#x901A;&#x4FE1;&#xFF08;&#x6216;&#x5355;&#x5DE5;&#x901A;&#x4FE1;&#xFF09;&#x3001;&#x53CC;&#x5411;&#x4EA4;&#x66FF;&#x901A;&#x4FE1;&#xFF08;&#x6216;&#x534A;&#x53CC;&#x5DE5;&#x901A;&#x4FE1;&#xFF09;&#x548C;&#x53CC;&#x5411;&#x540C;&#x65F6;&#x901A;&#x4FE1;&#xFF08;&#x6216;&#x5168;&#x53CC;&#x5DE5;&#x901A;&#x4FE1;&#xFF09;&#x3002; &#x6765;&#x81EA;&#x4FE1;&#x6E90;&#x7684;&#x4FE1;&#x53F7;&#x53EB;&#x505A;&#x57FA;&#x5E26;&#x4FE1;&#x53F7;&#x3002;&#x4FE1;&#x53F7;&#x8981;&#x5728;&#x4FE1;&#x9053;&#x4E0A;&#x4F20;&#x8F93;&#x5C31;&#x8981;&#x7ECF;&#x8FC7;&#x8C03;&#x5236;&#x3002;&#x8C03;&#x5236;&#x6709;&#x57FA;&#x5E26;&#x8C03;&#x5236;&#x548C;&#x5E26;&#x901A;&#x8C03;&#x5236;&#x4E4B;&#x5206;&#x3002;&#x6700;&#x57FA;&#x672C;&#x7684;&#x5E26;&#x901A;&#x8C03;&#x5236;&#x65B9;&#x6CD5;&#x6709;&#x8C03;&#x5E45;&#x3001;&#x8C03;&#x9891;&#x548C;&#x8C03;&#x76F8;&#x3002;&#x8FD8;&#x6709;&#x66F4;&#x590D;&#x6742;&#x7684;&#x8C03;&#x5236;&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x6B63;&#x4EA4;&#x632F;&#x5E45;&#x8C03;&#x5236;&#x3002; &#x8981;&#x63D0;&#x9AD8;&#x6570;&#x636E;&#x5728;&#x4FE1;&#x9053;&#x4E0A;&#x7684;&#x4F20;&#x8F93;&#x901F;&#x7387;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x66F4;&#x597D;&#x7684;&#x4F20;&#x8F93;&#x5A92;&#x4F53;&#xFF0C;&#x6216;&#x4F7F;&#x7528;&#x5148;&#x8FDB;&#x7684;&#x8C03;&#x5236;&#x6280;&#x672F;&#x3002;&#x4F46;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x901F;&#x7387;&#x4E0D;&#x53EF;&#x80FD;&#x603B;&#x662F;&#x88AB;&#x4EFB;&#x610F;&#x5730;&#x63D0;&#x9AD8;&#x3002; &#x4F20;&#x8F93;&#x5A92;&#x4F53;&#x53EF;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7C7B;&#xFF0C;&#x5373;&#x5BFC;&#x5F15;&#x578B;&#x4F20;&#x8F93;&#x5A92;&#x4F53;&#xFF08;&#x53CC;&#x7EDE;&#x7EBF;&#x3001;&#x540C;&#x8F74;&#x7535;&#x7F06;&#x6216;&#x5149;&#x7EA4;&#xFF09;&#x548C;&#x975E;&#x5BFC;&#x5F15;&#x578B;&#x4F20;&#x8F93;&#x5A92;&#x4F53;&#xFF08;&#x65E0;&#x7EBF;&#x6216;&#x7EA2;&#x5916;&#x6216;&#x5927;&#x6C14;&#x6FC0;&#x5149;&#xFF09;&#x3002; &#x5E38;&#x7528;&#x7684;&#x4FE1;&#x9053;&#x590D;&#x7528;&#x6280;&#x672F;&#x6709;&#x9891;&#x5206;&#x590D;&#x7528;&#x3001;&#x65F6;&#x5206;&#x590D;&#x7528;&#x3001;&#x7EDF;&#x8BA1;&#x65F6;&#x5206;&#x590D;&#x7528;&#x3001;&#x7801;&#x5206;&#x590D;&#x7528;&#x548C;&#x6CE2;&#x5206;&#x590D;&#x7528;&#xFF08;&#x5149;&#x7684;&#x9891;&#x5206;&#x590D;&#x7528;&#xFF09;&#x3002; &#x6700;&#x521D;&#x5728;&#x6570;&#x5B57;&#x4F20;&#x8F93;&#x7CFB;&#x7EDF;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x4F20;&#x8F93;&#x6807;&#x51C6;&#x662F;&#x8109;&#x51B2;&#x7F16;&#x7801;&#x8C03;&#x5236; PCM&#x3002;&#x73B0;&#x5728;&#x9AD8;&#x901F;&#x7684;&#x6570;&#x5B57;&#x4F20;&#x8F93;&#x7CFB;&#x7EDF;&#x4F7F;&#x7528;&#x540C;&#x6B65;&#x5149;&#x7EA4;&#x7F51; SONET&#xFF08;&#x7F8E;&#x56FD;&#x6807;&#x51C6;&#xFF09;&#x6216;&#x540C;&#x6B65;&#x6570;&#x5B57;&#x7CFB;&#x5217; SDH &#xFF08;&#x56FD;&#x9645;&#x6807;&#x51C6;&#xFF09;&#x3002; &#x7528;&#x6237;&#x5230;&#x56E0;&#x7279;&#x7F51;&#x7684;&#x5E26;&#x5BBD;&#x63A5;&#x5165;&#x65B9;&#x6CD5;&#x6709;&#x975E;&#x5BF9;&#x79F0;&#x6570;&#x5B57;&#x7528;&#x6237;&#x7EBF; ADSL&#xFF08;&#x7528;&#x6570;&#x5B57;&#x6280;&#x672F;&#x5BF9;&#x73B0;&#x6709;&#x7684;&#x6A21;&#x62DF;&#x7535;&#x8BDD;&#x7528;&#x6237;&#x7EBF;&#x8FDB;&#x884C;&#x6539;&#x9020;&#xFF09;&#x3001;&#x5149;&#x7EA4;&#x540C;&#x8F74;&#x6DF7;&#x5408;&#x7F51; HFC&#xFF08;&#x5728;&#x6709;&#x7EBF;&#x7535;&#x89C6;&#x7F51;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5F00;&#x53D1;&#x7684;&#xFF09;&#x548C; FTTx&#xFF08;&#x5373;&#x5149;&#x7EA4;&#x5230;&#x2026;&#xFF09;&#x3002; &#x4E3A;&#x4E86;&#x6709;&#x6548;&#x5730;&#x5229;&#x7528;&#x5149;&#x7EA4;&#x8D44;&#x6E90;&#xFF0C;&#x5728;&#x5149;&#x7EA4;&#x5E72;&#x7EBF;&#x548C;&#x7528;&#x6237;&#x4E4B;&#x95F4;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x65E0;&#x7F18;&#x5149;&#x7F51;&#x7EDC; PON&#x3002;&#x65E0;&#x6E90;&#x5149;&#x7F51;&#x7EDC;&#x65E0;&#x987B;&#x914D;&#x5907;&#x7535;&#x6E90;&#xFF0C;&#x5176;&#x957F;&#x671F;&#x8FD0;&#x8425;&#x6210;&#x672C;&#x548C;&#x7BA1;&#x7406;&#x6210;&#x672C;&#x90FD;&#x5F88;&#x4F4E;&#x3002;&#x6700;&#x6D41;&#x884C;&#x7684;&#x65E0;&#x6E90;&#x5149;&#x7F51;&#x7EDC;&#x662F;&#x4EE5;&#x592A;&#x7F51;&#x65E0;&#x6E90;&#x5149;&#x7F51;&#x7EDC; EPON &#x548C;&#x5409;&#x6BD4;&#x7279;&#x65E0;&#x6E90;&#x5149;&#x7F51;&#x7EDC; GPON&#x3002; &#x7B2C; &#x4E09; &#x7AE0; &#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x672C;&#x7AE0;&#x7684;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x94FE;&#x8DEF;&#x662F;&#x4ECE;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x5230;&#x76F8;&#x90BB;&#x7ED3;&#x70B9;&#x7684;&#x4E00;&#x6BB5;&#x7269;&#x7406;&#x7EBF;&#x8DEF;&#xFF0C;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5219;&#x662F;&#x5728;&#x94FE;&#x8DEF;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E9B;&#x5FC5;&#x8981;&#x7684;&#x786C;&#x4EF6;&#xFF08;&#x5982;&#x7F51;&#x7EDC;&#x9002;&#x914D;&#x5668;&#xFF09;&#x548C;&#x8F6F;&#x4EF6;&#xFF08;&#x5982;&#x534F;&#x8BAE;&#x7684;&#x5B9E;&#x73B0;&#xFF09;&#x3002; &#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x4F7F;&#x7528;&#x7684;&#x4FE1;&#x9053;&#x4E3B;&#x8981;&#x6709;&#x70B9;&#x5BF9;&#x70B9;&#x4FE1;&#x9053;&#x548C;&#x5E7F;&#x64AD;&#x4FE1;&#x9053;&#x4E24;&#x79CD;&#x3002; &#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x4F20;&#x9001;&#x7684;&#x534F;&#x8BAE;&#x6570;&#x636E;&#x5355;&#x5143;&#x662F;&#x5E27;&#x3002;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x7684;&#x4E09;&#x4E2A;&#x57FA;&#x672C;&#x95EE;&#x9898;&#x5219;&#x662F;&#xFF1A;&#x5C01;&#x88C5;&#x6210;&#x5E27;&#xFF0C;&#x900F;&#x660E;&#x4F20;&#x8F93;&#x548C;&#x5DEE;&#x9519;&#x68C0;&#x6D4B;&#x3002; &#x5FAA;&#x73AF;&#x5197;&#x4F59;&#x68C0;&#x9A8C; CRC &#x662F;&#x4E00;&#x79CD;&#x68C0;&#x9519;&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x5E27;&#x68C0;&#x9A8C;&#x5E8F;&#x5217; FCS &#x662F;&#x6DFB;&#x52A0;&#x5728;&#x6570;&#x636E;&#x540E;&#x9762;&#x7684;&#x5197;&#x4F59;&#x7801;&#x3002; &#x70B9;&#x5BF9;&#x70B9;&#x534F;&#x8BAE; PPP &#x662F;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x4F7F;&#x7528;&#x7684;&#x6700;&#x591A;&#x7684;&#x4E00;&#x79CD;&#x534F;&#x8BAE;&#xFF0C;&#x5B83;&#x7684;&#x7279;&#x70B9;&#x662F;&#xFF1A;&#x7B80;&#x5355;&#xFF1B;&#x53EA;&#x68C0;&#x6D4B;&#x5DEE;&#x9519;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7EA0;&#x6B63;&#x5DEE;&#x9519;&#xFF1B;&#x4E0D;&#x4F7F;&#x7528;&#x5E8F;&#x53F7;&#xFF0C;&#x4E5F;&#x4E0D;&#x8FDB;&#x884C;&#x6D41;&#x91CF;&#x63A7;&#x5236;&#xFF1B;&#x53EF;&#x540C;&#x65F6;&#x652F;&#x6301;&#x591A;&#x79CD;&#x7F51;&#x7EDC;&#x5C42;&#x534F;&#x8BAE;&#x3002; PPPoE &#x662F;&#x4E3A;&#x5BBD;&#x5E26;&#x4E0A;&#x7F51;&#x7684;&#x4E3B;&#x673A;&#x4F7F;&#x7528;&#x7684;&#x94FE;&#x8DEF;&#x5C42;&#x534F;&#x8BAE;&#x3002; &#x5C40;&#x57DF;&#x7F51;&#x7684;&#x4F18;&#x70B9;&#x662F;&#xFF1A;&#x5177;&#x6709;&#x5E7F;&#x64AD;&#x529F;&#x80FD;&#xFF0C;&#x4ECE;&#x4E00;&#x4E2A;&#x7AD9;&#x70B9;&#x53EF;&#x6839;&#x636E;&#x65B9;&#x4FBF;&#x5730;&#x8BBF;&#x95EE;&#x5168;&#x7F51;&#xFF1B;&#x4FBF;&#x4E8E;&#x7CFB;&#x7EDF;&#x7684;&#x6269;&#x5C55;&#x548C;&#x9010;&#x6E10;&#x5730;&#x6F14;&#x53D8;&#xFF1B;&#x63D0;&#x9AD8;&#x4E86;&#x7CFB;&#x7EDF;&#x7684;&#x53EF;&#x9760;&#x6027;&#x3001;&#x53EF;&#x7528;&#x6027;&#x548C;&#x751F;&#x5B58;&#x6027;&#x3002; &#x5171;&#x4EAB;&#x901A;&#x4FE1;&#x5A92;&#x4F53;&#x8D44;&#x6E90;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#x4E8C;&#xFF1A;&#x4E00;&#x662F;&#x9759;&#x6001;&#x5212;&#x5206;&#x4FE1;&#x9053;&#xFF08;&#x5404;&#x79CD;&#x590D;&#x7528;&#x6280;&#x672F;&#xFF09;&#xFF0C;&#x800C;&#x662F;&#x52A8;&#x6001;&#x5A92;&#x4F53;&#x501F;&#x5165;&#x63A7;&#x5236;&#xFF0C;&#x53C8;&#x79F0;&#x4E3A;&#x591A;&#x70B9;&#x63A5;&#x5165;&#xFF08;&#x968F;&#x673A;&#x63A5;&#x5165;&#x6216;&#x53D7;&#x63A7;&#x63A5;&#x5165;&#xFF09;&#x3002; IEEE 802 &#x59D4;&#x5458;&#x4F1A;&#x66FE;&#x628A;&#x5C40;&#x57DF;&#x7F51;&#x7684;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x62C6;&#x6210;&#x4E24;&#x4E2A;&#x5B50;&#x5C42;&#xFF0C;&#x5373;&#x903B;&#x8F91;&#x94FE;&#x8DEF;&#x63A7;&#x5236;&#xFF08;LLC&#xFF09;&#x5B50;&#x5C42;&#xFF08;&#x4E0E;&#x4F20;&#x8F93;&#x5A92;&#x4F53;&#x65E0;&#x5173;&#xFF09;&#x548C;&#x5A92;&#x4F53;&#x63A5;&#x5165;&#x63A7;&#x5236;&#xFF08;MAC&#xFF09;&#x5B50;&#x5C42;&#xFF08;&#x4E0E;&#x4F20;&#x8F93;&#x5A92;&#x4F53;&#x6709;&#x5173;&#xFF09;&#x3002;&#x4F46;&#x73B0;&#x5728; LLC &#x5B50;&#x5C42;&#x5DF2;&#x6210;&#x4E3A;&#x5386;&#x53F2;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x4E0E;&#x5916;&#x754C;&#x5C40;&#x57DF;&#x7F51;&#x7684;&#x901A;&#x4FE1;&#x8981;&#x901A;&#x8FC7;&#x901A;&#x4FE1;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x5B83;&#x53C8;&#x79F0;&#x4E3A;&#x7F51;&#x7EDC;&#x63A5;&#x53E3;&#x5361;&#x6216;&#x7F51;&#x5361;&#x3002;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x786C;&#x4EF6;&#x5730;&#x5740;&#x5C31;&#x5728;&#x9002;&#x914D;&#x5668;&#x7684; ROM &#x4E2D;&#x3002; &#x4EE5;&#x592A;&#x7F51;&#x91C7;&#x7528;&#x7684;&#x534F;&#x8BAE;&#x662F;&#x5177;&#x6709;&#x51B2;&#x7A81;&#x68C0;&#x6D4B;&#x7684;&#x8F7D;&#x6CE2;&#x76D1;&#x542C;&#x591A;&#x70B9;&#x63A5;&#x5165; CSMA/CD&#x3002;&#x534F;&#x8BAE;&#x7684;&#x8981;&#x70B9;&#x662F;&#xFF1A;&#x53D1;&#x9001;&#x524D;&#x5148;&#x76D1;&#x542C;&#xFF0C;&#x8FB9;&#x53D1;&#x9001;&#x8FB9;&#x76D1;&#x542C;&#xFF0C;&#x4E00;&#x65E6;&#x53D1;&#x73B0;&#x603B;&#x7EBF;&#x4E0A;&#x51FA;&#x73B0;&#x4E86;&#x78B0;&#x649E;&#xFF0C;&#x5C31;&#x7ACB;&#x5373;&#x505C;&#x6B62;&#x53D1;&#x9001;&#x3002;&#x7136;&#x540E;&#x6309;&#x7167;&#x9000;&#x907F;&#x7B97;&#x6CD5;&#x7B49;&#x5F85;&#x4E00;&#x6BB5;&#x968F;&#x673A;&#x65F6;&#x95F4;&#x540E;&#x518D;&#x6B21;&#x53D1;&#x9001;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x7AD9;&#x5728;&#x81EA;&#x5DF1;&#x53D1;&#x9001;&#x6570;&#x636E;&#x4E4B;&#x540E;&#x7684;&#x4E00;&#x5C0F;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#xFF0C;&#x5B58;&#x5728;&#x7740;&#x906D;&#x9047;&#x78B0;&#x649E;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x3002;&#x4EE5;&#x592A;&#x7F51;&#x4E0A;&#x5404;&#x7AD9;&#x70B9;&#x90FD;&#x5E73;&#x7B49;&#x5730;&#x4E89;&#x7528;&#x4EE5;&#x592A;&#x7F51;&#x4FE1;&#x9053;&#x3002; &#x76EE;&#x524D;&#x7684;&#x4EE5;&#x592A;&#x7F51;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x96C6;&#x7EBF;&#x5668;&#x7684;&#x53CC;&#x7EDE;&#x7EBF;&#x4EE5;&#x592A;&#x7F51;&#x3002;&#x8FD9;&#x79CD;&#x4EE5;&#x592A;&#x7F51;&#x5728;&#x7269;&#x7406;&#x4E0A;&#x662F;&#x661F;&#x5F62;&#x7F51;&#xFF0C;&#x4F46;&#x5728;&#x903B;&#x8F91;&#x4E0A;&#x5219;&#x662F;&#x603B;&#x7EBF;&#x5F62;&#x7F51;&#x3002;&#x96C6;&#x7EBF;&#x5668;&#x5DE5;&#x4F5C;&#x5728;&#x7269;&#x7406;&#x5C42;&#xFF0C;&#x5B83;&#x7684;&#x6BCF;&#x4E2A;&#x63A5;&#x53E3;&#x4EC5;&#x4EC5;&#x7B80;&#x5355;&#x5730;&#x8F6C;&#x53D1;&#x6BD4;&#x7279;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x78B0;&#x649E;&#x68C0;&#x6D4B;&#x3002; &#x4EE5;&#x592A;&#x7F51;&#x7684;&#x786C;&#x4EF6;&#x5730;&#x5740;&#xFF0C;&#x5373; MAC &#x5730;&#x5740;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x9002;&#x914D;&#x5668;&#x5730;&#x5740;&#x6216;&#x9002;&#x914D;&#x5668;&#x6807;&#x8BC6;&#x7B26;&#xFF0C;&#x4E0E;&#x4E3B;&#x673A;&#x6240;&#x5728;&#x5730;&#x70B9;&#x65E0;&#x5173;&#x3002;&#x6E90;&#x5730;&#x5740;&#x548C;&#x76EE;&#x7684;&#x5730;&#x5740;&#x90FD;&#x662F; 48 &#x4F4D;&#x957F;&#x3002; &#x4EE5;&#x592A;&#x7F51;&#x7684;&#x9002;&#x914D;&#x5668;&#x5177;&#x6709;&#x8FC7;&#x6EE4;&#x529F;&#x80FD;&#xFF0C;&#x5B83;&#x53EA;&#x63A5;&#x6536;&#x5355;&#x6CE2;&#x5E27;&#xFF0C;&#x6216;&#x5E7F;&#x64AD;&#x5E27;&#xFF0C;&#x6216;&#x591A;&#x64AD;&#x5E27;&#x3002; &#x4F7F;&#x7528;&#x96C6;&#x7EBF;&#x5668;&#x53EF;&#x4EE5;&#x5728;&#x7269;&#x7406;&#x5C42;&#x6269;&#x5C55;&#x4EE5;&#x592A;&#x7F51;&#xFF08;&#x6269;&#x5C55;&#x540E;&#x7684;&#x4EE5;&#x592A;&#x7F51;&#x4ECD;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#xFF09;&#x3002; &#x4F7F;&#x7528;&#x7F51;&#x6865;&#x53EF;&#x4EE5;&#x5728;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x6269;&#x5C55;&#x4EE5;&#x592A;&#x7F51;&#xFF08;&#x6269;&#x5C55;&#x540E;&#x7684;&#x4EE5;&#x592A;&#x7F51;&#x4ECD;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#xFF09;&#x3002;&#x7F51;&#x6865;&#x5728;&#x8F6C;&#x53D1;&#x5E27;&#x65F6;&#xFF0C;&#x4E0D;&#x6539;&#x53D8;&#x5E27;&#x7684;&#x6E90;&#x5730;&#x5740;&#x3002;&#x7F51;&#x6865;&#x7684;&#x4F18;&#x70B9;&#x662F;&#xFF1A;&#x5BF9;&#x5E27;&#x8FDB;&#x884C;&#x8F6C;&#x53D1;&#x548C;&#x8FC7;&#x6EE4;&#xFF0C;&#x589E;&#x5927;&#x541E;&#x5410;&#x91CF;&#xFF1B;&#x6269;&#x5927;&#x4E86;&#x7F51;&#x7EDC;&#x7269;&#x7406;&#x8303;&#x56F4;&#xFF1B;&#x63D0;&#x9AD8;&#x4E86;&#x53EF;&#x9760;&#x6027;&#xFF1B;&#x53EF;&#x4E92;&#x8FDE;&#x4E0D;&#x540C;&#x7684;&#x7269;&#x7406;&#x5C42;&#x3001;&#x4E0D;&#x540C; MAC &#x5B50;&#x5C42;&#x548C;&#x4E0D;&#x540C;&#x901F;&#x7387;&#x7684;&#x4EE5;&#x592A;&#x7F51;&#x3002;&#x7F51;&#x6865;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#xFF1A;&#x589E;&#x52A0;&#x4E86;&#x65F6;&#x5EF6;&#xFF1B;&#x53EF;&#x80FD;&#x4F1A;&#x4EA7;&#x751F;&#x5E7F;&#x64AD;&#x98CE;&#x66B4;&#x3002; &#x4EA4;&#x6362;&#x5F0F;&#x96C6;&#x7EBF;&#x5668;&#x5E38;&#x79F0;&#x4E3A;&#x4EE5;&#x592A;&#x7F51;&#x4EA4;&#x6362;&#x673A;&#x6216;&#x4E8C;&#x5C42;&#x4EA4;&#x6362;&#x673A;&#xFF08;&#x5DE5;&#x4F5C;&#x5728;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#xFF09;&#x3002;&#x5B83;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x63A5;&#x53E3;&#x7684;&#x7F51;&#x6865;&#xFF0C;&#x800C;&#x6BCF;&#x4E2A;&#x63A5;&#x53E3;&#x90FD;&#x662F;&#x76F4;&#x63A5;&#x4E0E;&#x67D0;&#x53F0;&#x5355;&#x4E3B;&#x673A;&#x6216;&#x53E6;&#x4E00;&#x4E2A;&#x96C6;&#x7EBF;&#x5668;&#x76F8;&#x8FDE;&#xFF0C;&#x4E14;&#x5DE5;&#x4F5C;&#x5728;&#x53CC;&#x5168;&#x5DE5;&#x65B9;&#x5F0F;&#x3002;&#x4EE5;&#x592A;&#x7F51;&#x4EA4;&#x6362;&#x673A;&#x80FD;&#x540C;&#x65F6;&#x8FDE;&#x901A;&#x8BB8;&#x591A;&#x5BF9;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x4F7F;&#x6BCF;&#x4E00;&#x5BF9;&#x76F8;&#x4E92;&#x901A;&#x4FE1;&#x7684;&#x4E3B;&#x673A;&#x90FD;&#x80FD;&#x60F3;&#x72EC;&#x5360;&#x901A;&#x65B0;&#x5A92;&#x4F53;&#x90A3;&#x6837;&#xFF0C;&#x65E0;&#x78B0;&#x649E;&#x7684;&#x4F20;&#x8F93;&#x6570;&#x636E;&#x3002; &#x9AD8;&#x901F;&#x4EE5;&#x592A;&#x7F51;&#x6709; 100 Mb/s &#x7684;&#x5FEB;&#x901F;&#x4EE5;&#x592A;&#x7F51;&#xFF0C;&#x5409;&#x6BD4;&#x7279;&#x4EE5;&#x592A;&#x7F51;&#x548C; 10 Gb/s &#x7684;10 &#x5409;&#x6BD4;&#x7279;&#x4EE5;&#x592A;&#x7F51;&#x3002;&#x6700;&#x8FD1;&#x8FD8;&#x53D1;&#x5C55;&#x5230; 100 &#x5409;&#x6BD4;&#x7279;&#x4EE5;&#x592A;&#x7F51;&#x3002;&#x5728;&#x5BBD;&#x5E26;&#x63A5;&#x5165;&#x6280;&#x672F;&#x4E2D;&#xFF0C;&#x4E5F;&#x5E38;&#x4F7F;&#x7528;&#x4EE5;&#x592A;&#x7F51;&#x8FDB;&#x884C;&#x63A5;&#x5165;&#x3002; &#x7B2C; &#x56DB; &#x7AE0; &#x7F51;&#x7EDC;&#x5C42;&#x672C;&#x7AE0;&#x91CD;&#x8981;&#x6982;&#x5FF5; TCP/IP &#x4F53;&#x7CFB;&#x4E2D;&#x7684;&#x7F51;&#x8DEF;&#x5C42;&#x5411;&#x4E0A;&#x53EA;&#x63D0;&#x4F9B;&#x7B80;&#x5355;&#x7075;&#x6D3B;&#x7684;&#x3001;&#x65E0;&#x8FDE;&#x63A5;&#x7684;&#x3001;&#x5C3D;&#x6700;&#x5927;&#x52AA;&#x529B;&#x4EA4;&#x4ED8;&#x7684;&#x6570;&#x636E;&#x62A5;&#x670D;&#x52A1;&#x3002;&#x7F51;&#x7EDC;&#x5C42;&#x4E0D;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x8D28;&#x91CF;&#x7684;&#x627F;&#x8BFA;&#xFF0C;&#x4E0D;&#x4FDD;&#x8BC1;&#x5206;&#x7EC4;&#x4EA4;&#x4ED8;&#x7684;&#x65F6;&#x9650;&#xFF0C;&#x6240;&#x4F20;&#x9001;&#x7684;&#x5206;&#x7EC4;&#x53EF;&#x80FD;&#x51FA;&#x9519;&#x3001;&#x4E22;&#x5931;&#x3001;&#x91CD;&#x590D;&#x548C;&#x5931;&#x5E8F;&#x3002;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x7684;&#x53EF;&#x9760;&#x6027;&#x7531;&#x8FD0;&#x8F93;&#x5C42;&#x8D1F;&#x8D23;&#x3002; IP &#x7F51;&#x662F;&#x865A;&#x62DF;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x4ECE;&#x7F51;&#x7EDC;&#x5C42;&#x4E0A;&#x770B;&#xFF0C;IP &#x7F51;&#x597D;&#x50CF;&#x662F;&#x4E00;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x3001;&#x62BD;&#x8C61;&#x7684;&#x7F51;&#x7EDC;&#xFF08;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x5F02;&#x6784;&#x7684;&#xFF09;&#x3002;IP &#x5C42;&#x62BD;&#x8C61;&#x7684;&#x4E92;&#x8054;&#x7F51;&#x5C4F;&#x853D;&#x4E86;&#x4E0B;&#x5C42;&#x7F51;&#x7EDC;&#x5F88;&#x590D;&#x6742;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x4F7F;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x4F7F;&#x7528;&#x7EDF;&#x4E00;&#x7684;&#x3001;&#x62BD;&#x8C61;&#x7684; IP &#x5730;&#x5740;&#x5904;&#x7406;&#x4E3B;&#x673A;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x95EE;&#x9898;&#x3002; &#x5728;&#x4E92;&#x8054;&#x7F51;&#x4E0A;&#x7684;&#x4EA4;&#x4ED8;&#x6709;&#x4E24;&#x79CD;&#xFF1A;&#x5728;&#x672C;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x76F4;&#x63A5;&#x4EA4;&#x4ED8;&#xFF08;&#x4E0D;&#x7ECF;&#x8FC7;&#x8DEF;&#x7531;&#x5668;&#xFF09;&#x548C;&#x5176;&#x4ED6;&#x7F51;&#x7EDC;&#x7684;&#x95F4;&#x63A5;&#x4EA4;&#x4ED8;&#xFF08;&#x7ECF;&#x8FC7;&#x81F3;&#x5C11;&#x4E00;&#x4E2A;&#x8DEF;&#x7531;&#x5668;&#xFF0C;&#x4F46;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x4E00;&#x5B9A;&#x662F;&#x76F4;&#x63A5;&#x4EA4;&#x4ED8;&#xFF09;&#x3002; &#x4E00;&#x4E2A; IP &#x5730;&#x5740;&#x5728;&#x6574;&#x4E2A;&#x56E0;&#x7279;&#x7F51;&#x8303;&#x56F4;&#x5185;&#x552F;&#x4E00;&#x7684;&#x3002;&#x5206;&#x7C7B; IP &#x5730;&#x5740;&#x5305;&#x62EC; A &#x7C7B;&#x3001;B &#x7C7B;&#x548C; C &#x7C7B;&#x5730;&#x5740;&#xFF08;&#x5355;&#x64AD;&#x5730;&#x5740;&#xFF09;&#xFF0C;&#x4EE5;&#x53CA; D &#x7C7B;&#x5730;&#x5740;&#xFF08;&#x591A;&#x64AD;&#x5730;&#x5740;&#xFF09;&#x3002;E &#x7C7B;&#x5730;&#x5740;&#x672A;&#x4F7F;&#x7528;&#x3002; &#x5206;&#x7C7B;&#x7684; IP &#x5730;&#x5740;&#x7531;&#x7F51;&#x7EDC;&#x53F7;&#x5B57;&#x6BB5;&#xFF08;&#x6307;&#x660E;&#x7F51;&#x7EDC;&#xFF09;&#x548C;&#x4E3B;&#x673A;&#x53F7;&#x5B57;&#x6BB5;&#xFF08;&#x6307;&#x660E;&#x4E3B;&#x673A;&#xFF09;&#x7EC4;&#x6210;&#x3002;&#x7F51;&#x7EDC;&#x53F7;&#x5B57;&#x6BB5;&#x6700;&#x524D;&#x9762;&#x7684;&#x7C7B;&#x522B;&#x4F4D;&#x6307;&#x660E; IP &#x5730;&#x5740;&#x7684;&#x7C7B;&#x522B;&#x3002; IP &#x5730;&#x5740;&#x662F;&#x4E00;&#x79CD;&#x5206;&#x7B49;&#x7EA7;&#x7684;&#x5730;&#x5740;&#x7ED3;&#x6784;&#x3002;IP &#x5730;&#x5740;&#x7BA1;&#x7406;&#x673A;&#x6784;&#x5728;&#x5206;&#x914D; IP &#x5730;&#x5740;&#x65F6;&#x53EA;&#x5206;&#x914D;&#x7F51;&#x7EDC;&#x53F7;&#xFF0C;&#x800C;&#x4E3B;&#x673A;&#x53F7;&#x5219;&#x7531;&#x5F97;&#x5230;&#x8BE5;&#x7F51;&#x7EDC;&#x53F7;&#x7684;&#x5355;&#x4F4D;&#x81EA;&#x884C;&#x5206;&#x914D;&#x3002;&#x8DEF;&#x7531;&#x5668;&#x4EC5;&#x6839;&#x636E;&#x76EE;&#x7684;&#x4E3B;&#x673A;&#x6240;&#x8FDE;&#x63A5;&#x7684;&#x7F51;&#x7EDC;&#x53F7;&#x8F6C;&#x53D1;&#x5206;&#x7EC4; IP &#x5730;&#x5740;&#x6807;&#x5FD7;&#x4E00;&#x53F0;&#x4E3B;&#x673A;&#xFF08;&#x6216;&#x8DEF;&#x7531;&#x5668;&#xFF09;&#x548C;&#x4E00;&#x6761;&#x94FE;&#x8DEF;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x591A;&#x5F52;&#x5C5E;&#x4E3B;&#x673A;&#x540C;&#x65F6;&#x8FDE;&#x63A5;&#x5230;&#x4E24;&#x4E2A;&#x6216;&#x66F4;&#x591A;&#x7684;&#x7F51;&#x7EDC;&#x4E0A;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x4E3B;&#x673A;&#x540C;&#x65F6;&#x5177;&#x6709;&#x4E24;&#x4E2A;&#x6216;&#x66F4;&#x591A;&#x7684; IP &#x5730;&#x5740;&#xFF0C;&#x5176;&#x7F51;&#x7EDC;&#x53F7;&#x5FC5;&#x987B;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x7531;&#x4E8E;&#x4E00;&#x4E2A;&#x8DEF;&#x7531;&#x5668;&#x81F3;&#x5C11;&#x5E94;&#x5F53;&#x8FDE;&#x63A5;&#x5230;&#x4E24;&#x4E2A;&#x7F51;&#x7EDC;&#xFF0C;&#x56E0;&#x6B64;&#x4E00;&#x4E2A;&#x8DEF;&#x7531;&#x5668;&#x81F3;&#x5C11;&#x5E94;&#x5F53;&#x6709;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684; IP &#x5730;&#x5740;&#x3002; &#x6309;&#x7167;&#x56E0;&#x7279;&#x7F51;&#x7684;&#x89C2;&#x70B9;&#xFF0C;&#x7528;&#x8F6C;&#x53D1;&#x5668;&#x6216;&#x7F51;&#x6865;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x7684;&#x82E5;&#x5E72;&#x4E2A;&#x5C40;&#x57DF;&#x7F51;&#x4ECD;&#x4E3A;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x3002;&#x6240;&#x6709;&#x5206;&#x914D;&#x5230;&#x7F51;&#x7EDC;&#x53F7;&#x7684;&#x7F51;&#x7EDC;&#xFF08;&#x4E0D;&#x7BA1;&#x662F;&#x8303;&#x56F4;&#x5F88;&#x5C0F;&#x7684;&#x5C40;&#x57DF;&#x7F51;&#xFF0C;&#x8FD8;&#x662F;&#x53EF;&#x80FD;&#x8986;&#x76D6;&#x5F88;&#x5927;&#x5730;&#x7406;&#x8303;&#x56F4;&#x7684;&#x5E7F;&#x57DF;&#x7F51;&#xFF09;&#x90FD;&#x662F;&#x5E73;&#x7B49;&#x7684;&#x3002; &#x7269;&#x7406;&#x5730;&#x5740;&#xFF08;&#x5373;&#x786C;&#x4EF6;&#x5730;&#x5740;&#xFF09;&#x662F;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x548C;&#x7269;&#x7406;&#x5C42;&#x4F7F;&#x7528;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x800C; IP &#x5730;&#x5740;&#x662F;&#x7F51;&#x7EDC;&#x5C42;&#x548C;&#x4EE5;&#x4E0A;&#x5404;&#x5C42;&#x4F7F;&#x7528;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x903B;&#x8F91;&#x5730;&#x5740;&#xFF08;&#x7528;&#x8F6F;&#x4EF6;&#x5B9E;&#x73B0;&#x7684;&#xFF09;&#xFF0C;&#x5728;&#x6570;&#x636E;&#x94FE;&#x8DEF;&#x5C42;&#x770B;&#x4E0D;&#x89C1;&#x6570;&#x636E;&#x62A5;&#x7684; IP &#x5730;&#x5740;&#x3002; IP &#x6570;&#x636E;&#x62A5;&#x5206;&#x4E3A;&#x9996;&#x90E8;&#x548C;&#x6570;&#x636E;&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x9996;&#x90E8;&#x7684;&#x524D;&#x4E00;&#x90E8;&#x5206;&#x662F;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#xFF0C;&#x5171; 20 &#x5B57;&#x8282;&#xFF0C;&#x662F;&#x6240;&#x6709; IP &#x6570;&#x636E;&#x62A5;&#x5FC5;&#x987B;&#x5177;&#x6709;&#x7684;&#xFF08;&#x6E90;&#x5730;&#x5740;&#x3001;&#x76EE;&#x7684;&#x5730;&#x5740;&#x3011;&#x603B;&#x957F;&#x5EA6;&#x7B49;&#x91CD;&#x8981;&#x5B57;&#x6BB5;&#x90FD;&#x5728;&#x56FA;&#x5B9A;&#x9996;&#x90E8;&#x4E2D;&#xFF09;&#x3002;&#x4E00;&#x4E9B;&#x957F;&#x5EA6;&#x53EF;&#x53D8;&#x7684;&#x53EF;&#x9009;&#x5B57;&#x6BB5;&#x653E;&#x5728;&#x56FA;&#x5B9A;&#x9996;&#x90E8;&#x7684;&#x540E;&#x9762;&#x3002; IP &#x9996;&#x90E8;&#x4E2D;&#x7684;&#x751F;&#x5B58;&#x65F6;&#x95F4;&#x5B57;&#x6BB5;&#x7ED9;&#x51FA;&#x4E86; IP &#x6570;&#x636E;&#x62A5;&#x5728;&#x56E0;&#x7279;&#x7F51;&#x4E2D;&#x6240;&#x80FD;&#x7ECF;&#x8FC7;&#x7684;&#x6700;&#x5927;&#x8DEF;&#x7531;&#x5668;&#x6570;&#xFF0C;&#x53EF;&#x9632;&#x6B62; IP &#x6570;&#x636E;&#x62A5;&#x5728;&#x4E92;&#x8054;&#x7F51;&#x4E2D;&#x65E0;&#x9650;&#x5236;&#x7684;&#x515C;&#x5708;&#x5B50;&#x3002; &#x5730;&#x5740;&#x89E3;&#x6790;&#x534F;&#x8BAE; ARP &#x628A; IP &#x5730;&#x5740;&#x89E3;&#x6790;&#x4E3A;&#x786C;&#x4EF6;&#x5730;&#x5740;&#xFF0C;&#x5B83;&#x89E3;&#x51B3;&#x540C;&#x4E00;&#x4E2A;&#x5C40;&#x57DF;&#x7F51;&#x4E0A;&#x7684;&#x4E3B;&#x673A;&#x6216;&#x8DEF;&#x7531;&#x5668;&#x7684; IP &#x5730;&#x5740;&#x548C;&#x786C;&#x4EF6;&#x5730;&#x5740;&#x7684;&#x6620;&#x5C04;&#x95EE;&#x9898;&#x3002;ARP &#x7684;&#x544A;&#x8BC9;&#x7F13;&#x5B58;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x901A;&#x4FE1;&#x91CF;&#x3002; &#x5728;&#x56E0;&#x7279;&#x7F51;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x4EC5;&#x6839;&#x636E;&#x786C;&#x4EF6;&#x5730;&#x5740;&#x5BFB;&#x627E;&#x5230;&#x5728;&#x67D0;&#x4E2A;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x67D0;&#x53F0;&#x4E3B;&#x673A;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4ECE; IP &#x5730;&#x5740;&#x5230;&#x786C;&#x4EF6;&#x5730;&#x5740;&#x7684;&#x89E3;&#x6790;&#x662F;&#x975E;&#x5E38;&#x5FC5;&#x8981;&#x7684;&#x3002; &#x65E0;&#x5206;&#x7C7B;&#x57DF;&#x95F4;&#x8DEF;&#x7531;&#x9009;&#x62E9; CIDR &#x662F;&#x89E3;&#x51B3;&#x76EE;&#x524D; IP &#x5730;&#x5740;&#x7D27;&#x7F3A;&#x7684;&#x4E00;&#x4E2A;&#x597D;&#x65B9;&#x6CD5;&#x3002;CIDR &#x8BB0;&#x6CD5;&#x628A; IP &#x5730;&#x5740;&#x540E;&#x9762;&#x52A0;&#x4E0A;&#x659C;&#x7EBF; &#x201C;/&#x201D;&#xFF0C;&#x7136;&#x540E;&#x5199;&#x4E0A;&#x524D;&#x7F00;&#x6240;&#x5360;&#x7684;&#x4F4D;&#x6570;&#x3002;&#x524D;&#x7F00;&#xFF08;&#x6216;&#x7F51;&#x7EDC;&#x524D;&#x7F00;&#xFF09;&#x7528;&#x6765;&#x6307;&#x540D;&#x7F51;&#x7EDC;&#xFF0C;&#x524D;&#x7F00;&#x540E;&#x9762;&#x7684;&#x90E8;&#x5206;&#x662F;&#x540E;&#x7F00;&#xFF0C;&#x7528;&#x6765;&#x6307;&#x660E;&#x4E3B;&#x673A;&#x3002;CIDR &#x628A;&#x524D;&#x7F00;&#x90FD;&#x76F8;&#x540C;&#x7684;&#x8FDE;&#x7EED;&#x7684; IP &#x5730;&#x5740;&#x7EC4;&#x6210;&#x4E00;&#x4E2A; &#x201C;CIDR &#x5730;&#x5740;&#x5757;&#x201D;&#x3002;IP &#x5730;&#x5740;&#x7684;&#x5206;&#x914D;&#x90FD;&#x4EE5; CIDR &#x5730;&#x5740;&#x5757;&#x4E3A;&#x5355;&#x4F4D;&#x3002; CIDR &#x7684; 32 &#x4F4D;&#x5730;&#x5740;&#x63A9;&#x7801;&#xFF08;&#x6216;&#x5B50;&#x7F51;&#x63A9;&#x7801;&#xFF09;&#x7531;&#x4E00;&#x4E32; 1 &#x548C;&#x4E00;&#x4E32; 0 &#x7EC4;&#x6210;&#xFF0C;&#x800C; 1 &#x7684;&#x4E2A;&#x6570;&#x5C31;&#x662F;&#x524D;&#x7F00;&#x7684;&#x957F;&#x5EA6;&#x3002;&#x53EA;&#x8981;&#x628A; IP &#x5730;&#x5740;&#x548C;&#x5730;&#x5740;&#x63A9;&#x7801;&#x9010;&#x4F4D;&#x8FDB;&#x884C; &#x201C;&#x903B;&#x8F91;&#x4E0E;&#xFF08;AND&#xFF09;&#x201D;&#x8FD0;&#x7B97;&#xFF0C;&#x5C31;&#x5F88;&#x5BB9;&#x6613;&#x5F97;&#x51FA;&#x7F51;&#x7EDC;&#x5730;&#x5740;&#x3002;A &#x7C7B;&#x5730;&#x5740;&#x7684;&#x9ED8;&#x8BA4;&#x5730;&#x5740;&#x63A9;&#x7801;&#x662F; 255.0.0.0 &#x3002;B &#x7C7B;&#x5730;&#x5740;&#x7684;&#x9ED8;&#x8BA4;&#x5730;&#x5740;&#x63A9;&#x7801;&#x662F; 255.255.0.0 &#x3002;C &#x7C7B;&#x5730;&#x5740;&#x7684;&#x9ED8;&#x8BA4;&#x5730;&#x5740;&#x63A9;&#x7801;&#x662F; 255.255.255.0 &#x3002; &#x8DEF;&#x7531;&#x805A;&#x5408;&#xFF08;&#x628A;&#x8BB8;&#x591A;&#x524D;&#x7F00;&#x76F8;&#x540C;&#x7684;&#x5730;&#x5740;&#x7528;&#x4E00;&#x4E2A;&#x6765;&#x4EE3;&#x66FF;&#xFF09;&#x6709;&#x5229;&#x4E8E;&#x51CF;&#x5C11;&#x8DEF;&#x7531;&#x8868;&#x4E2D;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x51CF;&#x5C11;&#x8DEF;&#x7531;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x4FE1;&#x606F;&#x7684;&#x4EA4;&#x6362;&#xFF0C;&#x4ECE;&#x800C;&#x63D0;&#x9AD8;&#x4E86;&#x6574;&#x4E2A;&#x56E0;&#x7279;&#x7F51;&#x7684;&#x6027;&#x80FD;&#x3002; &#x201C;&#x8F6C;&#x53D1;&#x201D; &#x548C; &#x201C;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x201D; &#x6709;&#x533A;&#x522B;&#x3002;&#x201C;&#x8F6C;&#x53D1;&#x201D; &#x662F;&#x5355;&#x4E2A;&#x8DEF;&#x7531;&#x5668;&#x7684;&#x52A8;&#x4F5C;&#x3002;&#x201C;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x201D; &#x662F;&#x8BB8;&#x591A;&#x8DEF;&#x7531;&#x5668;&#x5171;&#x540C;&#x534F;&#x4F5C;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x8FD9;&#x4E9B;&#x8DEF;&#x7531;&#x5668; &#x76F8;&#x4E92;&#x4EA4;&#x6362;&#x4FE1;&#x606F;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x751F;&#x6210;&#x8DEF;&#x7531;&#x8868;&#xFF0C;&#x518D;&#x4ECE;&#x8DEF;&#x7531;&#x8868;&#x5BFC;&#x51FA;&#x8F6C;&#x53D1;&#x8868;&#x3002;&#x82E5;&#x91C7;&#x7528;&#x81EA;&#x9002;&#x5E94;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x7B97;&#x6CD5;&#xFF0C;&#x5219;&#x5F53;&#x7F51;&#x7EDC;&#x62D3;&#x6251;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x8DEF;&#x7531;&#x8868;&#x548C;&#x8F6C;&#x53D1;&#x8868;&#x90FD;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x66F4;&#x65B0;&#x3002;&#x5728;&#x8BB8;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x8003;&#x8651;&#x8F6C;&#x53D1;&#x8868;&#x548C;&#x8DEF;&#x7531;&#x8868;&#x7684;&#x533A;&#x522B;&#xFF0C;&#x800C;&#x90FD;&#x4F7F;&#x7528;&#x8DEF;&#x7531;&#x8868;&#x8FD9;&#x4E00;&#x540D;&#x8BCD;&#x3002; &#x81EA;&#x6CBB;&#x7CFB;&#x7EDF;&#xFF08;AS&#xFF09;&#x5C31;&#x662F;&#x5728;&#x5355;&#x4E00;&#x7684;&#x6280;&#x672F;&#x7BA1;&#x7406;&#x4E0B;&#x7684;&#x4E00;&#x7EC4;&#x8DEF;&#x7531;&#x5668;&#x3002;&#x4E00;&#x4E2A;&#x81EA;&#x6CBB;&#x7CFB;&#x7EDF;&#x5BF9;&#x5176;&#x4ED6;&#x81EA;&#x6CBB;&#x7CFB;&#x7EDF;&#x8868;&#x73B0;&#x51FA;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x4E00;&#x7684;&#x548C;&#x4E00;&#x81F4;&#x7684;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x7B56;&#x7565;&#x3002; &#x8DEF;&#x7531;&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x6709;&#x4E24;&#x5927;&#x7C7B;&#xFF1A;&#x5185;&#x90E8;&#x7F51;&#x5173;&#x534F;&#x8BAE;&#xFF08;&#x6216;&#x81EA;&#x6CBB;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x7684;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x534F;&#x8BAE;&#xFF09;&#xFF0C;&#x5982; RIP &#x548C; OSPF&#xFF1B;&#x5916;&#x90E8;&#x7F51;&#x5173;&#x534F;&#x8BAE;&#xFF08;&#x6216;&#x81EA;&#x6CBB;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x7684;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x534F;&#x8BAE;&#xFF09;&#xFF0C;&#x5982; BGP-4&#x3002; RIP &#x662F;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x57FA;&#x4E8E;&#x8DDD;&#x79BB;&#x5411;&#x91CF;&#x7684;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x534F;&#x8BAE;&#xFF0C;&#x53EA;&#x9002;&#x7528;&#x4E8E;&#x5C0F;&#x578B;&#x4E92;&#x8054;&#x7F51;&#x3002;RIP &#x6309;&#x56FA;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x4E0E;&#x76F8;&#x90BB;&#x8DEF;&#x7531;&#x5668;&#x4EA4;&#x6362;&#x4FE1;&#x606F;&#x3002;&#x4EA4;&#x6362;&#x4FE1;&#x606F;&#x662F;&#x81EA;&#x5DF1;&#x5F53;&#x524D;&#x7684;&#x8DEF;&#x7531;&#x8868;&#xFF0C;&#x5373;&#x5230;&#x8FBE;&#x672C;&#x81EA;&#x6CBB;&#x7CFB;&#x7EDF;&#x4E2D;&#x6240;&#x6709;&#x7F51;&#x7EDC;&#x7684;&#xFF08;&#x6700;&#x77ED;&#xFF09;&#x8DDD;&#x79BB;&#xFF0C;&#x4EE5;&#x53CA;&#x5230;&#x6BCF;&#x4E2A;&#x7F51;&#x7EDC;&#x5E94;&#x7ECF;&#x8FC7;&#x7684;&#x4E0B;&#x4E00;&#x8DF3;&#x8DEF;&#x7531;&#x5668;&#x3002; OSPF &#x662F;&#x5206;&#x5E03;&#x5F0F;&#x7684;&#x94FE;&#x8DEF;&#x72B6;&#x6001;&#x534F;&#x8BAE;&#xFF0C;&#x9002;&#x7528;&#x4E8E;&#x5927;&#x578B;&#x4E92;&#x8054;&#x7F51;&#x3002;OSPF &#x53EA;&#x5728;&#x94FE;&#x8DEF;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x624D;&#x7528;&#x5411;&#x672C;&#x81EA;&#x6CBB;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x8DEF;&#x7531;&#x5668;&#xFF0C;&#x7528;&#x6D2A;&#x6CDB;&#x6CD5;&#x53D1;&#x9001;&#x4E0E;&#x672C;&#x8DEF;&#x7531;&#x5668;&#x76F8;&#x90BB;&#x7684;&#x6240;&#x6709;&#x8DEF;&#x7531;&#x5668;&#x7684;&#x94FE;&#x8DEF;&#x72B6;&#x6001;&#x4FE1;&#x606F;&#x3002;&#x201C;&#x94FE;&#x8DEF;&#x72B6;&#x6001;&#x201D; &#x6307;&#x660E;&#x672C;&#x8DEF;&#x7531;&#x5668;&#x90FD;&#x548C;&#x54EA;&#x4E9B;&#x8DEF;&#x7531;&#x5668;&#x76F8;&#x90BB;&#xFF0C;&#x4EE5;&#x53CA;&#x8BE5;&#x94FE;&#x8DEF;&#x7684; &#x201C;&#x5EA6;&#x91CF;&#x201D;&#x3002;&#x201C;&#x5EA6;&#x91CF;&#x201D; &#x53EF;&#x8868;&#x793A;&#x8D39;&#x7528;&#x3001;&#x8DDD;&#x79BB;&#x3001;&#x65F6;&#x5EF6;&#x3001;&#x5E26;&#x5BBD;&#x7B49;&#xFF0C;&#x53EF;&#x7EDF;&#x79F0;&#x4E3A; &#x201C;&#x4EE3;&#x4EF7;&#x201D;&#x3002;&#x6240;&#x6709;&#x7684;&#x8DEF;&#x7531;&#x5668;&#x6700;&#x7EC8;&#x90FD;&#x80FD;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x5168;&#x7F51;&#x7684;&#x62D3;&#x6251;&#x7ED3;&#x6784;&#x56FE;&#x3002; BGP-4 &#x662F;&#x4E0D;&#x540C; AS &#x7684;&#x8DEF;&#x7531;&#x5668;&#x4E4B;&#x95F4;&#x4EA4;&#x6362;&#x8DEF;&#x7531;&#x4FE1;&#x606F;&#x7684;&#x534F;&#x8BAE;&#xFF0C;&#x662F;&#x4E00;&#x79CD;&#x8DEF;&#x5F84;&#x5411;&#x91CF;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x3002;BGP &#x529B;&#x6C42;&#x5BFB;&#x627E;&#x4E00;&#x6761;&#x80FD;&#x591F;&#x5230;&#x8FBE;&#x76EE;&#x7684;&#x7F51;&#x7EDC;&#xFF08;&#x53EF;&#x8FBE;&#xFF09;&#x4E14;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x8DEF;&#x7531;&#xFF08;&#x4E0D;&#x515C;&#x5708;&#x5B50;&#xFF09;&#xFF0C;&#x800C;&#x5E76;&#x975E;&#x8981;&#x5BFB;&#x627E;&#x4E00;&#x6761;&#x6700;&#x4F73;&#x8DEF;&#x7531;&#x3002; &#x7F51;&#x9645;&#x63A7;&#x5236;&#x62A5;&#x6587;&#x534F;&#x8BAE; ICMP &#x662F; IP &#x5C42;&#x7684;&#x534F;&#x8BAE;&#x3002;ICMP &#x62A5;&#x6587;&#x4F5C;&#x4E3A; IP &#x6570;&#x636E;&#x62A5;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x52A0;&#x4E0A;&#x9996;&#x90E8;&#x540E;&#x7EC4;&#x6210; IP &#x6570;&#x636E;&#x62A5;&#x53D1;&#x9001;&#x51FA;&#x53BB;&#x3002;&#x4F7F;&#x7528; ICMP &#x5E76;&#x4E0D;&#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x53EF;&#x9760;&#x4F20;&#x8F93;&#x3002;ICMP &#x5141;&#x8BB8;&#x4E3B;&#x673A;&#x6216;&#x8DEF;&#x7531;&#x5668;&#x62A5;&#x544A;&#x5DEE;&#x9519;&#x60C5;&#x51B5;&#x548C;&#x63D0;&#x4F9B;&#x6709;&#x5173;&#x5F02;&#x5E38;&#x60C5;&#x51B5;&#x7684;&#x62A5;&#x544A;&#x3002;ICMP &#x62A5;&#x6587;&#x7684;&#x79CD;&#x7C7B;&#x6709;&#x4E24;&#x79CD;&#xFF0C;&#x5373; ICMP &#x5DEE;&#x9519;&#x62A5;&#x544A;&#x62A5;&#x6587;&#x548C; ICMP &#x8BE2;&#x95EE;&#x62A5;&#x6587;&#x3002; ICMP &#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x5E94;&#x7528;&#x5C31;&#x662F;&#x5206;&#x7EC4;&#x7F51;&#x95F4;&#x63A2;&#x6D4B; PING&#xFF0C;&#x7528;&#x6765;&#x6D4B;&#x8BD5;&#x4E24;&#x53F0;&#x4E3B;&#x673A;&#x4E4B;&#x95F4;&#x7684;&#x8FDE;&#x901A;&#x6027;&#x3002;PING &#x4F7F;&#x7528;&#x4E86; ICMP &#x56DE;&#x9001;&#x8BF7;&#x6C42;&#x4E0E;&#x56DE;&#x9001;&#x56DE;&#x7B54;&#x62A5;&#x6587;&#x3002; &#x4E0E;&#x5355;&#x64AD;&#x76F8;&#x6BD4;&#xFF0C;&#x5728;&#x4E00;&#x5BF9;&#x591A;&#x7684;&#x901A;&#x4FE1;&#x4E2D;&#xFF0C; IP &#x591A;&#x64AD;&#x53EF;&#x5927;&#x5927;&#x8282;&#x7EA6;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#x3002;IP &#x591A;&#x64AD;&#x4F7F;&#x7528; D &#x7C7B; IP &#x5730;&#x5740;&#x3002;IP &#x591A;&#x64AD;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x7F51;&#x9645;&#x7EC4;&#x7EC7;&#x7BA1;&#x7406;&#x534F;&#x8BAE; IGMP &#x548C;&#x591A;&#x64AD;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x3002; &#x865A;&#x62DF;&#x4E13;&#x7528;&#x7F51; VPN &#x5229;&#x7528;&#x516C;&#x7528;&#x7684;&#x56E0;&#x7279;&#x7F51;&#x4F5C;&#x4E3A;&#x672C;&#x673A;&#x6784;&#x5404;&#x4E13;&#x7528;&#x7F51;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x8F7D;&#x4F53;&#x3002;VPN &#x5185;&#x90E8;&#x4F7F;&#x7528;&#x56E0;&#x7279;&#x7F51;&#x7684;&#x4E13;&#x7528;&#x5730;&#x5740;&#x3002;&#x4E00;&#x4E2A; VPN &#x81F3;&#x5C11;&#x8981;&#x6709;&#x4E00;&#x4E2A;&#x8DEF;&#x7531;&#x5668;&#x5177;&#x6709;&#x5408;&#x6CD5;&#x7684;&#x5168;&#x7403; IP &#x5730;&#x5740;&#xFF0C;&#x8FD9;&#x6837;&#x624D;&#x80FD;&#x548C;&#x672C;&#x7CFB;&#x7EDF;&#x7684;&#x53E6;&#x4E00;&#x4E2A; VPN &#x901A;&#x8FC7;&#x56E0;&#x7279;&#x7F51;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x3002;&#x6240;&#x6709;&#x901A;&#x8FC7;&#x56E0;&#x7279;&#x7F51;&#x4F20;&#x9001;&#x7684;&#x6570;&#x636E;&#x90FD;&#x5FC5;&#x987B;&#x52A0;&#x5BC6;&#x3002; &#x4F7F;&#x7528;&#x7F51;&#x7EDC;&#x5730;&#x5740;&#x8F6C;&#x6362; NAT &#x6280;&#x672F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x4E13;&#x7528;&#x7F51;&#x7EDC;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x4E13;&#x7528; IP &#x5730;&#x5740;&#xFF0C;&#x800C;&#x4EC5;&#x5728;&#x8FDE;&#x63A5;&#x5230;&#x56E0;&#x7279;&#x7F51;&#x7684;&#x8DEF;&#x7531;&#x5668;&#x4F7F;&#x7528;&#x5168;&#x7403; IP &#x5730;&#x5740;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x5927;&#x5927;&#x8282;&#x7EA6;&#x4E86;&#x5B9D;&#x8D35;&#x7684; IP &#x5730;&#x5740;&#x3002; &#x7B2C; &#x4E94; &#x7AE0; &#x8FD0;&#x8F93;&#x5C42;&#x672C;&#x7AE0;&#x7684;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x8FD0;&#x8F93;&#x5C42;&#x63D0;&#x4F9B;&#x63D0;&#x4F9B;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x95F4;&#x7684;&#x903B;&#x8F91;&#x901A;&#x4FE1;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8FD0;&#x8F93;&#x5C42;&#x7684;&#x901A;&#x4FE1;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x5728;&#x4E24;&#x4E2A;&#x8FD0;&#x8F93;&#x5C42;&#x4E4B;&#x95F4;&#x76F4;&#x63A5;&#x4F20;&#x9001;&#x6570;&#x636E;&#x3002;&#x8FD0;&#x8F93;&#x5C42;&#x5411;&#x5E94;&#x7528;&#x5C42;&#x5C4F;&#x853D;&#x4E86;&#x4E0B;&#x9762;&#x7F51;&#x7EDC;&#x7684;&#x7EC6;&#x8282;&#xFF08;&#x5982;&#x7F51;&#x7EDC;&#x62D3;&#x6251;&#x3001;&#x6240;&#x91C7;&#x7528;&#x7684;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x7B49;&#xFF09;&#xFF0C;&#x5B83;&#x4F7F;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x770B;&#x89C1;&#x7684;&#x5C31;&#x662F;&#x597D;&#x50CF;&#x5728;&#x4E24;&#x4E2A;&#x8FD0;&#x8F93;&#x5C42;&#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x6709;&#x4E00;&#x6761;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x903B;&#x8F91;&#x901A;&#x4FE1;&#x4FE1;&#x9053;&#x3002; &#x7F51;&#x7EDC;&#x5C42;&#x4E3A;&#x4E3B;&#x673A;&#x4E4B;&#x95F4;&#x63D0;&#x4F9B;&#x903B;&#x8F91;&#x901A;&#x4FE1;&#xFF0C;&#x800C;&#x8FD0;&#x8F93;&#x5C42;&#x4E3A;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x63D0;&#x4F9B;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x903B;&#x8F91;&#x901A;&#x4FE1;&#x3002; &#x8FD0;&#x8F93;&#x5C42;&#x6709;&#x4E24;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x534F;&#x8BAE;&#xFF1A;TCP &#x548C; UDP&#x3002;&#x5B83;&#x4EEC;&#x90FD;&#x6709;&#x590D;&#x7528;&#x548C;&#x5206;&#x7528;&#xFF0C;&#x4EE5;&#x53CA;&#x68C0;&#x9519;&#x7684;&#x529F;&#x80FD;&#x3002;&#x5F53;&#x8FD0;&#x8F93;&#x5C42;&#x91C7;&#x7528;&#x9762;&#x5411;&#x8FDE;&#x63A5;&#x7684; TCP &#x534F;&#x8BAE;&#x65F6;&#xFF0C;&#x5C3D;&#x7BA1;&#x4E0B;&#x9762;&#x7684;&#x7F51;&#x7EDC;&#x5C42;&#x662F;&#x4E0D;&#x53EF;&#x9760;&#x7684;&#xFF08;&#x53EA;&#x63D0;&#x4F9B;&#x5C3D;&#x6700;&#x5927;&#x52AA;&#x529B;&#x670D;&#x52A1;&#xFF09;&#xFF0C;&#x4F46;&#x8FD9;&#x79CD;&#x903B;&#x8F91;&#x901A;&#x4FE1;&#x4FE1;&#x9053;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x6761;&#x5168;&#x53CC;&#x5DE5;&#x901A;&#x4FE1;&#x7684;&#x53EF;&#x9760;&#x4FE1;&#x9053;&#x3002;&#x5F53;&#x8FD0;&#x8F93;&#x5C42;&#x91C7;&#x7528;&#x65E0;&#x8FDE;&#x63A5;&#x7684; UDP &#x534F;&#x8BAE;&#x65F6;&#xFF0C;&#x8FD9;&#x79CD;&#x903B;&#x8F91;&#x901A;&#x4FE1;&#x4FE1;&#x9053;&#x4ECD;&#x7136;&#x662F;&#x4E00;&#x6761;&#x4E0D;&#x53EF;&#x9760;&#x4FE1;&#x9053;&#x3002; &#x8FD0;&#x8F93;&#x5C42;&#x7528;&#x4E00;&#x4E2A; 16 &#x4F4D;&#x7AEF;&#x53E3;&#x53F7;&#x6765;&#x6807;&#x5FD7;&#x4E00;&#x4E2A;&#x7AEF;&#x53E3;&#x3002;&#x7AEF;&#x53E3;&#x53F7;&#x53EA;&#x5177;&#x6709;&#x672C;&#x5730;&#x610F;&#x4E49;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x6807;&#x5FD7;&#x672C;&#x8BA1;&#x7B97;&#x673A;&#x5E94;&#x7528;&#x5C42;&#x4E2D;&#x7684;&#x5404;&#x4E2A;&#x8FDB;&#x7A0B;&#x5728;&#x548C;&#x8FD0;&#x8F93;&#x5C42;&#x4EA4;&#x4E92;&#x65F6;&#x7684;&#x5C42;&#x95F4;&#x63A5;&#x53E3;&#x3002;&#x5728;&#x56E0;&#x7279;&#x7F51;&#x7684;&#x4E0D;&#x540C;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#xFF0C;&#x76F8;&#x540C;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#x662F;&#x6CA1;&#x6709;&#x5173;&#x8054;&#x7684;&#x3002; &#x4E24;&#x53F0;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x7684;&#x8FDB;&#x7A0B;&#x8981;&#x4E92;&#x76F8;&#x901A;&#x4FE1;&#xFF0C;&#x4E0D;&#x4EC5;&#x8981;&#x77E5;&#x9053;&#x5BF9;&#x65B9;&#x7684; IP &#x5730;&#x5740;&#xFF08;&#x4E3A;&#x4E86;&#x627E;&#x5230;&#x5BF9;&#x65B9;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#xFF09;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x8981;&#x77E5;&#x9053;&#x5BF9;&#x65B9;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#xFF08;&#x4E3A;&#x4E86;&#x627E;&#x5230;&#x5BF9;&#x65B9;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x7684;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#xFF09;&#x3002; &#x8FD0;&#x8F93;&#x5C42;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#x5206;&#x4E3A;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x4F7F;&#x7528;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#xFF08;0 &#xFF5E; 1023 &#x6307;&#x6D3E;&#x7ED9;&#x719F;&#x77E5;&#x7AEF;&#x53E3;&#xFF0C;1024 &#xFF5E; 49151 &#x662F;&#x767B;&#x8BB0;&#x7AEF;&#x53E3;&#x53F7;&#xFF09;&#x548C;&#x5BA2;&#x6237;&#x7AEF;&#x6682;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#xFF08;49152 &#xFF5E; 65535&#xFF09;&#x3002; UDP &#x7684;&#x4E3B;&#x8981;&#x7279;&#x70B9;&#x662F;&#xFF1A;&#xFF08;1&#xFF09;&#x65E0;&#x8FDE;&#x63A5;&#xFF1B;&#xFF08;2&#xFF09;&#x5C3D;&#x6700;&#x5927;&#x52AA;&#x529B;&#x4EA4;&#x4ED8;&#xFF1B;&#xFF08;3&#xFF09;&#x9762;&#x5411;&#x62A5;&#x6587;&#xFF1B;&#xFF08;4&#xFF09;&#x65E0;&#x62E5;&#x585E;&#x63A7;&#x5236;&#xFF1B;&#xFF08;5&#xFF09;&#x652F;&#x6301;&#x4E00;&#x5BF9;&#x4E00;&#x3001;&#x4E00;&#x5BF9;&#x591A;&#x3001;&#x591A;&#x5BF9;&#x4E00;&#x548C;&#x591A;&#x5BF9;&#x591A;&#x7684;&#x4EA4;&#x4E92;&#x901A;&#x4FE1;&#xFF1B;(6&#xFF09;&#x9996;&#x90E8;&#x5F00;&#x9500;&#x5C0F;&#xFF08;&#x53EA;&#x6709;&#x56DB;&#x4E2A;&#x5B57;&#x6BB5;&#xFF1A;&#x6E90;&#x7AEF;&#x53E3;&#x3001;&#x76EE;&#x7684;&#x7AEF;&#x53E3;&#x3001;&#x957F;&#x5EA6;&#x3001;&#x68C0;&#x9A8C;&#x548C;&#xFF09;&#x3002; TCP &#x7684;&#x4E3B;&#x8981;&#x7279;&#x70B9;&#x662F;&#xFF1A;&#xFF08;1&#xFF09;&#x9762;&#x5411;&#x8FDE;&#x63A5;&#xFF1B;&#xFF08;2&#xFF09;&#x6BCF;&#x4E00;&#x6761; TCP &#x8FDE;&#x63A5;&#x53EA;&#x80FD;&#x662F;&#x70B9;&#x5BF9;&#x70B9;&#x7684;&#xFF08;&#x4E00;&#x5BF9;&#x4E00;&#xFF09;&#xFF1B;&#xFF08;3&#xFF09;&#x63D0;&#x4F9B;&#x53EF;&#x9760;&#x4EA4;&#x4ED8;&#x7684;&#x670D;&#x52A1;&#xFF1B;&#xFF08;4&#xFF09;&#x63D0;&#x4F9B;&#x5168;&#x53CC;&#x5DE5;&#x901A;&#x4FE1;&#xFF1B;&#xFF08;5&#xFF09;&#x9762;&#x5411;&#x5B57;&#x8282;&#x6D41;&#x3002; TCP &#x7528;&#x4E3B;&#x673A;&#x7684; IP &#x5730;&#x5740;&#x52A0;&#x4E0A;&#x4E3B;&#x673A;&#x4E0A;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#x4F5C;&#x4E3A; TCP &#x8FDE;&#x63A5;&#x7684;&#x7AEF;&#x70B9;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x7AEF;&#x70B9;&#x5C31;&#x53EB;&#x505A;&#x5957;&#x63A5;&#x5B57;&#xFF08;Socket&#xFF09;&#x6216;&#x63D2;&#x53E3;&#x3002;&#x5957;&#x63A5;&#x5B57;&#x7528;&#xFF08;IP &#x5730;&#x5740;&#xFF1A;&#x7AEF;&#x53E3;&#x53F7;&#xFF09;&#x6765;&#x8868;&#x793A;&#x3002; &#x505C;&#x6B62;&#x7B49;&#x5F85;&#x534F;&#x8BAE;&#x80FD;&#x591F;&#x5728;&#x4E0D;&#x53EF;&#x9760;&#x7684;&#x4F20;&#x8F93;&#x7F51;&#x7EDC;&#x4E0A;&#x5B9E;&#x73B0;&#x53EF;&#x9760;&#x7684;&#x901A;&#x4FE1;&#x3002;&#x6BCF;&#x53D1;&#x9001;&#x5B8C;&#x4E00;&#x4E2A;&#x5206;&#x7EC4;&#x5C31;&#x505C;&#x6B62;&#x53D1;&#x9001;&#xFF0C;&#x7B49;&#x5F85;&#x5BF9;&#x65B9;&#x786E;&#x8BA4;&#x3002;&#x5728;&#x6536;&#x5230;&#x786E;&#x8BA4;&#x540E;&#x518D;&#x53D1;&#x9001;&#x4E0B;&#x4E00;&#x4E2A;&#x5206;&#x7EC4;&#x3002;&#x5206;&#x7EC4;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7F16;&#x53F7;&#x3002; &#x8D85;&#x65F6;&#x91CD;&#x4F20;&#x662F;&#x6307;&#x53EA;&#x8981;&#x8D85;&#x8FC7;&#x4E86;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x4ECD;&#x7136;&#x6CA1;&#x6709;&#x6536;&#x5230;&#x786E;&#x8BA4;&#xFF0C;&#x5C31;&#x91CD;&#x4F20;&#x524D;&#x9762;&#x53D1;&#x9001;&#x8FC7;&#x7684;&#x7684;&#x5206;&#x7EC4;&#xFF08;&#x8BA4;&#x4E3A;&#x521A;&#x624D;&#x53D1;&#x9001;&#x7684;&#x5206;&#x7EC4;&#x4E22;&#x5931;&#x4E86;&#xFF09;&#x3002;&#x56E0;&#x6B64;&#x6BCF;&#x53D1;&#x9001;&#x5B8C;&#x4E00;&#x4E2A;&#x5206;&#x7EC4;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x8D85;&#x65F6;&#x8BA1;&#x65F6;&#x5668;&#xFF0C;&#x5176;&#x91CD;&#x4F20;&#x65F6;&#x95F4;&#x5E94;&#x6BD4;&#x6570;&#x636E;&#x5728;&#x5206;&#x7EC4;&#x4F20;&#x8F93;&#x7684;&#x5E73;&#x5747;&#x5F80;&#x8FD4;&#x65F6;&#x95F4;&#x66F4;&#x957F;&#x4E00;&#x4E9B;&#x3002;&#x8FD9;&#x79CD;&#x81EA;&#x52A8;&#x91CD;&#x4F20;&#x65B9;&#x5F0F;&#x5E38;&#x79F0;&#x4E3A;&#x81EA;&#x52A8;&#x91CD;&#x4F20;&#x8BF7;&#x6C42; ARQ&#x3002; &#x5728;&#x505C;&#x6B62;&#x7B49;&#x5F85;&#x534F;&#x8BAE;&#x4E2D;&#xFF0C;&#x82E5;&#x63A5;&#x6536;&#x65B9;&#x6536;&#x5230;&#x91CD;&#x590D;&#x5206;&#x7EC4;&#xFF0C;&#x5C31;&#x4E22;&#x5F03;&#x8BE5;&#x5206;&#x7EC4;&#x4F46;&#x540C;&#x65F6;&#x8FD8;&#x8981;&#x53D1;&#x9001;&#x786E;&#x8BA4;&#x3002; &#x8FDE;&#x7EED; ARQ &#x534F;&#x8BAE;&#x53EF;&#x63D0;&#x9AD8;&#x4FE1;&#x9053;&#x5229;&#x7528;&#x7387;&#x3002;&#x53D1;&#x9001;&#x65B9;&#x7EF4;&#x6301;&#x4E00;&#x4E2A;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#xFF0C;&#x51E1;&#x4F4D;&#x4E8E;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x5185;&#x7684;&#x5206;&#x7EC4;&#x90FD;&#x53EF;&#x8FDE;&#x7EED;&#x53D1;&#x9001;&#x51FA;&#x53BB;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x5BF9;&#x65B9;&#x7684;&#x786E;&#x8BA4;&#x3002;&#x63A5;&#x6536;&#x65B9;&#x4E00;&#x822C;&#x91C7;&#x7528;&#x7D2F;&#x79EF;&#x786E;&#x8BA4;&#xFF0C;&#x5BF9;&#x6309;&#x5E8F;&#x5230;&#x8FBE;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5206;&#x7EC4;&#x53D1;&#x9001;&#x786E;&#x8BA4;&#xFF0C;&#x8868;&#x660E;&#x5230;&#x8FD9;&#x4E2A;&#x5206;&#x7EC4;&#x4E3A;&#x6B62;&#x7684;&#x6240;&#x6709;&#x5206;&#x7EC4;&#x90FD;&#x5DF2;&#x6B63;&#x786E;&#x6536;&#x5230;&#x4E86;&#x3002; TCP &#x62A5;&#x6587;&#x6BB5;&#x9996;&#x90E8;&#x7684;&#x524D; 20 &#x4E2A;&#x5B57;&#x8282;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x540E;&#x9762;&#x6709; 4N &#x5B57;&#x8282;&#x662F;&#x6839;&#x636E;&#x9700;&#x8981;&#x800C;&#x589E;&#x52A0;&#x7684;&#x9009;&#x9879;&#xFF08;N &#x662F;&#x6574;&#x6570;&#xFF09;&#x3002;&#x5728;&#x4E00;&#x4E2A; TCP &#x8FDE;&#x63A5;&#x4E2D;&#x4F20;&#x9001;&#x7684;&#x5B57;&#x8282;&#x6D41;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x90FD;&#x6309;&#x987A;&#x5E8F;&#x7F16;&#x53F7;&#x3002;&#x9996;&#x90E8;&#x4E2D;&#x7684;&#x5E8F;&#x53F7;&#x5B57;&#x6BB5;&#x503C;&#x5219;&#x6307;&#x7684;&#x662F;&#x672C;&#x62A5;&#x6587;&#x6BB5;&#x6240;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x5E8F;&#x53F7;&#x3002; TCP &#x9996;&#x90E8;&#x4E2D;&#x7684;&#x786E;&#x8BA4;&#x53F7;&#x662F;&#x671F;&#x671B;&#x6536;&#x5230;&#x5BF9;&#x65B9;&#x4E0B;&#x4E00;&#x4E2A;&#x62A5;&#x6587;&#x6BB5;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5B57;&#x8282;&#x7684;&#x5E8F;&#x53F7;&#x3002;&#x82E5;&#x786E;&#x8BA4;&#x53F7;&#x4E3A; N&#xFF0C;&#x5219;&#x8868;&#x660E;&#xFF1A;&#x5230;&#x5E8F;&#x53F7; N - 1 &#x4E3A;&#x6B62;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x90FD;&#x5DF2;&#x6B63;&#x786E;&#x6536;&#x5230;&#x3002; TCP &#x9996;&#x90E8;&#x4E2D;&#x7684;&#x7A97;&#x53E3;&#x5B57;&#x6BB5;&#x6307;&#x51FA;&#x4E86;&#x73B0;&#x5728;&#x5141;&#x8BB8;&#x5BF9;&#x65B9;&#x53D1;&#x9001;&#x7684;&#x7684;&#x6570;&#x636E;&#x91CF;&#x3002;&#x7A97;&#x53E3;&#x503C;&#x662F;&#x7ECF;&#x5E38;&#x5728;&#x52A8;&#x6001;&#x53D8;&#x5316;&#x7740;&#x7684;&#x3002; TCP &#x4F7F;&#x7528;&#x6ED1;&#x52A8;&#x7A97;&#x53E3;&#x673A;&#x5236;&#x3002;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x91CC;&#x9762;&#x7684;&#x5E8F;&#x53F7;&#x8868;&#x793A;&#x5141;&#x8BB8;&#x53D1;&#x9001;&#x7684;&#x5E8F;&#x53F7;&#x3002;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x540E;&#x6CBF;&#x7684;&#x540E;&#x9762;&#x90E8;&#x5206;&#x8868;&#x793A;&#x5DF2;&#x53D1;&#x9001;&#x4E14;&#x5DF2;&#x6536;&#x5230;&#x4E86;&#x786E;&#x8BA4;&#xFF0C;&#x800C;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x524D;&#x6CBF;&#x7684;&#x524D;&#x9762;&#x90E8;&#x5206;&#x8868;&#x793A;&#x4E0D;&#x5141;&#x8BB8;&#x53D1;&#x9001;&#x7684;&#x3002;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x540E;&#x6CBF;&#x7684;&#x53D8;&#x5316;&#x60C5;&#x51B5;&#x6709;&#x4E24;&#x79CD;&#x53EF;&#x80FD;&#xFF0C;&#x5373;&#x4E0D;&#x52A8;&#xFF08; &#x6CA1;&#x6709;&#x6536;&#x5230;&#x65B0;&#x7684;&#x786E;&#x8BA4;&#xFF09;&#x548C;&#x524D;&#x79FB;&#xFF08;&#x6536;&#x5230;&#x4E86;&#x65B0;&#x7684;&#x786E;&#x8BA4;&#xFF09;&#x3002;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x524D;&#x6CBF;&#x901A;&#x5E38;&#x662F;&#x4E0D;&#x65AD;&#x5411;&#x524D;&#x79FB;&#x52A8;&#x7684;&#x3002; &#x6D41;&#x91CF;&#x63A7;&#x5236;&#x5C31;&#x662F;&#x8BA9;&#x53D1;&#x9001;&#x65B9;&#x7684;&#x53D1;&#x9001;&#x901F;&#x7387;&#x4E0D;&#x8981;&#x592A;&#x5FEB;&#xFF0C;&#x8981;&#x8BA9;&#x63A5;&#x6536;&#x65B9;&#x6765;&#x5F97;&#x53CA;&#x63A5;&#x6536;&#x3002; &#x5728;&#x67D0;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x82E5;&#x5BF9;&#x7F51;&#x7EDC;&#x4E2D;&#x67D0;&#x4E00;&#x8D44;&#x6E90;&#x7684;&#x9700;&#x6C42;&#x8D85;&#x8FC7;&#x4E86;&#x8BE5;&#x8D44;&#x6E90;&#x6240;&#x80FD;&#x63D0;&#x4F9B;&#x7684;&#x53EF;&#x7528;&#x90E8;&#x5206;&#xFF0C;&#x7F51;&#x7EDC;&#x7684;&#x6027;&#x80FD;&#x5C31;&#x8981;&#x53D8;&#x574F;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x5C31;&#x53EB;&#x505A;&#x62E5;&#x585E;&#x3002;&#x62E5;&#x585E;&#x63A7;&#x5236;&#x5C31;&#x662F;&#x9632;&#x6B62;&#x8FC7;&#x591A;&#x7684;&#x6570;&#x636E;&#x6CE8;&#x5165;&#x5230;&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4F7F;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x8DEF;&#x7531;&#x5668;&#x6216;&#x94FE;&#x8DEF;&#x4E0D;&#x81F4;&#x8FC7;&#x8F7D;&#x3002; &#x6D41;&#x91CF;&#x63A7;&#x5236;&#x662F;&#x4E00;&#x4E2A;&#x7AEF;&#x5230;&#x7AEF;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x662F;&#x63A5;&#x6536;&#x7AEF;&#x6291;&#x5236;&#x53D1;&#x9001;&#x7AEF;&#x53D1;&#x9001;&#x6570;&#x636E;&#x7684;&#x901F;&#x7387;&#xFF0C;&#x4EE5;&#x4FBF;&#x4F7F;&#x63A5;&#x6536;&#x7AEF;&#x6765;&#x5F97;&#x53CA;&#x63A5;&#x6536;&#x3002;&#x62E5;&#x585E;&#x63A7;&#x5236;&#x662F;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x6027;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x6D89;&#x53CA;&#x6240;&#x6709;&#x7684;&#x4E3B;&#x673A;&#x3001;&#x6240;&#x6709;&#x7684;&#x8DEF;&#x7531;&#x5668;&#xFF0C;&#x4EE5;&#x53CA;&#x4E0E;&#x964D;&#x4F4E;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x6027;&#x80FD;&#x6709;&#x5173;&#x7684;&#x6240;&#x6709;&#x56E0;&#x7D20;&#x3002; &#x4E3A;&#x4E86;&#x8FDB;&#x884C;&#x62E5;&#x585E;&#x63A7;&#x5236;&#xFF0C;TCP &#x7684;&#x53D1;&#x9001;&#x65B9;&#x8981;&#x7EF4;&#x6301;&#x4E00;&#x4E2A;&#x62E5;&#x585E;&#x7A97;&#x53E3; cwnd &#x7684;&#x72B6;&#x6001;&#x53D8;&#x91CF;&#x3002;&#x62E5;&#x585E;&#x7A97;&#x53E3;&#x7684;&#x5927;&#x5C0F;&#x53D6;&#x51B3;&#x4E8E;&#x7F51;&#x7EDC;&#x7684;&#x62E5;&#x585E;&#x7A0B;&#x5EA6;&#xFF0C;&#x5E76;&#x4E14;&#x52A8;&#x6001;&#x7684;&#x5728;&#x53D8;&#x5316;&#x3002;&#x53D1;&#x9001;&#x65B9;&#x8BA9;&#x81EA;&#x5DF1;&#x7684;&#x53D1;&#x9001;&#x7A97;&#x53E3;&#x53D6;&#x4E3A;&#x62E5;&#x585E;&#x7A97;&#x53E3;&#x548C;&#x63A5;&#x6536;&#x65B9;&#x7684;&#x63A5;&#x6536;&#x7A97;&#x53E3;&#x4E2D;&#x8F83;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#x3002; TCP &#x7684;&#x62E5;&#x585E;&#x63A7;&#x5236;&#x91C7;&#x7528;&#x4E86;&#x56DB;&#x79CD;&#x7B97;&#x6CD5;&#xFF0C;&#x5373;&#x6162;&#x5F00;&#x59CB;&#xFF0C;&#x62E5;&#x585E;&#x907F;&#x514D;&#xFF0C;&#x5FEB;&#x91CD;&#x4F20;&#x548C;&#x5FEB;&#x6062;&#x590D;&#x3002;&#x5728;&#x7F51;&#x7EDC;&#x5C42;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x8DEF;&#x7531;&#x5668;&#x91C7;&#x7528;&#x9002;&#x5F53;&#x7684;&#x5206;&#x7EC4;&#x4E22;&#x5F03;&#x7B56;&#x7565;&#xFF08;&#xFF08;&#x5982;&#x968F;&#x673A;&#x65E9;&#x671F;&#x68C0;&#x6D4B; RED&#xFF09;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x7F51;&#x7EDC;&#x62E5;&#x585E;&#x7684;&#x53D1;&#x751F;&#x3002; &#x8FD0;&#x8F93;&#x8FDE;&#x63A5;&#x6709;&#x4E09;&#x4E2A;&#x9636;&#x6BB5;&#xFF0C;&#x5373;&#xFF1A;&#x8FDE;&#x63A5;&#x5EFA;&#x7ACB;&#xFF0C;&#x6570;&#x636E;&#x4F20;&#x9001;&#x548C;&#x8FDE;&#x63A5;&#x91CA;&#x653E;&#x3002; &#x4E3B;&#x52A8;&#x53D1;&#x8D77; TCP &#x7684;&#x8FDE;&#x63A5;&#x5EFA;&#x7ACB;&#x7684;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x53EB;&#x505A;&#x5BA2;&#x6237;&#xFF0C;&#x800C;&#x88AB;&#x52A8;&#x7B49;&#x5F85;&#x5EFA;&#x7ACB;&#x7684;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x53EB;&#x505A;&#x670D;&#x52A1;&#x5668;&#x3002;TCP &#x7684;&#x8FDE;&#x63A5;&#x5EFA;&#x7ACB;&#x91C7;&#x7528;&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x673A;&#x5236;&#x3002;&#x670D;&#x52A1;&#x5668;&#x8981;&#x786E;&#x8BA4;&#x5BA2;&#x6237;&#x7684;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#xFF0C;&#x7136;&#x540E;&#x5BA2;&#x6237;&#x8981;&#x5BF9;&#x670D;&#x52A1;&#x5668;&#x7684;&#x786E;&#x8BA4;&#x8FDB;&#x884C;&#x786E;&#x8BA4;&#x3002; TCP &#x7684;&#x8FDE;&#x63A5;&#x91CA;&#x653E;&#x91C7;&#x7528;&#x56DB;&#x6B21;&#x63E1;&#x624B;&#x673A;&#x5236;&#x3002;&#x4EFB;&#x4F55;&#x4E00;&#x65B9;&#x90FD;&#x53EF;&#x4EE5;&#x5728;&#x6570;&#x636E;&#x4F20;&#x9001;&#x7ED3;&#x675F;&#x540E;&#x53D1;&#x51FA;&#x8FDE;&#x63A5;&#x91CA;&#x653E;&#x7684;&#x901A;&#x77E5;&#xFF0C;&#x5F85;&#x5BF9;&#x65B9;&#x786E;&#x8BA4;&#x540E;&#x5C31;&#x8FDB;&#x5165;&#x534A;&#x5173;&#x95ED;&#x72B6;&#x6001;&#x3002;&#x65B9;&#x53E6;&#x4E00;&#x65B9;&#x4E5F;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x518D;&#x53D1;&#x9001;&#x65F6;&#xFF0C;&#x5219;&#x53D1;&#x9001;&#x8FDE;&#x63A5;&#x91CA;&#x653E;&#x901A;&#x77E5;&#xFF0C;&#x5BF9;&#x65B9;&#x786E;&#x8BA4;&#x540E;&#x5C31;&#x5B8C;&#x5168;&#x5173;&#x95ED;&#x4E86; TCP &#x8FDE;&#x63A5;&#x3002; &#x7B2C; &#x516D; &#x7AE0; &#x5E94;&#x7528;&#x5C42;&#x672C;&#x7AE0;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x5E94;&#x7528;&#x5C42;&#x534F;&#x8BAE;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x67D0;&#x4E00;&#x7C7B;&#x5E94;&#x7528;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x53C8;&#x662F;&#x901A;&#x8FC7;&#x4F4D;&#x4E8E;&#x4E0D;&#x540C;&#x4E3B;&#x673A;&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x548C;&#x534F;&#x540C;&#x5DE5;&#x4F5C;&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x5E94;&#x7528;&#x5C42;&#x89C4;&#x5B9A;&#x4E86;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x5728;&#x901A;&#x4FE1;&#x65F6;&#x6240;&#x9075;&#x5FAA;&#x7684;&#x534F;&#x8BAE;&#x3002;&#x5E94;&#x7528;&#x5C42;&#x7684;&#x8BB8;&#x591A;&#x534F;&#x8BAE;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x5BA2;&#x6237;&#x670D;&#x52A1;&#x5668;&#x65B9;&#x5F0F;&#x7684;&#x3002;&#x5BA2;&#x6237;&#x662F;&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#x65B9;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x662F;&#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x65B9;&#x3002; &#x57DF;&#x540D;&#x7CFB;&#x7EDF; DNS &#x662F;&#x56E0;&#x7279;&#x7F51;&#x4F7F;&#x7528;&#x7684;&#x547D;&#x540D;&#x7CFB;&#x7EDF;&#xFF0C;&#x7528;&#x6765;&#x628A;&#x4FBF;&#x4E8E;&#x4EBA;&#x4EEC;&#x4F7F;&#x7528;&#x7684;&#x673A;&#x5668;&#x540D;&#x5B57;&#x8F6C;&#x6362;&#x4E3A; IP &#x5730;&#x5740;&#x3002;DNS &#x662F;&#x4E00;&#x4E2A;&#x8054;&#x673A;&#x5206;&#x5E03;&#x5F0F;&#x6570;&#x636E;&#x5E93;&#x7CFB;&#x7EDF;&#xFF0C;&#x5E76;&#x91C7;&#x7528;&#x5BA2;&#x6237;&#x670D;&#x52A1;&#x5668;&#x65B9;&#x5F0F;&#x3002; &#x57DF;&#x540D;&#x5230; IP &#x5730;&#x5740;&#x7684;&#x89E3;&#x6790;&#x662F;&#x7531;&#x5206;&#x5E03;&#x5728;&#x56E0;&#x7279;&#x7F51;&#x4E0A;&#x7684;&#x8BB8;&#x591A;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x7A0B;&#x5E8F;&#xFF08;&#x5373;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#xFF09;&#x5171;&#x540C;&#x5B8C;&#x6210;&#x7684;&#x3002; &#x56E0;&#x7279;&#x7F51;&#x91C7;&#x7528;&#x5C42;&#x6B21;&#x6811;&#x72B6;&#x7ED3;&#x6784;&#x7684;&#x547D;&#x540D;&#x65B9;&#x6CD5;&#xFF0C;&#x4EFB;&#x4F55;&#x4E00;&#x53F0;&#x8FDE;&#x63A5;&#x5728;&#x56E0;&#x7279;&#x7F51;&#x4E0A;&#x7684;&#x4E3B;&#x673A;&#x6216;&#x8DEF;&#x7531;&#x5668;&#xFF0C;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5373;&#x57DF;&#x540D;&#x3002;&#x57DF;&#x540D;&#x4E2D;&#x7684;&#x70B9;&#x548C;&#x70B9;&#x5206;&#x5341;&#x8FDB;&#x5236; IP &#x5730;&#x5740;&#x4E2D;&#x7684;&#x70B9;&#x6CA1;&#x6709;&#x5173;&#x7CFB;&#x3002; &#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x5206;&#x4E3A;&#x6839;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x3001;&#x9876;&#x7EA7;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x3001;&#x6743;&#x9650;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x548C;&#x672C;&#x5730;&#x57DF;&#x540D;&#x670D;&#x52A1;&#x5668;&#x3002; &#x6587;&#x4EF6;&#x4F20;&#x9001;&#x534F;&#x8BAE; FTP &#x4F7F;&#x7528; TCP &#x53EF;&#x9760;&#x7684;&#x8FD0;&#x8F93;&#x670D;&#x52A1;&#x3002;FTP &#x4F7F;&#x7528;&#x5BA2;&#x6237;&#x670D;&#x52A1;&#x5668;&#x65B9;&#x5F0F;&#x3002;&#x4E00;&#x4E2A; FTP &#x670D;&#x52A1;&#x5668;&#x8FDB;&#x7A0B;&#x53EF;&#x540C;&#x65F6;&#x4E3A;&#x591A;&#x4E2A;&#x5BA2;&#x6237;&#x8FDB;&#x7A0B;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#x3002;&#x5728;&#x8FDB;&#x884C;&#x6587;&#x4EF6;&#x4F20;&#x8F93;&#x65F6;&#xFF0C;FTP &#x7684;&#x5BA2;&#x6237;&#x548C;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x8981;&#x5EFA;&#x7ACB;&#x4E24;&#x4E2A;&#x5E76;&#x884C;&#x7684; TCP &#x8FDE;&#x63A5;&#xFF1A;&#x63A7;&#x5236;&#x8FDE;&#x63A5;&#x548C;&#x6570;&#x636E;&#x8FDE;&#x63A5;&#x3002;&#x5B9E;&#x9645;&#x7528;&#x4E8E;&#x4F20;&#x8F93;&#x6587;&#x4EF6;&#x7684;&#x662F;&#x6570;&#x636E;&#x8FDE;&#x63A5;&#x3002; &#x4E07;&#x7EF4;&#x7F51; WWW &#x662F;&#x4E00;&#x4E2A;&#x5927;&#x89C4;&#x6A21;&#x7684;&#x3001;&#x8054;&#x673A;&#x5F0F;&#x7684;&#x4FE1;&#x606F;&#x50A8;&#x85CF;&#x6240;&#xFF0C;&#x53EF;&#x4EE5;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x5730;&#x4ECE;&#x56E0;&#x7279;&#x7F51;&#x4E0A;&#x7684;&#x4E00;&#x4E2A;&#x7AD9;&#x70B9;&#x94FE;&#x63A5;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x7AD9;&#x70B9;&#x3002; &#x4E07;&#x7EF4;&#x7F51;&#x7684;&#x5BA2;&#x6237;&#x7A0B;&#x5E8F;&#x5411;&#x56E0;&#x7279;&#x7F51;&#x4E2D;&#x7684;&#x670D;&#x52A1;&#x5668;&#x7A0B;&#x5E8F;&#x53D1;&#x51FA;&#x8BF7;&#x6C42;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x7A0B;&#x5E8F;&#x5411;&#x5BA2;&#x6237;&#x7A0B;&#x5E8F;&#x9001;&#x56DE;&#x5BA2;&#x6237;&#x6240;&#x8981;&#x7684;&#x4E07;&#x7EF4;&#x7F51;&#x6587;&#x6863;&#x3002;&#x5728;&#x5BA2;&#x6237;&#x7A0B;&#x5E8F;&#x4E3B;&#x7A97;&#x53E3;&#x4E0A;&#x663E;&#x793A;&#x51FA;&#x7684;&#x4E07;&#x7EF4;&#x7F51;&#x6587;&#x6863;&#x79F0;&#x4E3A;&#x9875;&#x9762;&#x3002; &#x4E07;&#x7EF4;&#x7F51;&#x4F7F;&#x7528;&#x7EDF;&#x4E00;&#x8D44;&#x6E90;&#x5B9A;&#x4F4D;&#x7B26; URL &#x6765;&#x6807;&#x5FD7;&#x4E07;&#x7EF4;&#x7F51;&#x4E0A;&#x7684;&#x5404;&#x79CD;&#x6587;&#x6863;&#xFF0C;&#x5E76;&#x4F7F;&#x6BCF;&#x4E00;&#x4E2A;&#x6587;&#x6863;&#x5728;&#x6574;&#x4E2A;&#x56E0;&#x7279;&#x7F51;&#x7684;&#x8303;&#x56F4;&#x5185;&#x5177;&#x6709;&#x552F;&#x4E00;&#x7684;&#x6807;&#x8BC6;&#x7B26; URL&#x3002; &#x4E07;&#x7EF4;&#x7F51;&#x5BA2;&#x6237;&#x7A0B;&#x5E8F;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x534F;&#x8BAE;&#x662F;&#x8D85;&#x6587;&#x672C;&#x4F20;&#x8F93;&#x534F;&#x8BAE; HTTP&#x3002;HTTP &#x4F7F;&#x7528; TCP &#x8FDE;&#x63A5;&#x8FDB;&#x884C;&#x53EF;&#x9760;&#x5730;&#x4F20;&#x9001;&#x3002;&#x4F46; HTTP &#x534F;&#x8BAE;&#x672C;&#x8EAB;&#x662F;&#x65E0;&#x8FDE;&#x63A5;&#x3001;&#x65E0;&#x72B6;&#x6001;&#x7684;&#x3002;HTTP/1.1 &#x534F;&#x8BAE;&#x4F7F;&#x7528;&#x4E86;&#x6301;&#x7EED;&#x8FDE;&#x63A5;&#xFF08;&#x5206;&#x4E3A;&#x975E;&#x6D41;&#x6C34;&#x7EBF;&#x65B9;&#x5F0F;&#x548C;&#x6D41;&#x6C34;&#x7EBF;&#x65B9;&#x5F0F;&#xFF09;&#x3002; &#x4E07;&#x7EF4;&#x7F51;&#x4F7F;&#x7528;&#x8D85;&#x6587;&#x672C;&#x6807;&#x8BB0;&#x8BED;&#x8A00; HTML &#x6765;&#x663E;&#x793A;&#x5404;&#x79CD;&#x4E07;&#x7EF4;&#x7F51;&#x9875;&#x9762;&#x3002; &#x4E07;&#x7EF4;&#x7F51;&#x9759;&#x6001;&#x6587;&#x6863;&#x662F;&#x6307;&#x5728;&#x6587;&#x6863;&#x521B;&#x4F5C;&#x5B8C;&#x6BD5;&#x540E;&#x5C31;&#x5B58;&#x653E;&#x5728;&#x4E07;&#x7EF4;&#x7F51;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#xFF0C;&#x5728;&#x88AB;&#x7528;&#x6237;&#x6D4F;&#x89C8;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5185;&#x5BB9;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x3002;&#x52A8;&#x6001;&#x6587;&#x6863;&#x662F;&#x6307;&#x6587;&#x6863;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x8BBF;&#x95EE;&#x4E07;&#x7EF4;&#x7F51;&#x670D;&#x52A1;&#x5668;&#x65F6;&#x624D;&#x7531;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x52A8;&#x6001;&#x521B;&#x5EFA;&#x3002; &#x6D3B;&#x52A8;&#x6587;&#x6863;&#x6280;&#x672F;&#x53EF;&#x4EE5;&#x4F7F;&#x6D4F;&#x89C8;&#x5668;&#x5C4F;&#x5E55;&#x8FDE;&#x7EED;&#x66F4;&#x65B0;&#x3002;&#x6D3B;&#x52A8;&#x6587;&#x6863;&#x7A0B;&#x5E8F;&#x53EF;&#x4E0E;&#x7528;&#x6237;&#x76F4;&#x63A5;&#x4EA4;&#x4E92;&#xFF0C;&#x5E76;&#x53EF;&#x8FDE;&#x7EED;&#x5730;&#x6539;&#x53D8;&#x5C4F;&#x5E55;&#x7684;&#x663E;&#x793A;&#x3002; &#x5728;&#x4E07;&#x7EF4;&#x7F51;&#x4E2D;&#x7528;&#x6765;&#x8FDB;&#x884C;&#x641C;&#x7D22;&#x7684;&#x5DE5;&#x5177;&#x53EB;&#x505A;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x3002;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x5927;&#x4F53;&#x4E0A;&#x53EF;&#x5212;&#x5206;&#x4E3A;&#x5168;&#x6587;&#x68C0;&#x7D22;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x548C;&#x5206;&#x7C7B;&#x76EE;&#x5F55;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x4E24;&#x5927;&#x7C7B;&#x3002; &#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x662F;&#x56E0;&#x7279;&#x7F51;&#x4E0A;&#x4F7F;&#x7528;&#x6700;&#x591A;&#x7684;&#x548C;&#x6700;&#x53D7;&#x7528;&#x6237;&#x6B22;&#x8FCE;&#x7684;&#x7684;&#x4E00;&#x79CD;&#x5E94;&#x7528;&#x3002;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x628A;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x5230;&#x6536;&#x4EF6;&#x4EBA;&#x4F7F;&#x7528;&#x7684;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x5E76;&#x653E;&#x5728;&#x5176;&#x4E2D;&#x7684;&#x6536;&#x4EF6;&#x4EBA;&#x90AE;&#x7BB1;&#x4E2D;&#xFF0C;&#x6536;&#x4EF6;&#x4EBA;&#x53EF;&#x968F;&#x65F6;&#x4E0A;&#x7F51;&#x5230;&#x81EA;&#x5DF1;&#x4F7F;&#x7528;&#x7684;&#x90AE;&#x7BB1;&#x670D;&#x52A1;&#x5668;&#x8FDB;&#x884C;&#x8BFB;&#x53D6;&#x3002;&#x76F8;&#x5F53;&#x4E8E; &#x201C;&#x7535;&#x5B50;&#x4FE1;&#x7BB1;&#x201D;&#x3002; &#x4E00;&#x4E2A;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x7CFB;&#x7EDF;&#x6709;&#x4E09;&#x4E2A;&#x4E3B;&#x8981;&#x7EC4;&#x6210;&#x6784;&#x4EF6;&#xFF0C;&#x5373;&#xFF1A;&#x7528;&#x6237;&#x4EE3;&#x7406;&#x3001;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4EE5;&#x53CA;&#x90AE;&#x4EF6;&#x534F;&#x8BAE;&#xFF08;&#x5305;&#x62EC;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x534F;&#x8BAE;&#xFF0C;&#x5982; SMTP &#xFF0C;&#x548C;&#x90AE;&#x4EF6;&#x8BFB;&#x53D6;&#x534F;&#x8BAE;&#xFF0C;&#x5982; POP3 &#xFF09;&#x3002;&#x7528;&#x6237;&#x4EE3;&#x7406;&#x548C;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x8981;&#x8FD0;&#x884C;&#x8FD9;&#x4E24;&#x79CD;&#x534F;&#x8BAE;&#x3002; &#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x7684;&#x7528;&#x6237;&#x4EE3;&#x7406;&#x5C31;&#x662F;&#x7528;&#x6237;&#x4E0E;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5B83;&#x5411;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x5F88;&#x53CB;&#x597D;&#x7684;&#x89C6;&#x7A97;&#x754C;&#x9762;&#x6765;&#x53D1;&#x9001;&#x548C;&#x63A5;&#x53D7;&#x90AE;&#x4EF6;&#x3002; &#x4ECE;&#x7528;&#x6237;&#x4EE3;&#x7406;&#x628A;&#x90AE;&#x4EF6;&#x4F20;&#x9001;&#x5230;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4EE5;&#x53CA;&#x5728;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x4F20;&#x9001;&#xFF0C;&#x90FD;&#x8981;&#x4F7F;&#x7528; SMTP &#x534F;&#x8BAE;&#x3002;&#x4F46;&#x7528;&#x6237;&#x4EE3;&#x7406;&#x4ECE;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x8BFB;&#x53D6;&#x90AE;&#x4EF6;&#x65F6;&#xFF0C;&#x5219;&#x8981;&#x4F7F;&#x7528; POP3 &#xFF08;&#x6216; IMAP&#xFF09;&#x534F;&#x8BAE;&#x3002; &#x57FA;&#x4E8E;&#x4E07;&#x7EF4;&#x7F51;&#x7684;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x4F7F;&#x7528;&#x6237;&#x80FD;&#x591F;&#x5229;&#x7528;&#x6D4F;&#x89C8;&#x5668;&#x6536;&#x53D1;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x3002;&#x7528;&#x6237;&#x6D4F;&#x89C8;&#x5668;&#x548C;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x90AE;&#x4EF6;&#x4F20;&#x9001;&#x4F7F;&#x7528; HTTP &#x534F;&#x8BAE;&#xFF0C;&#x800C;&#x5728;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x90AE;&#x4EF6;&#x7684;&#x4F20;&#x9001;&#x4ECD;&#x7136;&#x4F7F;&#x7528; SMTP &#x534F;&#x8BAE;&#x3002; &#x7B80;&#x5355;&#x7F51;&#x7EDC;&#x7BA1;&#x7406;&#x534F;&#x8BAE; SNMP &#x7531;&#x4E09;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF0C;&#x5373;&#xFF1A; 1. SNMP &#x672C;&#x8EAB;&#xFF0C;&#x8D1F;&#x8D23;&#x8BFB;&#x53D6;&#x548C;&#x6539;&#x53D8;&#x5404;&#x4EE3;&#x7406;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x540D;&#x53CA;&#x5176;&#x72B6;&#x6001;&#x6570;&#x503C;&#x3002; 2. &#x7BA1;&#x7406;&#x4FE1;&#x606F;&#x7ED3;&#x6784; SMI&#xFF0C;&#x5B9A;&#x4E49;&#x547D;&#x540D;&#x5BF9;&#x8C61;&#x548C;&#x5B9A;&#x4E49;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;&#xFF08;&#x5305;&#x62EC;&#x8303;&#x56F4;&#x548C;&#x957F;&#x5EA6;&#xFF09;&#x7684;&#x901A;&#x7528;&#x89C4;&#x5219;&#xFF0C;&#x4EE5;&#x53CA;&#x628A;&#x5BF9;&#x8C61;&#x548C;&#x5BF9;&#x8C61;&#x7684;&#x503C;&#x8FDB;&#x884C;&#x7F16;&#x7801;&#x7684;&#x57FA;&#x672C;&#x7F16;&#x7801;&#x89C4;&#x5219; BER&#x3002; 3. &#x7BA1;&#x7406;&#x4FE1;&#x606F;&#x5E93; MIB&#xFF0C;&#x5728;&#x88AB;&#x7BA1;&#x7406;&#x7684;&#x5B9E;&#x4F53;&#x4E2D;&#x521B;&#x5EFA;&#x4E86;&#x547D;&#x540D;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x89C4;&#x5B9A;&#x4E86;&#x5176;&#x7C7B;&#x578B;&#x3002; &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x63A5;&#x53E3;&#x662F;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x7684;&#x63A7;&#x5236;&#x6743;&#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x63A7;&#x5236;&#x6743;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x7684;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x53C8;&#x79F0;&#x4E3A;&#x5E94;&#x7528;&#x7F16;&#x7A0B;&#x63A5;&#x53E3; API&#x3002;API &#x5C31;&#x662F;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x7684;&#x63A5;&#x53E3;&#x3002; &#x5957;&#x63A5;&#x5B57;&#x662F;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x548C;&#x8FD0;&#x8F93;&#x5C42;&#x534F;&#x8BAE;&#x4E4B;&#x95F4;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x662F;&#x5E94;&#x7528;&#x8FDB;&#x7A0B;&#x4E3A;&#x4E86;&#x83B7;&#x5F97;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x670D;&#x52A1;&#x800C;&#x4E0E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x4E00;&#x79CD;&#x673A;&#x5236;&#x3002; &#x7B2C; &#x4E03; &#x7AE0; &#x7F51;&#x7EDC;&#x5B89;&#x5168;&#x672C;&#x7AE0;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x4E0A;&#x7684;&#x901A;&#x4FE1;&#x9762;&#x4E34;&#x7684;&#x5A01;&#x80C1;&#x53EF;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7C7B;&#xFF0C;&#x5373;&#x88AB;&#x52A8;&#x653B;&#x51FB;&#xFF08;&#x5982;&#x622A;&#x83B7;&#xFF09;&#x548C;&#x4E3B;&#x52A8;&#x653B;&#x51FB;&#xFF08;&#x5982;&#x4E2D;&#x65AD;&#x3001;&#x7BE1;&#x6539;&#x3001;&#x4F2A;&#x9020;&#xFF09;&#x3002;&#x4E3B;&#x52A8;&#x653B;&#x51FB;&#x7684;&#x7C7B;&#x578B;&#x6709;&#x66F4;&#x6539;&#x62A5;&#x6587;&#x6D41;&#x3001;&#x62D2;&#x7EDD;&#x670D;&#x52A1;&#x3001;&#x4F2A;&#x9020;&#x521D;&#x59CB;&#x5316;&#x3001;&#x6076;&#x610F;&#x7A0B;&#x5E8F;&#xFF08;&#x75C5;&#x6BD2;&#x3001;&#x8815;&#x866B;&#x3001;&#x6728;&#x9A6C;&#xFF09;&#x7B49;&#x3002; &#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x5B89;&#x5168;&#x4E3B;&#x8981;&#x6709;&#x4EE5;&#x4E0B;&#x4E00;&#x4E9B;&#x5185;&#x5BB9;&#xFF1A;&#x4FDD;&#x5BC6;&#x6027;&#x3001;&#x5B89;&#x5168;&#x534F;&#x8BAE;&#x7684;&#x8BBE;&#x8BA1;&#x548C;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#x3002; &#x5BC6;&#x7801;&#x7F16;&#x7801;&#x5B66;&#x662F;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x7684;&#x8BBE;&#x8BA1;&#x5B66;&#xFF0C;&#x800C;&#x5BC6;&#x7801;&#x5206;&#x6790;&#x5B66;&#x5219;&#x662F;&#x5728;&#x672A;&#x77E5;&#x5BC6;&#x94A5;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4ECE;&#x5BC6;&#x6587;&#x63A8;&#x6F14;&#x51FA;&#x660E;&#x6587;&#x6216;&#x5BC6;&#x94A5;&#x7684;&#x6280;&#x672F;&#x3002;&#x5BC6;&#x7801;&#x7F16;&#x7801;&#x5B66;&#x4E0E;&#x5BC6;&#x7801;&#x5206;&#x6790;&#x5B66;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x5373;&#x4E3A;&#x5BC6;&#x7801;&#x5B66;&#x3002; &#x5982;&#x679C;&#x4E0D;&#x8BBA;&#x622A;&#x53D6;&#x8005;&#x83B7;&#x5F97;&#x4E86;&#x591A;&#x5C11;&#x5BC6;&#x6587;&#xFF0C;&#x90FD;&#x65E0;&#x6CD5;&#x552F;&#x4E00;&#x5730;&#x786E;&#x5B9A;&#x51FA;&#x5BF9;&#x5E94;&#x7684;&#x660E;&#x6587;&#xFF0C;&#x5219;&#x8FD9;&#x4E00;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x79F0;&#x4E3A;&#x65E0;&#x6761;&#x4EF6;&#x5B89;&#x5168;&#x7684;&#xFF08;&#x6216;&#x7406;&#x8BBA;&#x4E0A;&#x662F;&#x4E0D;&#x53EF;&#x7834;&#x7684;&#xFF09;&#x3002;&#x5728;&#x65E0;&#x4EFB;&#x4F55;&#x9650;&#x5236;&#x7684;&#x6761;&#x4EF6;&#x4E0B;&#xFF0C;&#x76EE;&#x524D;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x5B9E;&#x7528;&#x7684;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x5747;&#x662F;&#x53EF;&#x7834;&#x7684;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x4E2D;&#x7684;&#x5BC6;&#x7801;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x5B9A;&#x65F6;&#x95F4;&#x5185;&#x88AB;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x8BA1;&#x7B97;&#x8D44;&#x6E90;&#x7834;&#x8BD1;&#xFF0C;&#x5219;&#x8FD9;&#x4E00;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x79F0;&#x4E3A;&#x5728;&#x8BA1;&#x7B97;&#x4E0A;&#x662F;&#x5B89;&#x5168;&#x7684;&#x3002; &#x5BF9;&#x79F0;&#x5BC6;&#x94A5;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x662F;&#x52A0;&#x5BC6;&#x5BC6;&#x94A5;&#x4E0E;&#x89E3;&#x5BC6;&#x5BC6;&#x94A5;&#x76F8;&#x540C;&#x7684;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#xFF08;&#x5982;&#x6570;&#x636E;&#x52A0;&#x5BC6;&#x6807;&#x51C6; DES &#x548C;&#x56FD;&#x9645;&#x6570;&#x636E;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5; IDEA&#xFF09;&#x3002;&#x8FD9;&#x79CD;&#x52A0;&#x5BC6;&#x7684;&#x4FDD;&#x5BC6;&#x6027;&#x4EC5;&#x53D6;&#x51B3;&#x4E0E;&#x5BF9;&#x5BC6;&#x94A5;&#x7684;&#x4FDD;&#x5BC6;&#xFF0C;&#x800C;&#x7B97;&#x6CD5;&#x662F;&#x516C;&#x5F00;&#x7684;&#x3002; &#x516C;&#x94A5;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#xFF08;&#x53C8;&#x79F0;&#x4E3A;&#x516C;&#x5F00;&#x5BC6;&#x94A5;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#xFF09;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x52A0;&#x5BC6;&#x5BC6;&#x94A5;&#x4E0E;&#x89E3;&#x5BC6;&#x5BC6;&#x94A5;&#x3002;&#x52A0;&#x5BC6;&#x5BC6;&#x94A5;&#xFF08;&#x5373;&#x516C;&#x94A5;&#xFF09;&#x662F;&#x5411;&#x516C;&#x4F17;&#x516C;&#x5F00;&#x7684;&#xFF0C;&#x800C;&#x89E3;&#x5BC6;&#x5BC6;&#x94A5;&#xFF08;&#x5373;&#x79C1;&#x94A5;&#x6216;&#x5BC6;&#x94A5;&#xFF09;&#x5219;&#x662F;&#x9700;&#x8981;&#x4FDD;&#x5BC6;&#x7684;&#x3002;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x548C;&#x89E3;&#x5BC6;&#x7B97;&#x6CD5;&#x4E5F;&#x90FD;&#x662F;&#x516C;&#x5F00;&#x7684;&#x3002; &#x76EE;&#x524D;&#x6700;&#x8457;&#x540D;&#x7684;&#x516C;&#x94A5;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x662F; RSA &#x4F53;&#x5236;&#xFF0C;&#x5B83;&#x662F;&#x57FA;&#x4E8E;&#x6570;&#x8BBA;&#x4E2D;&#x7684;&#x5927;&#x6570;&#x5206;&#x89E3;&#x95EE;&#x9898;&#x7684;&#x4F53;&#x5236;&#x3002; &#x4EFB;&#x4F55;&#x52A0;&#x5BC6;&#x65B9;&#x6CD5;&#x7684;&#x5B89;&#x5168;&#x6027;&#x53D6;&#x51B3;&#x4E0E;&#x5BC6;&#x94A5;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x4EE5;&#x53CA;&#x653B;&#x7834;&#x5BC6;&#x6587;&#x6240;&#x9700;&#x8981;&#x7684;&#x8BA1;&#x7B97;&#x91CF;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x5730;&#x53D6;&#x51B3;&#x4E0E;&#x52A0;&#x5BC6;&#x7684;&#x4F53;&#x5236;&#xFF08;&#x516C;&#x94A5;&#x5BC6;&#x7801;&#x4F53;&#x5236;&#x6216;&#x4F20;&#x7EDF;&#x52A0;&#x5BC6;&#x4F53;&#x5236;&#xFF09;&#x3002; &#x6570;&#x5B57;&#x7B7E;&#x540D;&#x5FC5;&#x987B;&#x4FDD;&#x8BC1;&#x80FD;&#x591F;&#x5B9E;&#x73B0;&#x4EE5;&#x4E0B;&#x4E09;&#x70B9;&#x529F;&#x80FD;&#xFF1A; 1. &#x62A5;&#x6587;&#x9274;&#x522B;&#xFF0C;&#x5373;&#x63A5;&#x6536;&#x8005;&#x80FD;&#x591F;&#x6838;&#x5B9E;&#x53D1;&#x9001;&#x8005;&#x5BF9;&#x62A5;&#x6587;&#x7684;&#x7B7E;&#x540D;&#xFF1B; 2. &#x62A5;&#x6587;&#x7684;&#x5B8C;&#x6574;&#x6027;&#xFF0C;&#x5373;&#x63A5;&#x6536;&#x8005;&#x786E;&#x4FE1;&#x6240;&#x80FD;&#x6536;&#x5230;&#x5230;&#x6570;&#x636E;&#x548C;&#x53D1;&#x9001;&#x8005;&#x53D1;&#x9001;&#x7684;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x800C;&#x6CA1;&#x6709;&#x88AB;&#x7BE1;&#x6539;&#x8FC7;&#xFF1B; 3. &#x4E0D;&#x53EF;&#x5426;&#x8BA4;&#xFF0C;&#x5373;&#x53D1;&#x9001;&#x8005;&#x4E8B;&#x540E;&#x4E0D;&#x80FD;&#x62B5;&#x8D56;&#x5BF9;&#x62A5;&#x6587;&#x7684;&#x7B7E;&#x540D;&#x3002; &#x9274;&#x522B;&#x662F;&#x8981;&#x9A8C;&#x8BC1;&#x901A;&#x4FE1;&#x7684;&#x5BF9;&#x65B9;&#x7684;&#x786E;&#x662F;&#x81EA;&#x5DF1;&#x6240;&#x8981;&#x901A;&#x4FE1;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5176;&#x4ED6;&#x7684;&#x5192;&#x5145;&#x8005;&#x3002;&#x9274;&#x522B;&#x4E0E;&#x6388;&#x6743;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x6982;&#x5FF5;&#x3002; &#x62A5;&#x6587;&#x6458;&#x8981; MD &#x662F;&#x8FDB;&#x884C;&#x62A5;&#x6587;&#x9274;&#x522B;&#x7684;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x65B9;&#x6CD5;&#x3002;&#x76EE;&#x524D;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x7684;&#x662F; MD5 &#x3002; &#x5BC6;&#x94A5;&#x7BA1;&#x7406;&#x5305;&#x62EC;&#xFF1A;&#x5BC6;&#x94A5;&#x7684;&#x4EA7;&#x751F;&#x3001;&#x5206;&#x914D;&#x3001;&#x6CE8;&#x5165;&#x3001;&#x9A8C;&#x8BC1;&#x548C;&#x4F7F;&#x7528;&#x3002;&#x5BC6;&#x94A5;&#x5206;&#x914D;&#xFF08;&#x6216;&#x5BC6;&#x94A5;&#x5206;&#x53D1;&#xFF09;&#x662F;&#x5BC6;&#x94A5;&#x7BA1;&#x7406;&#x4E2D;&#x6700;&#x5927;&#x7684;&#x95EE;&#x9898;&#x3002;&#x5BC6;&#x94A5;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x6700;&#x5B89;&#x5168;&#x7684;&#x901A;&#x8DEF;&#x8FDB;&#x884C;&#x5206;&#x914D;&#x3002;&#x76EE;&#x524D;&#x5E38;&#x7528;&#x7684;&#x5BC6;&#x94A5;&#x5206;&#x914D;&#x65B9;&#x5F0F;&#x662F;&#x8BBE;&#x7ACB;&#x5BC6;&#x94A5;&#x5206;&#x914D;&#x4E2D;&#x5FC3; KDC&#x3002; &#x8BA4;&#x8BC1;&#x4E2D;&#x5FC3; CA &#x662F;&#x4E00;&#x4E2A;&#x503C;&#x5F97;&#x4FE1;&#x8D56;&#x7684;&#x673A;&#x6784;&#xFF0C;&#x7528;&#x6765;&#x5C06;&#x516C;&#x94A5;&#x4E0E;&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x4F53;&#xFF08;&#x4EBA;&#x6216;&#x673A;&#x5668;&#xFF09;&#x8FDB;&#x884C;&#x7ED1;&#x5B9A;&#x3002;&#x6BCF;&#x4E2A;&#x5B9E;&#x4F53;&#x90FD;&#x6709; CA &#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#xFF0C;&#x91CC;&#x9762;&#x6709;&#x516C;&#x94A5;&#x53CA;&#x5176;&#x62E5;&#x6709;&#x8005;&#x7684;&#x6807;&#x8BC6;&#x4FE1;&#x606F;&#xFF08;&#x4EBA;&#x540D;&#x6216; IP &#x5730;&#x5740;&#xFF09;&#x3002;&#x6B64;&#x8BC1;&#x4E66;&#x88AB; CA &#x8FDB;&#x884C;&#x4E86;&#x6570;&#x5B57;&#x7B7E;&#x540D;&#x3002;&#x4EFB;&#x4F55;&#x7528;&#x6237;&#x90FD;&#x53EF;&#x4ECE;&#x53EF;&#x4FE1;&#x7684;&#x5730;&#x65B9;&#x83B7;&#x5F97;&#x8BA4;&#x8BC1;&#x4E2D;&#x5FC3; CA &#x7684;&#x516C;&#x94A5;&#x3002; &#x5728;&#x7F51;&#x7EDC;&#x5C42;&#x4F7F;&#x7528;&#x5B89;&#x5168;&#x534F;&#x8BAE; IPsec &#x652F;&#x6301;&#xFF0C;&#x5B83;&#x5305;&#x62EC;&#x9274;&#x522B;&#x9996;&#x90E8;&#x534F;&#x8BAE; AH &#x548C;&#x5C01;&#x88C5;&#x5B89;&#x5168;&#x6709;&#x6548;&#x8F7D;&#x8377;&#x534F;&#x8BAE; ESP&#x3002;AH &#x534F;&#x8BAE;&#x63D0;&#x4F9B;&#x6E90;&#x70B9;&#x9274;&#x522B;&#x548C;&#x6570;&#x636E;&#x5B8C;&#x6574;&#x6027;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x4FDD;&#x5BC6;&#x3002;&#x800C; ESP &#x534F;&#x8BAE;&#x63D0;&#x4F9B;&#x6E90;&#x70B9;&#x9274;&#x522B;&#x3001;&#x6570;&#x636E;&#x5B8C;&#x6574;&#x6027;&#x548C;&#x4FDD;&#x5BC6;&#x3002;IPsec &#x652F;&#x6301; IPv4 &#x548C; IPv6&#x3002;&#x5728; IPv6 &#x4E2D;&#xFF0C;AH &#x548C; ESP &#x90FD;&#x662F;&#x90FD;&#x662F;&#x6269;&#x5C55;&#x9996;&#x90E8;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;IPsec &#x6570;&#x636E;&#x62A5;&#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x6709;&#x8FD0;&#x8F93;&#x65B9;&#x5F0F;&#x548C;&#x96A7;&#x9053;&#x65B9;&#x5F0F;&#x3002; &#x8FD0;&#x8F93;&#x5C42;&#x7684;&#x5B89;&#x5168;&#x534F;&#x8BAE;&#x6709; SSL &#xFF08;&#x5B89;&#x5168;&#x5957;&#x63A5;&#x5B57;&#x5C42;&#xFF09;&#x548C; TLS &#xFF08;&#x8FD0;&#x8F93;&#x5C42;&#x5B89;&#x5168;&#xFF09;&#x3002;SSL &#x6700;&#x65B0;&#x7684;&#x7248;&#x672C;&#x662F; SSL 3.0 &#xFF0C;&#x5B83;&#x662F;&#x4FDD;&#x62A4;&#x4E07;&#x7EF4;&#x7F51; HTTP &#x901A;&#x4FE1;&#x91CF;&#x516C;&#x8BA4;&#x7684;&#x4E8B;&#x5B9E;&#x4E0A;&#x7684;&#x6807;&#x51C6;&#x3002;SSL &#x4E0D;&#x4EC5;&#x88AB;&#x6240;&#x6709;&#x5E38;&#x7528;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x548C;&#x4E07;&#x7EF4;&#x7F51;&#x670D;&#x52A1;&#x5668;&#x6240;&#x652F;&#x6301;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x662F; TLS &#x7684;&#x57FA;&#x7840;&#x3002; PGP &#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x5B89;&#x5168;&#x8F6F;&#x4EF6;&#x5305;&#xFF0C;&#x5305;&#x62EC;&#x52A0;&#x5BC6;&#x3001;&#x9274;&#x522B;&#x3001;&#x7535;&#x5B50;&#x7B7E;&#x540D;&#x548C;&#x538B;&#x7F29;&#x7B49;&#x6280;&#x672F;&#x3002;PGP &#x5E76;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x4EC0;&#x4E48;&#x65B0;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x628A;&#x73B0;&#x6709;&#x7684;&#x4E00;&#x4E9B;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#xFF08;&#x5982; RSA &#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x6216; MD5 &#x62A5;&#x6587;&#x6458;&#x8981;&#x7B97;&#x6CD5;&#xFF09;&#x7EFC;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x800C;&#x5DF2;&#x3002; &#x9632;&#x706B;&#x5899;&#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7F16;&#x7A0B;&#x7684;&#x8DEF;&#x7531;&#x5668;&#xFF0C;&#x5B89;&#x88C5;&#x5728;&#x4E00;&#x4E2A;&#x7F51;&#x70B9;&#x548C;&#x7F51;&#x7EDC;&#x7684;&#x5176;&#x4F59;&#x90E8;&#x5206;&#x4E4B;&#x95F4;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x5B9E;&#x65BD;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#x7B56;&#x7565;&#x3002;&#x9632;&#x706B;&#x5899;&#x91CC;&#x9762;&#x7684;&#x7F51;&#x7EDC;&#x79F0;&#x4E3A; &#x201C;&#x53EF;&#x4FE1;&#x7684;&#x7F51;&#x7EDC;&#x201D;&#xFF0C;&#x800C;&#x628A;&#x9632;&#x706B;&#x5899;&#x5916;&#x9762;&#x7684;&#x7F51;&#x7EDC;&#x79F0;&#x4E3A; &#x201C;&#x4E0D;&#x53EF;&#x4FE1;&#x7684;&#x7F51;&#x7EDC;&#x201D;&#x3002;&#x9632;&#x706B;&#x5899;&#x7684;&#x529F;&#x80FD;&#x6709;&#x4E24;&#x4E2A;&#xFF1A;&#x4E00;&#x4E2A;&#x662F;&#x963B;&#x6B62;&#xFF08;&#x4E3B;&#x8981;&#x7684;&#xFF09;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x5141;&#x8BB8;&#x3002; &#x9632;&#x706B;&#x5899;&#x6280;&#x672F;&#x5206;&#x4E3A;&#xFF1A;&#x7F51;&#x7EDC;&#x7EA7;&#x9632;&#x706B;&#x5899;&#xFF0C;&#x7528;&#x6765;&#x9632;&#x6B62;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x51FA;&#x73B0;&#x5916;&#x6765;&#x975E;&#x6CD5;&#x7684;&#x5165;&#x4FB5;&#xFF08;&#x5C5E;&#x4E8E;&#x8FD9;&#x7C7B;&#x7684;&#x6709;&#x5206;&#x7EC4;&#x8FC7;&#x6EE4;&#x548C;&#x6388;&#x6743;&#x670D;&#x52A1;&#x5668;&#xFF09;&#xFF1B;&#x5E94;&#x7528;&#x7EA7;&#x9632;&#x706B;&#x5899;&#xFF0C;&#x7528;&#x6765;&#x8FDB;&#x884C;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#xFF08;&#x7528;&#x5E94;&#x7528;&#x7F51;&#x5173;&#x6216;&#x4EE3;&#x7406;&#x670D;&#x52A1;&#x5668;&#x6765;&#x533A;&#x5206;&#x5404;&#x79CD;&#x5E94;&#x7528;&#xFF09;&#x3002; &#x5165;&#x4FB5;&#x68C0;&#x6D4B;&#x7CFB;&#x7EDF; IDS &#x662F;&#x5728;&#x5165;&#x4FB5;&#x5DF2;&#x7ECF;&#x5F00;&#x59CB;&#xFF0C;&#x4F46;&#x8FD8;&#x6CA1;&#x6709;&#x9020;&#x6210;&#x5371;&#x5BB3;&#x6216;&#x5728;&#x9020;&#x6210;&#x66F4;&#x5927;&#x5371;&#x5BB3;&#x524D;&#xFF0C;&#x53CA;&#x65F6;&#x68C0;&#x6D4B;&#x5230;&#x5165;&#x4FB5;&#xFF0C;&#x4EE5;&#x4FBF;&#x5C3D;&#x5FEB;&#x963B;&#x6B62;&#x5165;&#x4FB5;&#xFF0C;&#x628A;&#x5371;&#x5BB3;&#x964D;&#x4F4E;&#x5230;&#x6700;&#x5C0F;&#x3002; &#x7B2C; &#x4E5D; &#x7AE0; &#x65E0;&#x7EBF;&#x7F51;&#x7EDC;&#x548C;&#x79FB;&#x52A8;&#x7F51;&#x7EDC;&#x672C;&#x7AE0;&#x7684;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x65E0;&#x7EBF;&#x5C40;&#x57DF;&#x7F51;&#x53EF;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7C7B;&#x3002;&#x7B2C;&#x4E00;&#x7C7B;&#x662F;&#x6709;&#x56FA;&#x5B9A;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x7684;&#xFF0C;&#x7B2C;&#x4E8C;&#x7C7B;&#x662F;&#x65E0;&#x56FA;&#x5B9A;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x7684;&#x3002; &#x65E0;&#x7EBF;&#x5C40;&#x57DF;&#x7F51;&#x7684;&#x6807;&#x51C6;&#x662F; IEEE &#x7684; 802.11 &#x7CFB;&#x5217;&#x3002;&#x4F7F;&#x7528; 802.11 &#x7CFB;&#x5217;&#x534F;&#x8BAE;&#x7684;&#x5C40;&#x57DF;&#x7F51;&#x53C8;&#x79F0;&#x4E3A; Wi-Fi &#x3002; 802.11 &#x65E0;&#x7EBF;&#x4EE5;&#x592A;&#x7F51;&#x6807;&#x51C6;&#x4F7F;&#x7528;&#x661F;&#x5F62;&#x62D3;&#x6251;&#xFF0C;&#x5176;&#x4E2D;&#x5FC3;&#x53EB;&#x505A;&#x63A5;&#x5165;&#x70B9; AP &#xFF0C;&#x5B83;&#x5C31;&#x662F;&#x57FA;&#x672C;&#x670D;&#x52A1;&#x96C6;&#x5185;&#x7684;&#x57FA;&#x7AD9;&#x3002; &#x5E94;&#x5F53;&#x5F04;&#x6E05;&#x51E0;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x63A5;&#x5165;&#xFF1A;&#x56FA;&#x5B9A;&#x63A5;&#x5165;&#x3001;&#x79FB;&#x52A8;&#x63A5;&#x5165;&#x3001;&#x4FBF;&#x643A;&#x63A5;&#x5165;&#x548C;&#x6E38;&#x7267;&#x63A5;&#x5165;&#x3002; 802.11 &#x65E0;&#x7EBF;&#x4EE5;&#x592A;&#x7F51;&#x5728; MAC &#x5C42;&#x4F7F;&#x7528; CSMA/CA &#x534F;&#x8BAE;&#x3002;&#x4E0D;&#x80FD;&#x4F7F;&#x7528; CSMA/CD &#x7684;&#x539F;&#x56E0;&#x662F;&#xFF1A;&#x5728;&#x65E0;&#x7EBF;&#x5C40;&#x57DF;&#x7F51;&#x4E2D;&#xFF0C;&#x5E76;&#x975E;&#x6240;&#x6709;&#x7684;&#x7AD9;&#x70B9;&#x90FD;&#x80FD;&#x591F;&#x542C;&#x89C1;&#x5BF9;&#x65B9;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x6709;&#x969C;&#x788D;&#x7269;&#x51FA;&#x73B0;&#x5728;&#x7AD9;&#x70B9;&#x4E4B;&#x95F4;&#x65F6;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x65E0;&#x6CD5;&#x5B9E;&#x73B0;&#x78B0;&#x649E;&#x68C0;&#x6D4B;&#x3002;&#x4F7F;&#x7528; CSMA/CA &#x534F;&#x8BAE;&#x662F;&#x4E3A;&#x4E86;&#x5C3D;&#x91CF;&#x51CF;&#x5C0F;&#x78B0;&#x649E;&#x53D1;&#x751F;&#x7684;&#x6982;&#x7387;&#x3002; 802.11 &#x65E0;&#x7EBF;&#x5C40;&#x57DF;&#x7F51;&#x5728;&#x4F7F;&#x7528; CSMA/CA &#x7684;&#x540C;&#x65F6;&#xFF0C;&#x8FD8;&#x4F7F;&#x7528;&#x505C;&#x6B62;&#x7B49;&#x5F85;&#x534F;&#x8BAE;&#x3002; 802.11 &#x6807;&#x51C6;&#x89C4;&#x5B9A;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x7AD9;&#x5728;&#x5B8C;&#x6210;&#x53D1;&#x9001;&#x540E;&#xFF0C;&#x5FC5;&#x987B;&#x518D;&#x7B49;&#x5F85;&#x4E00;&#x6BB5;&#x5E27;&#x95F4;&#x95F4;&#x9694;&#x65F6;&#x95F4;&#x624D;&#x80FD;&#x53D1;&#x9001;&#x4E0B;&#x4E00;&#x5E27;&#x3002;&#x5E27;&#x95F4;&#x95F4;&#x9694;&#x7684;&#x957F;&#x77ED;&#x53D6;&#x51B3;&#x4E8E;&#x8BE5;&#x7AD9;&#x8981;&#x53D1;&#x9001;&#x7684;&#x5E27;&#x7684;&#x4F18;&#x5148;&#x7EA7;&#x3002; &#x5728; 802.11 &#x65E0;&#x7EBF;&#x5C40;&#x57DF;&#x7F51;&#x7684; MAC &#x5E27;&#x9996;&#x90E8;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x6301;&#x7EED;&#x671F;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x6765;&#x586B;&#x5165;&#x5728;&#x672C;&#x5E27;&#x7ED3;&#x675F;&#x540E;&#x8FD8;&#x8981;&#x5360;&#x7528;&#x4FE1;&#x9053;&#x591A;&#x5C11;&#x65F6;&#x95F4;&#xFF08;&#x4EE5;&#x5FAE;&#x79D2;&#x4E3A;&#x5355;&#x4F4D;&#xFF09;&#x3002; 802.11 &#x6807;&#x51C6;&#x5141;&#x8BB8;&#x8981;&#x53D1;&#x9001;&#x6570;&#x636E;&#x7684;&#x7AD9;&#x5BF9;&#x4FE1;&#x9053;&#x8FDB;&#x884C;&#x9884;&#x7EA6;&#xFF0C;&#x5373;&#x5728;&#x53D1;&#x9001;&#x6570;&#x636E;&#x5E27;&#x4E4B;&#x524D;&#x5148;&#x53D1;&#x9001; RTS &#x5E27;&#x8BF7;&#x6C42;&#x53D1;&#x9001;&#x3002;&#x5728;&#x6536;&#x5230;&#x54CD;&#x5E94;&#x5141;&#x8BB8;&#x53D1;&#x9001;&#x7684; CTS &#x5E27;&#x540E;&#xFF0C;&#x5C31;&#x53EF;&#x53D1;&#x9001;&#x6570;&#x636E;&#x5E27;&#x3002; 802.11 &#x7684; MAC &#x5E27;&#x5171;&#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x5373;&#x63A7;&#x5236;&#x5E27;&#x3001;&#x6570;&#x636E;&#x5E27;&#x548C;&#x7BA1;&#x7406;&#x5E27;&#x3001;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;MAC &#x5E27;&#x6709;&#x56DB;&#x4E2A;&#x5730;&#x5740;&#x5B57;&#x6BB5;&#x3002;&#x518D;&#x6709;&#x56FA;&#x5B9A;&#x57FA;&#x7840;&#x8BBE;&#x65BD;&#x7684;&#x65E0;&#x7EBF;&#x5C40;&#x57DF;&#x7F51;&#x4E2D;&#xFF0C;&#x53EA;&#x4F7F;&#x7528;&#x5176;&#x4E2D;&#x7684;&#x4E09;&#x4E2A;&#x5730;&#x5740;&#x5B57;&#x6BB5;&#xFF0C;&#x5373;&#x6E90;&#x5730;&#x5740;&#x3001;&#x76EE;&#x7684;&#x5730;&#x5740;&#x548C; AP &#x5730;&#x5740;&#x3002; &#x51E0;&#x79CD;&#x65E0;&#x7EBF;&#x7F51;&#x7EDC;&#x7B80;&#x4ECB;&#xFF1A;&#x65E0;&#x7EBF;&#x4E2A;&#x4EBA;&#x533A;&#x57DF;&#x7F51;&#xFF08;&#x84DD;&#x7259;&#x7CFB;&#x7EDF;&#x3001;ZigBee &#x548C;&#x8D85;&#x9AD8;&#x901F; WPAN&#xFF09;&#x3002;&#x65E0;&#x7EBF;&#x57CE;&#x57DF;&#x7F51; WiMAX&#x3002; &#x5F53;&#x8BA1;&#x7B97;&#x673A;&#x79FB;&#x52A8;&#x5230;&#x5916;&#x5730;&#x65F6;&#xFF0C;&#x79FB;&#x52A8; IP &#x6280;&#x672F;&#x5141;&#x8BB8;&#x8BE5;&#x8BA1;&#x7B97;&#x673A;&#x4ECD;&#x7136;&#x4FDD;&#x7559;&#x5176;&#x539F;&#x6765;&#x7684; IP &#x5730;&#x5740;&#x3002;&#x79FB;&#x52A8; IP &#x4F7F;&#x7528;&#x4E86;&#x4E00;&#x4E9B;&#x65B0;&#x6982;&#x5FF5;&#xFF0C;&#x5982;&#x6C38;&#x4E45;&#x5730;&#x5740;&#xFF0C;&#x6216;&#x5F52;&#x5C5E;&#x5730;&#x5740;&#x3001;&#x5F52;&#x5C5E;&#x7F51;&#x7EDC;&#xFF1B;&#x88AB;&#x8BBF;&#x95EE;&#x6216;&#x5916;&#x5730;&#x7F51;&#x7EDC;&#xFF1B;&#x5F52;&#x5C5E;&#x4EE3;&#x7406;&#x3001;&#x5916;&#x5730;&#x4EE3;&#x7406;&#xFF1B;&#x8F6C;&#x4EA4;&#x5730;&#x5740;&#x3001;&#x540C;&#x5740;&#x8F6C;&#x4EA4;&#x5730;&#x5740;&#x7B49;&#x3002; &#x79FB;&#x52A8; IP &#x4F7F;&#x7528;&#x4E86;&#x51E0;&#x79CD;&#x534F;&#x8BAE;&#xFF0C;&#x5982;&#x79FB;&#x52A8;&#x7AD9;&#x5230;&#x5916;&#x5730;&#x4EE3;&#x7406;&#x7684;&#x534F;&#x8BAE;&#xFF0C;&#x5916;&#x5730;&#x4EE3;&#x7406;&#x5230;&#x5F52;&#x5C5E;&#x4EE3;&#x7406;&#x7684;&#x767B;&#x8BB0;&#x534F;&#x8BAE;&#xFF0C;&#x5F52;&#x5C5E;&#x4EE3;&#x7406;&#x6570;&#x636E;&#x62A5;&#x5C01;&#x88C5;&#x534F;&#x8BAE;&#xFF0C;&#x5916;&#x5730;&#x4EE3;&#x7406;&#x62C6;&#x5C01;&#x534F;&#x8BAE;&#x7B49;&#x3002; &#x79FB;&#x52A8; IP &#x7684;&#x8DEF;&#x7531;&#x5668;&#x9009;&#x62E9;&#x6709;&#x95F4;&#x63A5;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x548C;&#x76F4;&#x63A5;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#xFF0C;&#x540E;&#x8005;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x901A;&#x4FE1;&#x8005;&#x4EE3;&#x7406;&#x548C;&#x951A;&#x5916;&#x5730;&#x4EE3;&#x7406;&#x3002; &#x8702;&#x7A9D;&#x79FB;&#x52A8;&#x901A;&#x4FE1;&#x7F51;&#x4E2D;&#x5BF9;&#x79FB;&#x52A8;&#x7528;&#x6237;&#x7684;&#x8DEF;&#x7531;&#x9009;&#x62E9;&#x9700;&#x8981;&#x5F04;&#x6E05;&#x4E00;&#x4E9B;&#x6982;&#x5FF5;&#xFF1A;&#x5F52;&#x5C5E;&#x4F4D;&#x7F6E;&#x5BC4;&#x5B58;&#x5668; HLR &#x548C;&#x6765;&#x8BBF;&#x7528;&#x6237;&#x4F4D;&#x7F6E;&#x5BC4;&#x5B58;&#x5668; VLR&#xFF0C;&#x79FB;&#x52A8;&#x7AD9;&#x6F2B;&#x6E38;&#x53F7;&#x7801; MSRN&#xFF0C;&#x5F52;&#x5C5E;&#x7F51;&#x7EDC;&#x4EA4;&#x6362;&#x4E2D;&#x5FC3;&#xFF0C;&#x5F52;&#x5C5E; MSC&#xFF0C;&#x951A; MSC&#xFF0C;&#x88AB;&#x8BBF;&#x7F51;&#x7EDC;&#x7684; MSC&#x3002; &#x7B2C; &#x5341; &#x7AE0; &#x4E0B;&#x4E00;&#x4EE3;&#x56E0;&#x7279;&#x7F51;&#x672C;&#x7AE0;&#x7684;&#x91CD;&#x8981;&#x6982;&#x5FF5; &#x8981;&#x89E3;&#x51B3; IP &#x5730;&#x5740;&#x8017;&#x5C3D;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6700;&#x6839;&#x672C;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x91C7;&#x7528;&#x5177;&#x6709;&#x66F4;&#x5927;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x7684;&#x65B0;&#x7248;&#x672C;&#x7684; IP &#x534F;&#x8BAE;&#xFF0C;&#x5373; IPv6. IPv6 &#x6240;&#x5E26;&#x6765;&#x7684;&#x4E3B;&#x8981;&#x53D8;&#x5316;&#x662F;&#xFF1A; 1. &#x66F4;&#x5927;&#x7684;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF08;&#x91C7;&#x7528; 128 &#x4F4D;&#x7684;&#x5730;&#x5740;&#xFF09;&#xFF1B; 2. &#x7075;&#x6D3B;&#x7684;&#x9996;&#x90E8;&#x683C;&#x5F0F;&#xFF1B; 3. &#x6539;&#x8FDB;&#x7684;&#x9009;&#x9879;&#xFF1B; 4. &#x652F;&#x6301;&#x5373;&#x63D2;&#x5373;&#x7528;&#xFF1B; 5. &#x652F;&#x6301;&#x8D44;&#x6E90;&#x7684;&#x9884;&#x5206;&#x914D;&#xFF1B; 6. IPv6 &#x9996;&#x90E8;&#x6539;&#x4E3A; 8 &#x5B57;&#x8282;&#x5BF9;&#x9F50;&#xFF1B; IPv6 &#x6570;&#x636E;&#x62A5;&#x5728;&#x57FA;&#x672C;&#x9996;&#x90E8;&#x7684;&#x540E;&#x9762;&#x5141;&#x8BB8;&#x6709;&#x96F6;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x6269;&#x5C55;&#x9996;&#x90E8;&#xFF0C;&#x518D;&#x540E;&#x9762;&#x662F;&#x6570;&#x636E;&#x3002;&#x6240;&#x6709;&#x7684;&#x6269;&#x5C55;&#x9996;&#x90E8;&#x548C;&#x6570;&#x636E;&#x5408;&#x8D77;&#x6765;&#x53EB;&#x505A;&#x6570;&#x636E;&#x62A5;&#x7684;&#x6709;&#x6548;&#x7684;&#x6709;&#x6548;&#x8F7D;&#x8377;&#x6216;&#x51C0;&#x8D1F;&#x8377;&#x3002; IPv6 &#x6570;&#x636E;&#x62A5;&#x7684;&#x76EE;&#x7684;&#x5730;&#x5740;&#x53EF;&#x4EE5;&#x662F;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x5730;&#x5740;&#x4E4B;&#x4E00;&#xFF1A;&#x5355;&#x64AD;&#x3001;&#x591A;&#x64AD;&#x548C;&#x4EFB;&#x64AD;&#x3002; IPv6 &#x7684;&#x5730;&#x5740;&#x4F7F;&#x7528;&#x5192;&#x53F7;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8BB0;&#x6CD5;&#x3002; &#x5411; IPv6 &#x8FC7;&#x6E21;&#x53EA;&#x80FD;&#x91C7;&#x7528;&#x9010;&#x6B65;&#x6F14;&#x8FDB;&#x7684;&#x529E;&#x6CD5;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x65B0;&#x5B89;&#x88C5;&#x7684; IPv6 &#x7CFB;&#x7EDF;&#x80FD;&#x591F;&#x5411;&#x540E;&#x517C;&#x5BB9;&#x3002;&#x5411; IPv6 &#x8FC7;&#x6E21;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x53CC;&#x534F;&#x8BAE;&#x6808;&#x6216;&#x4F7F;&#x7528;&#x96A7;&#x9053;&#x6280;&#x672F;&#x3002; MPLS &#x7684;&#x7279;&#x70B9;&#xFF1A; 1. &#x652F;&#x6301;&#x9762;&#x5411;&#x8FDE;&#x63A5;&#x7684;&#x670D;&#x52A1;&#x8D28;&#x91CF;&#x3002; 2. &#x652F;&#x6301;&#x6D41;&#x91CF;&#x5DE5;&#x7A0B;&#xFF0C;&#x5E73;&#x8861;&#x7F51;&#x7EDC;&#x8D1F;&#x8F7D;&#x3002; 3. &#x6709;&#x6548;&#x5730;&#x652F;&#x6301;&#x865A;&#x62DF;&#x4E13;&#x7528;&#x7F51; VPN&#x3002; MPLS &#x5728;&#x5165;&#x53E3;&#x7ED3;&#x70B9;&#x7ED9;&#x6BCF;&#x4E00; IP &#x6570;&#x636E;&#x62A5;&#x6253;&#x4E0A;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#x7684; &#x201C;&#x6807;&#x8BB0;&#x201D;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x6807;&#x8BB0;&#x5728;&#x7B2C;&#x4E8C;&#x5C42;&#xFF08;&#x94FE;&#x8DEF;&#x5C42;&#xFF09;&#x7528;&#x786C;&#x4EF6;&#x8FDB;&#x884C;&#x8F6C;&#x53D1;&#xFF08;&#x5728;&#x6807;&#x8BB0;&#x4EA4;&#x6362;&#x8DEF;&#x7531;&#x5668;&#x4E2D;&#x8FDB;&#x884C;&#x6807;&#x8BB0;&#x5BF9;&#x6362;&#xFF09;&#xFF0C;&#x56E0;&#x800C;&#x8F6C;&#x53D1;&#x901F;&#x7387;&#x5927;&#x5927;&#x52A0;&#x5FEB;&#x3002; &#x76EE;&#x524D; P2P &#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x5171;&#x4EAB;&#x5728;&#x56E0;&#x7279;&#x7F51;&#x6D41;&#x91CF;&#x4E2D;&#x5DF2;&#x5360;&#x636E;&#x6700;&#x5927;&#x7684;&#x4EFD;&#x989D;&#xFF0C;&#x6BD4;&#x4E07;&#x7EF4;&#x7F51;&#x5E94;&#x7528;&#x6240;&#x5360;&#x7684;&#x6BD4;&#x4F8B;&#x5927;&#x5F97;&#x591A;&#x3002; BT &#x662F;&#x5F88;&#x6D41;&#x884C;&#x7684;&#x4E00;&#x79CD; BT &#x5E94;&#x7528;&#x3002;BT &#x91C7;&#x7528;&#x201C;&#x6700;&#x7A00;&#x7F55;&#x7684;&#x4F18;&#x5148;&#x201D;&#x7684;&#x6280;&#x672F;&#xFF0C;&#x53EF;&#x4EE5;&#x5C3D;&#x65E9;&#x628A;&#x6700;&#x7A00;&#x7F55;&#x7684;&#x6587;&#x4EF6;&#x5757;&#x6536;&#x96C6;&#x5230;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x51E1;&#x5F53;&#x524D;&#x4EE5;&#x6700;&#x9AD8;&#x6570;&#x636E;&#x7387;&#x5411;&#x67D0;&#x4E2A;&#x5BF9;&#x7B49;&#x65B9;&#x4F20;&#x9001;&#x6587;&#x4EF6;&#x5757;&#x7684;&#x76F8;&#x90BB;&#x5BF9;&#x7B49;&#x65B9;&#xFF0C;&#x8BE5;&#x5BF9;&#x7B49;&#x65B9;&#x5C31;&#x4F18;&#x5148;&#x628A;&#x6240;&#x8BF7;&#x6C42;&#x7684;&#x6587;&#x4EF6;&#x5757;&#x4F20;&#x9001;&#x7ED9;&#x8FD9;&#x4E9B;&#x76F8;&#x90BB;&#x5BF9;&#x7B49;&#x65B9;&#x3002;&#x8FD9;&#x6837;&#x505A;&#x7684;&#x7ED3;&#x679C;&#x662F;&#xFF0C;&#x8FD9;&#x4E9B;&#x5BF9;&#x7B49;&#x65B9;&#x76F8;&#x4E92;&#x4E4B;&#x95F4;&#x90FD;&#x80FD;&#x591F;&#x4EE5;&#x4EE4;&#x4EBA;&#x6EE1;&#x610F;&#x7684;&#x901F;&#x7387;&#x4EA4;&#x6362;&#x6587;&#x4EF6;&#x5757;&#x3002;&#x5F53;&#x5BF9;&#x7B49;&#x65B9;&#x7684;&#x6570;&#x91CF;&#x5F88;&#x5927;&#x65F6;&#xFF0C;&#x91C7;&#x7528; P2P &#x65B9;&#x5F0F;&#x4E0B;&#x8F7D;&#x5927;&#x6587;&#x4EF6;&#xFF0C;&#x8981;&#x6BD4;&#x4F20;&#x7EDF;&#x7684;&#x5BA2;&#x6237;-&#x670D;&#x52A1;&#x5668;&#x65B9;&#x5F0F;&#x5FEB;&#x7684;&#x591A;&#x3002; L2Dwidget.init({});]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在 Ubuntu 中关闭触摸板]]></title>
    <url>%2F2018%2F03%2F22%2F%E5%9C%A8Ubuntu%E4%B8%AD%E5%85%B3%E9%97%AD%E8%A7%A6%E6%91%B8%E6%9D%BF%2F</url>
    <content type="text"><![CDATA[1sudo rmmod psmouse &#x7981;&#x7528;&#x89E6;&#x6478;&#x677F; 1sudo modprobe psmouse &#x542F;&#x7528;&#x89E6;&#x6478;&#x677F; L2Dwidget.init({});]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[五大常用算法：分支限界法]]></title>
    <url>%2F2018%2F03%2F22%2F%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%EF%BC%9A%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x57FA;&#x672C;&#x63CF;&#x8FF0; &#x7C7B;&#x4F3C;&#x4E8E;&#x56DE;&#x6EAF;&#x6CD5;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x5728;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#x6811; T &#x4E0A;&#x641C;&#x7D22;&#x95EE;&#x9898;&#x89E3;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x4F46;&#x5728;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x4E0E;&#x56DE;&#x6EAF;&#x6CD5;&#x7684;&#x6C42;&#x89E3;&#x76EE;&#x6807;&#x4E0D;&#x540C;&#x3002;&#x56DE;&#x6EAF;&#x6CD5;&#x7684;&#x6C42;&#x89E3;&#x76EE;&#x6807;&#x662F;&#x5219;&#x662F;&#x627E;&#x51FA;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x89E3;&#xFF0C;&#x800C;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x7684;&#x6C42;&#x89E3;&#x76EE;&#x6807;&#x5219;&#x662F;&#x627E;&#x51FA;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x7684;&#x4E00;&#x4E2A;&#x89E3;&#xFF0C;&#x6216;&#x662F;&#x5728;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x7684;&#x89E3;&#x4E2D;&#x627E;&#x51FA;&#x4F7F;&#x67D0;&#x4E00;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x503C;&#x8FBE;&#x5230;&#x6781;&#x5927;&#x6216;&#x6781;&#x5C0F;&#x7684;&#x89E3;&#xFF0C;&#x5373;&#x5728;&#x67D0;&#x79CD;&#x610F;&#x4E49;&#x4E0B;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x3002; - &#x5206;&#x652F;&#x641C;&#x7D22;&#x7B97;&#x6CD5; &#x6240;&#x8C13;&#x201C;&#x5206;&#x652F;&#x201D;&#x5C31;&#x662F;&#x91C7;&#x7528;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x4E00;&#x6B21;&#x641C;&#x7D22;E-&#x8282;&#x70B9;&#x7684;&#x6240;&#x6709;&#x5206;&#x652F;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6240;&#x6709;&#x76F8;&#x90BB;&#x8282;&#x70B9;&#xFF0C;&#x629B;&#x5F03;&#x4E0D;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5176;&#x4F59;&#x8282;&#x70B9;&#x52A0;&#x5165;&#x6D3B;&#x8282;&#x70B9;&#x8868;&#x3002;&#x7136;&#x540E;&#x4ECE;&#x8868;&#x4E2D;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x4F5C;&#x4E3A;&#x4E0B;&#x4E00;&#x4E2A;E-&#x8282;&#x70B9;&#xFF0C;&#x7EE7;&#x7EED;&#x641C;&#x7D22;&#x3002; &#x9009;&#x62E9;&#x4E0B;&#x4E00;&#x4E2A;E-&#x8282;&#x70B9;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x540C;&#xFF0C;&#x5219;&#x4F1A;&#x6709;&#x51E0;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x652F;&#x641C;&#x7D22;&#x65B9;&#x5F0F;&#x3002; FIFO &#x641C;&#x7D22; LIFO &#x641C;&#x7D22; &#x4F18;&#x5148;&#x961F;&#x5217;&#x5F0F;&#x641C;&#x7D22; &#x4E8C;&#x3001;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x7684;&#x4E00;&#x822C;&#x8FC7;&#x7A0B; &#x7531;&#x4E8E;&#x6C42;&#x89E3;&#x76EE;&#x6807;&#x4E0D;&#x540C;&#xFF0C;&#x5BFC;&#x81F4;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x4E0E;&#x56DE;&#x6EAF;&#x6CD5;&#x5728;&#x89E3;&#x7A7A;&#x95F4;&#x6811; T &#x4E0A;&#x7684;&#x641C;&#x7D22;&#x65B9;&#x5F0F;&#x4E5F;&#x4E0D;&#x76F8;&#x540C;&#x3002;&#x56DE;&#x6EAF;&#x6CD5;&#x4EE5;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x7684;&#x65B9;&#x5F0F;&#x641C;&#x7D22;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#xFF34;&#xFF0C;&#x800C;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x5219;&#x4EE5;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x6216;&#x4EE5;&#x6700;&#x5C0F;&#x8017;&#x8D39;&#x4F18;&#x5148;&#x7684;&#x65B9;&#x5F0F;&#x641C;&#x7D22;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#xFF34;&#x3002; &#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x7684;&#x641C;&#x7D22;&#x7B56;&#x7565;&#x662F;&#xFF1A;&#x5728;&#x6269;&#x5C55;&#x8282;&#x70B9;&#x5904;&#xFF0C;&#x5148;&#x751F;&#x6210;&#x5176;&#x6240;&#x6709;&#x7684;&#x513F;&#x5B50;&#x8282;&#x70B9;&#xFF08;&#x5206;&#x652F;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4ECE;&#x5F53;&#x524D;&#x7684;&#x6D3B;&#x8282;&#x70B9;&#x8868;&#x4E2D;&#x9009;&#x62E9;&#x4E0B;&#x4E00;&#x4E2A;&#x6269;&#x5C55;&#x8282;&#x70B9;&#xFF0C;&#x4E3A;&#x4E86;&#x6709;&#x6548;&#x5730;&#x9009;&#x62E9;&#x4E0B;&#x4E00;&#x6269;&#x5C55;&#x8282;&#x70B9;&#xFF0C;&#x4EE5;&#x52A0;&#x901F;&#x641C;&#x7D22;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x5728;&#x6BCF;&#x4E00;&#x6D3B;&#x8282;&#x70B9;&#x5904;&#xFF0C;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x503C;&#xFF08;&#x9650;&#x754C;&#xFF09;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x8FD9;&#x4E9B;&#x5DF2;&#x8BA1;&#x7B97;&#x51FA;&#x7684;&#x51FD;&#x6570;&#x503C;&#xFF0C;&#x4ECE;&#x5F53;&#x524D;&#x6D3B;&#x8282;&#x70B9;&#x8868;&#x4E2D;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6700;&#x6709;&#x5229;&#x7684;&#x7684;&#x8282;&#x70B9;&#x4F5C;&#x4E3A;&#x6269;&#x5C55;&#x8282;&#x70B9;&#xFF0C;&#x4F7F;&#x641C;&#x7D22;&#x671D;&#x7740;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#x4E0A;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x5206;&#x652F;&#x63A8;&#x8FDB;&#xFF0C;&#x4EE5;&#x4FBF;&#x5C3D;&#x5FEB;&#x5730;&#x627E;&#x51FA;&#x4E00;&#x4E2A;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x5E38;&#x4EE5;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x6216;&#x4EE5;&#x6700;&#x5C0F;&#x8017;&#x8D39;&#xFF08;&#x6700;&#x5927;&#x6548;&#x76CA;&#xFF09;&#x4F18;&#x5148;&#x7684;&#x65B9;&#x5F0F;&#x641C;&#x7D22;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#x3002;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#x662F;&#x8868;&#x793A;&#x95EE;&#x9898;&#x89E3;&#x7A7A;&#x95F4;&#x7684;&#x4E00;&#x68F5;&#x6709;&#x5E8F;&#x6811;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x6709;&#x5B50;&#x96C6;&#x6811;&#x548C;&#x6392;&#x5217;&#x6811;&#xFF0C;&#x5728;&#x641C;&#x7D22;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#x65F6;&#xFF0C;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x4E0E;&#x56DE;&#x6EAF;&#x6CD5;&#x5BF9;&#x5F53;&#x524D;&#x6269;&#x5C55;&#x8282;&#x70B9;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x6269;&#x5C55;&#x65B9;&#x5F0F;&#x4E0D;&#x540C;&#x3002;&#x5728;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x6D3B;&#x8282;&#x70B9;&#x53EA;&#x6709;&#x4E00;&#x6B21;&#x673A;&#x4F1A;&#x79F0;&#x4E3A;&#x6269;&#x5C55;&#x8282;&#x70B9;&#x3002;&#x6D3B;&#x8282;&#x70B9;&#x4E00;&#x65E6;&#x6210;&#x4E3A;&#x6269;&#x5C55;&#x8282;&#x70B9;&#xFF0C;&#x5C31;&#x4E00;&#x6B21;&#x6027;&#x4EA7;&#x751F;&#x5176;&#x6240;&#x6709;&#x513F;&#x5B50;&#x8282;&#x70B9;&#x3002;&#x5728;&#x8FD9;&#x4E9B;&#x513F;&#x5B50;&#x8282;&#x70B9;&#x4E2D;&#xFF0C;&#x90A3;&#x4E9B;&#x5BFC;&#x81F4;&#x4E0D;&#x53EF;&#x884C;&#x89E3;&#x6216;&#x5BFC;&#x81F4;&#x975E;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x513F;&#x5B50;&#x8282;&#x70B9;&#x88AB;&#x820D;&#x5F03;&#xFF0C;&#x5176;&#x4F59;&#x513F;&#x5B50;&#x8282;&#x70B9;&#x88AB;&#x52A0;&#x5165;&#x6D3B;&#x8282;&#x70B9;&#x8868;&#x4E2D;&#x3002;&#x6B64;&#x540E;&#xFF0C;&#x4ECE;&#x6D3B;&#x8282;&#x70B9;&#x8868;&#x4E2D;&#x53D6;&#x4E0B;&#x4E00;&#x8282;&#x70B9;&#x6210;&#x4E3A;&#x5F53;&#x524D;&#x6269;&#x5C55;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x91CD;&#x590D;&#x4E0A;&#x8FF0;&#x8282;&#x70B9;&#x6269;&#x5C55;&#x8FC7;&#x7A0B;&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E00;&#x76F4;&#x6301;&#x7EED;&#x5230;&#x627E;&#x5230;&#x6240;&#x6709;&#x6C42;&#x7684;&#x89E3;&#x6216;&#x6D3B;&#x8282;&#x70B9;&#x8868;&#x4E3A;&#x7A7A;&#x65F6;&#x4E3A;&#x6B62;&#x3002; &#x4E09;&#x3001;&#x56DE;&#x6EAF;&#x6CD5;&#x548C;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x7684;&#x4E00;&#x4E9B;&#x533A;&#x522B; &#x6709;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x5176;&#x5B9E;&#x65E0;&#x8BBA;&#x7528;&#x56DE;&#x6EAF;&#x6CD5;&#x8FD8;&#x662F;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x90FD;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x5F88;&#x597D;&#x7684;&#x89E3;&#x51B3;&#xFF0C;&#x4F46;&#x662F;&#x53E6;&#x5916;&#x4E00;&#x4E9B;&#x5219;&#x4E0D;&#x7136;&#x3002;&#x4E5F;&#x8BB8;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5177;&#x4F53;&#x4E00;&#x4E9B;&#x7684;&#x5206;&#x6790;&#x2014;&#x2014;&#x5230;&#x5E95;&#x4F55;&#x65F6;&#x4F7F;&#x7528;&#x5206;&#x652F;&#x9650;&#x754C;&#x800C;&#x4F55;&#x65F6;&#x4F7F;&#x7528;&#x56DE;&#x6EAF;&#x6CD5;&#x5462;&#xFF1F; &#x56DE;&#x6EAF;&#x6CD5;&#x548C;&#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x7684;&#x4E00;&#x4E9B;&#x533A;&#x522B;&#xFF1A; &#x65B9;&#x6CD5;&#x5BF9;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#x7684;&#x641C;&#x7D22;&#x65B9;&#x5F0F; &#x50A8;&#x5B58;&#x8282;&#x70B9;&#x7684;&#x5E38;&#x7528;&#x6570;&#x636E;&#x7ED3;&#x6784; &#x8282;&#x70B9;&#x50A8;&#x5B58;&#x7279;&#x6027;&#x5E38;&#x7528;&#x5E94;&#x7528; &#x56DE;&#x6EAF;&#x6CD5;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x641C;&#x7D22;&#x5806;&#x6808;&#x6D3B;&#x8282;&#x70B9;&#x7684;&#x6240;&#x6709;&#x53EF;&#x884C;&#x5B50;&#x8282;&#x70B9;&#x88AB;&#x904D;&#x5386;&#x540E;&#x624D;&#x88AB;&#x4ECE;&#x6808;&#x4E2D;&#x5F39;&#x51FA;&#xFF0C;&#x627E;&#x51FA;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x7684;&#x6240;&#x6709;&#x89E3; &#x5206;&#x652F;&#x9650;&#x754C;&#x6CD5;&#x5E7F;&#x5EA6;&#x4F18;&#x5148;&#x6216;&#x6700;&#x5C0F;&#x6D88;&#x8017;&#x4F18;&#x5148;&#x641C;&#x7D22;&#x961F;&#x5217; &#xFF0C;&#x4F18;&#x5148;&#x961F;&#x5217;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x53EA;&#x6709;&#x4E00;&#x6B21;&#x6210;&#x4E3A;&#x6D3B;&#x8282;&#x70B9;&#x7684;&#x673A;&#x4F1A;&#x627E;&#x51FA;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x7684;&#x4E00;&#x4E2A;&#x89E3;&#x6216;&#x7279;&#x5B9A;&#x610F;&#x4E49;&#x4E0B;&#x7684;&#x6700;&#x4F18;&#x89E3; L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>分支限界法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[五大常用算法：动态规划]]></title>
    <url>%2F2018%2F03%2F22%2F%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%EF%BC%9A%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x57FA;&#x672C;&#x6982;&#x5FF5; &#x52A8;&#x6001;&#x89C4;&#x5212;&#x8FC7;&#x7A0B;&#x662F;&#xFF1A;&#x6BCF;&#x6B21;&#x51B3;&#x7B56;&#x4F9D;&#x8D56;&#x4E8E;&#x5F53;&#x524D;&#x72B6;&#x6001;&#xFF0C;&#x6709;&#x968F;&#x5373;&#x5F15;&#x8D77;&#x72B6;&#x6001;&#x7684;&#x8F6C;&#x79FB;&#x3002;&#x4E00;&#x4E2A;&#x51B3;&#x7B56;&#x5E8F;&#x5217;&#x5C31;&#x662F;&#x5728;&#x53D8;&#x5316;&#x7684;&#x72B6;&#x6001;&#x4E2D;&#x4EA7;&#x751F;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x8FD9;&#x79CD;&#x591A;&#x9636;&#x6BB5;&#x6700;&#x4F18;&#x5316;&#x51B3;&#x7B56;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x79F0;&#x4E3A;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x3002; &#x4E8C;&#x3001;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x53CA;&#x7B56;&#x7565; &#x57FA;&#x672C;&#x601D;&#x60F3;&#x4E8E;&#x5206;&#x6CBB;&#x6CD5;&#x7C7B;&#x4F3C;&#xFF0C;&#x4E5F;&#x662F;&#x5C06;&#x5F85;&#x6C42;&#x89E3;&#x7684;&#x95EE;&#x9898;&#x5206;&#x89E3;&#x4E3A;&#x82E5;&#x5E72;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#xFF08;&#x9636;&#x6BB5;&#xFF09;&#xFF0C;&#x6309;&#x987A;&#x5E8F;&#x6C42;&#x89E3;&#x5B50;&#x9636;&#x6BB5;&#xFF0C;&#x524D;&#x4E00;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#xFF0C;&#x4E3A;&#x540E;&#x4E00;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x6C42;&#x89E3;&#x63D0;&#x4F9B;&#x4E86;&#x6709;&#x7528;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5728;&#x6C42;&#x89E3;&#x4EFB;&#x4E00;&#x5B50;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x5217;&#x51FA;&#x5404;&#x79CD;&#x53EF;&#x80FD;&#x7684;&#x5C40;&#x90E8;&#x89E3;&#xFF0C;&#x901A;&#x8FC7;&#x51B3;&#x7B56;&#x4FDD;&#x7559;&#x90A3;&#x4E9B;&#x6709;&#x53EF;&#x80FD;&#x8FBE;&#x5230;&#x6700;&#x4F18;&#x7684;&#x5C40;&#x90E8;&#x89E3;&#xFF0C;&#x4E22;&#x5F03;&#x5176;&#x4ED6;&#x5C40;&#x90E8;&#x89E3;&#x3002;&#x4F9D;&#x6B21;&#x89E3;&#x51B3;&#x5404;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x521D;&#x59CB;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x3002; &#x7531;&#x4E8E;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x591A;&#x6570;&#x6709;&#x91CD;&#x53E0;&#x5B50;&#x95EE;&#x9898;&#x8FD9;&#x4E00;&#x7279;&#x70B9;&#xFF0C;&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x91CD;&#x590D;&#x8BA1;&#x7B97;&#xFF0C;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#x53EA;&#x89E3;&#x4E00;&#x6B21;&#xFF0C;&#x5C06;&#x5176;&#x4E0D;&#x540C;&#x9636;&#x6BB5;&#x7684;&#x4E0D;&#x540C;&#x72B6;&#x6001;&#x4FDD;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x4E2D;&#x3002; &#x4E0E;&#x5206;&#x6CBB;&#x6CD5;&#x6700;&#x5927;&#x7684;&#x5DEE;&#x522B;&#x662F;&#xFF1A;&#x9002;&#x5408;&#x4E8E;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6CD5;&#x6C42;&#x89E3;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x7ECF;&#x5206;&#x89E3;&#x540E;&#x5F97;&#x5230;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x5F80;&#x5F80;&#x4E0D;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x7684;&#xFF08;&#x5373;&#x4E0B;&#x4E00;&#x4E2A;&#x5B50;&#x9636;&#x6BB5;&#x7684;&#x6C42;&#x89E3;&#x662F;&#x5EFA;&#x7ACB;&#x5728;&#x4E0A;&#x4E00;&#x4E2A;&#x5B50;&#x9636;&#x6BB5;&#x7684;&#x89E3;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x8FDB;&#x884C;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x6C42;&#x89E3;&#xFF09;&#x3002; &#x4E09;&#x3001;&#x9002;&#x7528;&#x7684;&#x60C5;&#x51B5; &#x80FD;&#x91C7;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6C42;&#x89E3;&#x7684;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x822C;&#x8981;&#x5177;&#x6709;&#x4E09;&#x4E2A;&#x6027;&#x8D28;&#xFF1A; &#x6700;&#x4F18;&#x5316;&#x539F;&#x7406;&#xFF1A;&#x5982;&#x679C;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x6240;&#x5305;&#x542B;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x4E5F;&#x662F;&#x6700;&#x4F18;&#x7684;&#xFF0C;&#x5C31;&#x79F0;&#x8BE5;&#x95EE;&#x9898;&#x5177;&#x6709;&#x6700;&#x4F18;&#x5B50;&#x7ED3;&#x6784;&#xFF0C;&#x5373;&#x6EE1;&#x8DB3;&#x6700;&#x4F18;&#x5316;&#x539F;&#x7406;&#x3002; &#x65E0;&#x540E;&#x6548;&#x6027;&#xFF1A;&#x5373;&#x67D0;&#x9636;&#x6BB5;&#x72B6;&#x6001;&#x4E00;&#x65E6;&#x786E;&#x5B9A;&#xFF0C;&#x5C31;&#x4E0D;&#x53D7;&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x4EE5;&#x540E;&#x51B3;&#x7B56;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x67D0;&#x72B6;&#x6001;&#x4EE5;&#x540E;&#x7684;&#x8FC7;&#x7A0B;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x4EE5;&#x524D;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x53EA;&#x4E0E;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x6709;&#x5173;&#x3002; &#x6709;&#x91CD;&#x53E0;&#x5B50;&#x95EE;&#x9898;&#xFF1A;&#x5373;&#x5B50;&#x95EE;&#x9898;&#x4E4B;&#x95F4;&#x662F;&#x4E0D;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x4E00;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#x5728;&#x4E0B;&#x4E00;&#x9636;&#x6BB5;&#x51B3;&#x7B56;&#x4E2D;&#x53EF;&#x80FD;&#x88AB;&#x591A;&#x6B21;&#x4F7F;&#x7528;&#x5230;&#x3002;&#xFF08;&#x8BE5;&#x6027;&#x8D28;&#x5E76;&#x4E0D;&#x662F;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x9002;&#x7528;&#x7684;&#x5FC5;&#x8981;&#x6761;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8FD9;&#x6761;&#x6027;&#x8D28;&#xFF0C;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7B97;&#x6CD5;&#x540C;&#x5176;&#x4ED6;&#x7B97;&#x6CD5;&#x76F8;&#x6BD4;&#x5C31;&#x4E0D;&#x5177;&#x5907;&#x4F18;&#x52BF;&#xFF09; &#x56DB;&#x3001;&#x6C42;&#x89E3;&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4; &#x52A8;&#x6001;&#x89C4;&#x5212;&#x6240;&#x5904;&#x7406;&#x7684;&#x95EE;&#x9898;&#x662F;&#x4E00;&#x4E2A;&#x591A;&#x9636;&#x6BB5;&#x51B3;&#x7B56;&#x95EE;&#x9898;&#xFF0C;&#x4E00;&#x822C;&#x7531;&#x521D;&#x59CB;&#x72B6;&#x6001;&#x5F00;&#x59CB;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;&#x4E2D;&#x95F4;&#x9636;&#x6BB5;&#x51B3;&#x7B56;&#x7684;&#x9009;&#x62E9;&#xFF0C;&#x8FBE;&#x5230;&#x7ED3;&#x675F;&#x72B6;&#x6001;&#x3002;&#x8FD9;&#x4E9B;&#x51B3;&#x7B56;&#x5F62;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x51B3;&#x7B56;&#x5E8F;&#x5217;&#xFF0C;&#x540C;&#x65F6;&#x786E;&#x5B9A;&#x4E86;&#x5B8C;&#x6210;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x7684;&#x4E00;&#x6761;&#x6D3B;&#x52A8;&#x8DEF;&#x7EBF;&#xFF08;&#x901A;&#x5E38;&#x662F;&#x6C42;&#x89E3;&#x6700;&#x4F18;&#x7684;&#x6D3B;&#x52A8;&#x8DEF;&#x7EBF;&#xFF09;&#x3002;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x8BBE;&#x8BA1;&#x90FD;&#x6709;&#x7740;&#x4E00;&#x5B9A;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x4E00;&#x822C;&#x8981;&#x7ECF;&#x5386;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; 1&#x521D;&#x59CB;&#x72B6;&#x6001;-&gt; &#x7ED3;&#x675F;&#x72B6;&#x6001; : -&gt; &#x51B3;&#x7B56;1 -&gt; &#x51B3;&#x7B56;2 -&gt;...-&gt; &#x51B3;&#x7B56;n -&gt; &#x5212;&#x5206;&#x9636;&#x6BB5;&#xFF1A;&#x6309;&#x7167;&#x95EE;&#x9898;&#x7684;&#x65F6;&#x95F4;&#x6216;&#x7A7A;&#x95F4;&#x7279;&#x5F81;&#xFF0C;&#x628A;&#x95EE;&#x9898;&#x5206;&#x4E3A;&#x82E5;&#x5E72;&#x9636;&#x6BB5;&#x3002;&#x5728;&#x5212;&#x5206;&#x9636;&#x6BB5;&#x65F6;&#xFF0C;&#x6CE8;&#x610F;&#x5212;&#x5206;&#x540E;&#x7684;&#x9636;&#x6BB5;&#x4E00;&#x5B9A;&#x8981;&#x662F;&#x8981;&#x6709;&#x5E8F;&#x7684;&#x6216;&#x8005;&#x662F;&#x53EF;&#x6392;&#x5E8F;&#x7684;&#xFF0C;&#x5426;&#x5219;&#x95EE;&#x9898;&#x5C31;&#x65E0;&#x6CD5;&#x6C42;&#x89E3;&#x3002; &#x786E;&#x5B9A;&#x72B6;&#x6001;&#x548C;&#x72B6;&#x6001;&#x53D8;&#x91CF;&#xFF1A;&#x5C06;&#x95EE;&#x9898;&#x53D1;&#x5C55;&#x5230;&#x5404;&#x4E2A;&#x9636;&#x6BB5;&#x65F6;&#x6240;&#x5904;&#x4E8E;&#x7684;&#x5404;&#x79CD;&#x5BA2;&#x89C2;&#x60C5;&#x51B5;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x72B6;&#x6001;&#x8868;&#x793A;&#x51FA;&#x6765;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x72B6;&#x6001;&#x7684;&#x9009;&#x62E9;&#x8981;&#x6EE1;&#x8DB3;&#x65E0;&#x540E;&#x6548;&#x6027;&#x3002; &#x786E;&#x5B9A;&#x51B3;&#x7B56;&#x5E76;&#x5199;&#x51FA;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#xFF1A;&#x56E0;&#x4E3A;&#x51B3;&#x7B56;&#x548C;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x6709;&#x7740;&#x5929;&#x7136;&#x7684;&#x8054;&#x7CFB;&#xFF0C;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x5C31;&#x662F;&#x6839;&#x636E;&#x4E0A;&#x4E00;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x548C;&#x51B3;&#x7B56;&#x6765;&#x5BFC;&#x51FA;&#x672C;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x786E;&#x5B9A;&#x4E86;&#x51B3;&#x7B56;&#xFF0C;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#x4E5F;&#x5C31;&#x53EF;&#x5199;&#x51FA;&#x3002;&#x4F46;&#x4E8B;&#x5B9E;&#x4E0A;&#x5E38;&#x5E38;&#x662F;&#x53CD;&#x8FC7;&#x6765;&#x505A;&#xFF0C;&#x6839;&#x636E;&#x76F8;&#x90BB;&#x4E24;&#x4E2A;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x6765;&#x786E;&#x5B9A;&#x51B3;&#x7B56;&#x65B9;&#x6CD5;&#x548C;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#x3002; &#x5BFB;&#x627E;&#x8FB9;&#x754C;&#x6761;&#x4EF6;&#xFF1A;&#x7ED9;&#x51FA;&#x7684;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#x662F;&#x4E00;&#x4E2A;&#x9012;&#x63A8;&#x5F0F;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x9012;&#x63A8;&#x7684;&#x7EC8;&#x6B62;&#x6761;&#x4EF6;&#x6216;&#x8FB9;&#x754C;&#x6761;&#x4EF6;&#x3002; &#x4E00;&#x822C;&#xFF0C;&#x53EA;&#x8981;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x9636;&#x6BB5;&#xFF0C;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x51B3;&#x7B56;&#x786E;&#x5B9A;&#x4E86;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5199;&#x51FA;&#x72B6;&#x6001;&#x8F6C;&#x79FB;&#x65B9;&#x7A0B;&#xFF08;&#x5305;&#x62EC;&#x8FB9;&#x754C;&#x6761;&#x4EF6;&#xFF09;&#x3002; &#x5B9E;&#x9645;&#x5E94;&#x7528;&#x4E2D;&#x53EF;&#x4EE5;&#x6309;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x7B80;&#x5316;&#x7684;&#x6B65;&#x9AA4;&#x8FDB;&#x884C;&#x8BBE;&#x8BA1;&#xFF1A; &#x5206;&#x6790;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x6027;&#x8D28;&#xFF0C;&#x5E76;&#x523B;&#x753B;&#x5176;&#x7ED3;&#x6784;&#x7279;&#x5F81;&#x3002; &#x9012;&#x5F52;&#x7684;&#x5B9A;&#x4E49;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x5DF2;&#x81EA;&#x5E95;&#x5411;&#x4E0A;&#x6216;&#x81EA;&#x9876;&#x5411;&#x4E0B;&#x7684;&#x8BB0;&#x5FC6;&#x5316;&#x65B9;&#x5F0F;&#xFF08;&#x5907;&#x5FD8;&#x5F55;&#x6CD5;&#xFF09;&#x8BA1;&#x7B97;&#x51FA;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x6839;&#x636E;&#x8BA1;&#x7B97;&#x6700;&#x4F18;&#x503C;&#x65F6;&#x5F97;&#x5230;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6784;&#x9020;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x4E94;&#x3001;&#x7B97;&#x6CD5;&#x5B9E;&#x73B0;&#x7684;&#x8BF4;&#x660E; &#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x4E3B;&#x8981;&#x96BE;&#x70B9;&#x5728;&#x4E8E;&#x7406;&#x8BBA;&#x4E0A;&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E0A;&#x9762;&#x56DB;&#x4E2A;&#x6B65;&#x9AA4;&#x7684;&#x786E;&#x5B9A;&#xFF0C;&#x4E00;&#x65E6;&#x8BBE;&#x8BA1;&#x5B8C;&#x6210;&#xFF0C;&#x5B9E;&#x73B0;&#x90E8;&#x5206;&#x5C31;&#x4F1A;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x3002; &#x4F7F;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6C42;&#x89E3;&#x95EE;&#x9898;&#xFF0C;&#x6700;&#x91CD;&#x8981;&#x7684;&#x5C31;&#x662F;&#x786E;&#x5B9A;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x4E09;&#x8981;&#x7D20;&#xFF1A; &#x95EE;&#x9898;&#x7684;&#x9636;&#x6BB5; &#x6BCF;&#x4E2A;&#x9636;&#x6BB5;&#x7684;&#x72B6;&#x6001; &#x4ECE;&#x524D;&#x4E00;&#x4E2A;&#x9636;&#x6BB5;&#x8F6C;&#x5316;&#x5230;&#x540E;&#x4E00;&#x4E2A;&#x9636;&#x6BB5;&#x4E4B;&#x95F4;&#x7684;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x3002; &#x9012;&#x63A8;&#x5173;&#x7CFB;&#x5FC5;&#x987B;&#x662F;&#x4ECE;&#x6B21;&#x5C0F;&#x7684;&#x95EE;&#x9898;&#x5F00;&#x59CB;&#x5230;&#x8F83;&#x5927;&#x7684;&#x95EE;&#x9898;&#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x5316;&#xFF0C;&#x4ECE;&#x8FD9;&#x4E2A;&#x89D2;&#x5EA6;&#x6765;&#x8BF4;&#xFF0C;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x5F80;&#x5F80;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x9012;&#x63A8;&#x7A0B;&#x5E8F;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x4E0D;&#x8FC7;&#x56E0;&#x4E3A;&#x9012;&#x63A8;&#x53EF;&#x4EE5;&#x5145;&#x5206;&#x5229;&#x7528;&#x524D;&#x9762;&#x4FDD;&#x5B58;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x6765;&#x51CF;&#x5C11;&#x91CD;&#x590D;&#x8BA1;&#x7B97;&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x5927;&#x89C4;&#x6A21;&#x95EE;&#x9898;&#x6765;&#x8BF4;&#xFF0C;&#x6709;&#x9012;&#x5F52;&#x4E0D;&#x53EF;&#x6BD4;&#x62DF;&#x7684;&#x4F18;&#x52BF;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7B97;&#x6CD5;&#x7684;&#x6838;&#x5FC3;&#x4E4B;&#x5904;&#x3002; &#x786E;&#x5B9A;&#x4E86;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x7684;&#x8FD9;&#x4E09;&#x4E2A;&#x8981;&#x7D20;&#xFF0C;&#x6574;&#x4E2A;&#x6C42;&#x89E3;&#x8FC7;&#x7A0B;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x4E00;&#x4E2A;&#x6700;&#x4F18;&#x51B3;&#x7B56;&#x8868;&#x6765;&#x63CF;&#x8FF0;&#xFF0C;&#x6700;&#x6709;&#x51B3;&#x7B56;&#x8868;&#x662F;&#x4E00;&#x4E2A;&#x4E8C;&#x7EF4;&#x8868;&#xFF0C;&#x5176;&#x4E2D;&#x884C;&#x8868;&#x793A;&#x51B3;&#x7B56;&#x7684;&#x9636;&#x6BB5;&#xFF0C;&#x5217;&#x8868;&#x662F;&#x95EE;&#x9898;&#x72B6;&#x6001;&#xFF0C;&#x8868;&#x683C;&#x9700;&#x8981;&#x586B;&#x5199;&#x7684;&#x6570;&#x636E;&#x4E00;&#x822C;&#x5BF9;&#x5E94;&#x6B64;&#x95EE;&#x9898;&#x7684;&#x5728;&#x67D0;&#x4E2A;&#x72B6;&#x6001;&#x4E0B;&#x7684;&#x6700;&#x4F18;&#x503C;&#xFF08;&#x5982;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#xFF0C;&#x6700;&#x957F;&#x516C;&#x5171;&#x5B50;&#x5E8F;&#x5217;&#xFF0C;&#x6700;&#x5927;&#x4EF7;&#x503C;&#x7B49;&#xFF09;&#xFF0C;&#x586B;&#x8868;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x6839;&#x636E;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#xFF0C;&#x4ECE; 1 &#x884C; 1 &#x5217;&#x5F00;&#x59CB;&#xFF0C;&#x4EE5;&#x884C;&#x6216;&#x8005;&#x5217;&#x4F18;&#x5148;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x4F9D;&#x6B21;&#x586B;&#x5199;&#x8868;&#x683C;&#xFF0C;&#x6700;&#x540E;&#x6839;&#x636E;&#x6574;&#x4E2A;&#x8868;&#x683C;&#x7684;&#x6570;&#x636E;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x53D6;&#x820D;&#x6216;&#x8005;&#x8FD0;&#x7B97;&#x6C42;&#x5F97;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x3002; $$ f(n, m) = max { f(n - 1, m), f(n - 1, m - w[n]) + P(n, m)} $$ L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[五大常用算法：贪心算法]]></title>
    <url>%2F2018%2F03%2F22%2F%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%EF%BC%9A%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x57FA;&#x672C;&#x6982;&#x5FF5;&#x6240;&#x8C13;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x662F;&#x6307;&#xFF0C;&#x5728;&#x5BF9;&#x95EE;&#x9898;&#x6C42;&#x89E3;&#x65F6;&#xFF0C;&#x603B;&#x662F;&#x505A;&#x51FA;&#x5728;&#x5F53;&#x524D;&#x770B;&#x6765;&#x662F;&#x6700;&#x597D;&#x7684;&#x9009;&#x62E9;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4E0D;&#x4ECE;&#x6574;&#x4F53;&#x6700;&#x4F18;&#x4E0A;&#x52A0;&#x4EE5;&#x8003;&#x8651;&#xFF0C;&#x4ED6;&#x6240;&#x505A;&#x51FA;&#x7684;&#x4EC5;&#x662F;&#x5728;&#x67D0;&#x79CD;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x6CA1;&#x6709;&#x56FA;&#x5B9A;&#x7684;&#x7B97;&#x6CD5;&#x6846;&#x67B6;&#xFF0C;&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x7684;&#x5173;&#x952E;&#x662F;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x7684;&#x9009;&#x62E9;&#x3002;&#x5FC5;&#x987B;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x4E0D;&#x662F;&#x5BF9;&#x6240;&#x6709;&#x95EE;&#x9898;&#x90FD;&#x80FD;&#x5F97;&#x5230;&#x6574;&#x4F53;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x9009;&#x62E9;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x5FC5;&#x987B;&#x5177;&#x5907;&#x65E0;&#x540E;&#x6548;&#x6027;&#xFF0C;&#x5373;&#x67D0;&#x4E2A;&#x72B6;&#x6001;&#x4EE5;&#x540E;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x4EE5;&#x524D;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x53EA;&#x4E0E;&#x5F53;&#x524D;&#x72B6;&#x6001;&#x6709;&#x5173;&#x3002; &#x6240;&#x4EE5;&#x5BF9;&#x6240;&#x91C7;&#x7528;&#x7684;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x4E00;&#x5B9A;&#x8981;&#x4ED4;&#x7EC6;&#x5206;&#x6790;&#x5176;&#x662F;&#x5426;&#x6EE1;&#x8DB3;&#x65E0;&#x540E;&#x6548;&#x6027;&#x3002; &#x4E8C;&#x3001;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF; &#x5EFA;&#x7ACB;&#x6570;&#x5B66;&#x6A21;&#x578B;&#x6765;&#x63CF;&#x8FF0;&#x95EE;&#x9898;&#x3002; &#x628A;&#x6C42;&#x89E3;&#x7684;&#x95EE;&#x9898;&#x5206;&#x6210;&#x82E5;&#x5E72;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#x3002; &#x5BF9;&#x6BCF;&#x4E00;&#x5B50;&#x95EE;&#x9898;&#x6C42;&#x89E3;&#xFF0C;&#x5F97;&#x5230;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x628A;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x89E3;&#x5408;&#x6210;&#x539F;&#x6765;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#x89E3;&#x3002; &#x4E09;&#x3001;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x9002;&#x7528;&#x7684;&#x95EE;&#x9898;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x9002;&#x7528;&#x7684;&#x524D;&#x63D0;&#x662F;&#xFF1A;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x89E3;&#x7B56;&#x7565;&#x80FD;&#x5BFC;&#x81F4;&#x4EA7;&#x751F;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x9002;&#x7528;&#x7684;&#x60C5;&#x51B5;&#x5F88;&#x5C11;&#x3002;&#x4E00;&#x822C;&#xFF0C;&#x5BF9;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5206;&#x6790;&#x662F;&#x5426;&#x9002;&#x7528;&#x4E8E;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x9009;&#x62E9;&#x8BE5;&#x95EE;&#x9898;&#x4E0B;&#x7684;&#x51E0;&#x4E2A;&#x5B9E;&#x9645;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x5206;&#x6790;&#xFF0C;&#x5C31;&#x53EF;&#x505A;&#x51FA;&#x5224;&#x65AD;&#x3002; &#x56DB;&#x3001;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#x6846;&#x67B6;&#x4ECE;&#x95EE;&#x9898;&#x7684;&#x67D0;&#x4E00;&#x521D;&#x59CB;&#x89E3;&#x51FA;&#x53D1;&#xFF1B; while (&#x80FD;&#x671D;&#x7ED9;&#x5B9A;&#x603B;&#x76EE;&#x6807;&#x524D;&#x8FDB;&#x4E00;&#x6B65;) { &#x5229;&#x7528;&#x53EF;&#x884C;&#x7684;&#x51B3;&#x7B56;&#xFF0C;&#x6C42;&#x51FA;&#x53EF;&#x884C;&#x89E3;&#x7684;&#x4E00;&#x4E2A;&#x89E3;&#x5143;&#x7D20;&#xFF1B; } &#x7531;&#x6240;&#x6709;&#x89E3;&#x5143;&#x7D20;&#x7EC4;&#x5408;&#x6210;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#x53EF;&#x884C;&#x89E3;&#xFF1B; &#x4E94;&#x3001;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x7684;&#x9009;&#x62E9;&#x56E0;&#x4E3A;&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x89E3;&#x5C40;&#x90E8;&#x6700;&#x4F18;&#x89E3;&#x7684;&#x7B56;&#x7565;&#x6765;&#x8FBE;&#x5230;&#x5168;&#x5C40;&#x6700;&#x4F18;&#x89E3;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x6CE8;&#x610F;&#x5224;&#x65AD;&#x95EE;&#x9898;&#x662F;&#x5426;&#x9002;&#x5408;&#x91C7;&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x7B56;&#x7565;&#xFF0C;&#x627E;&#x5230;&#x7684;&#x89E3;&#x662F;&#x5426;&#x4E00;&#x5B9A;&#x662F;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x3002; &#x516D;&#x3001;&#x4F8B;&#x9898;&#x89E3;&#x6790; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x8BD5;&#x7528;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x89E3;&#x7684;&#x9898;&#x76EE;&#xFF0C;&#x8D2A;&#x5FC3;&#x89E3;&#x7684;&#x786E;&#x4E0D;&#x9519;&#xFF0C;&#x53EF;&#x60DC;&#x4E0D;&#x662F;&#x6700;&#x4F18;&#x89E3;&#x3002; [&#x80CC;&#x5305;&#x95EE;&#x9898;] &#x6709;&#x4E00;&#x4E2A;&#x80CC;&#x5305;&#xFF0C;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#x662F; M = 150&#xFF0C;&#x6709; 7 &#x4E2A;&#x7269;&#x54C1;&#xFF0C;&#x7269;&#x54C1;&#x53EF;&#x4EE5;&#x5206;&#x5272;&#x6210;&#x4EFB;&#x610F;&#x5927;&#x5C0F;&#x3002; &#x8981;&#x6C42;&#x5C3D;&#x53EF;&#x80FD;&#x8BA9;&#x88C5;&#x5165;&#x80CC;&#x5305;&#x4E2D;&#x7684;&#x7269;&#x54C1;&#x603B;&#x4EF7;&#x503C;&#x6700;&#x5927;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;&#x603B;&#x5BB9;&#x91CF;&#x3002; &#x7269;&#x54C1; A B C D E F G&#x91CD;&#x91CF; 35 30 60 50 40 10 25&#x4EF7;&#x503C; 10 40 30 50 35 40 30 &#x5206;&#x6790;&#xFF1A; &#x76EE;&#x6807;&#x51FD;&#x6570;&#xFF1A;$\sum pi$ &#x6700;&#x5927; &#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x662F;&#x88C5;&#x5165;&#x7684;&#x7269;&#x54C1;&#x603B;&#x91CD;&#x91CF;&#x4E0D;&#x8D85;&#x8FC7;&#x80CC;&#x5305;&#x5BB9;&#x91CF;&#xFF1A; $\sum wi &lt;= M ( M = 150)$ &#x6839;&#x636E;&#x8D2A;&#x5FC3;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x6BCF;&#x6B21;&#x6311;&#x9009;&#x4EF7;&#x503C;&#x6700;&#x5927;&#x7684;&#x7269;&#x54C1;&#x88C5;&#x5165;&#x80CC;&#x5305;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x5426;&#x6700;&#x4F18;&#xFF1F; &#x6BCF;&#x6B21;&#x6311;&#x9009;&#x6240;&#x5360;&#x91CD;&#x91CF;&#x6700;&#x5C0F;&#x7684;&#x7269;&#x54C1;&#x88C5;&#x5165;&#x662F;&#x5426;&#x80FD;&#x5F97;&#x5230;&#x6700;&#x4F18;&#x89E3;&#xFF1F; &#x6BCF;&#x6B21;&#x9009;&#x53D6;&#x5355;&#x4F4D;&#x91CD;&#x91CF;&#x4EF7;&#x503C;&#x6700;&#x5927;&#x7684;&#x7269;&#x54C1;&#xFF0C;&#x6210;&#x4E3A;&#x89E3;&#x672C;&#x9898;&#x7684;&#x7B56;&#x7565;&#x3002; &#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x5E76;&#x4E0D;&#x662F;&#x5B8C;&#x5168;&#x4E0D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x4E00;&#x65E6;&#x7ECF;&#x8FC7;&#x8BC1;&#x660E;&#x6210;&#x7ACB;&#x540E;&#xFF0C;&#x5B83;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x9AD8;&#x6548;&#x7684;&#x7B97;&#x6CD5;&#x3002; &#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x8FD8;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x7B97;&#x6CD5;&#x4E4B;&#x4E00;&#xFF0C;&#x8FD9;&#x662F;&#x7531;&#x4E8E;&#x5B83;&#x7B80;&#x5355;&#x6613;&#x884C;&#xFF0C;&#x6784;&#x9020;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x4E0D;&#x662F;&#x5F88;&#x56F0;&#x96BE;&#x3002; &#x53EF;&#x60DC;&#x7684;&#x662F;&#x5B83;&#x9700;&#x8981;&#x8BC1;&#x660E;&#x540E;&#x624D;&#x80FD;&#x771F;&#x6B63;&#x8FD0;&#x7528;&#x5230;&#x9898;&#x76EE;&#x7684;&#x7B97;&#x6CD5;&#x4E2D;&#x3002; &#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x8D2A;&#x5FC3;&#x7B97;&#x6CD5;&#x7684;&#x8BC1;&#x660E;&#x56F4;&#x7ED5;&#x7740;&#xFF1A;&#x6574;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x4E00;&#x5B9A;&#x5728;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#x4E2D;&#x5B58;&#x5728;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x6700;&#x4F18;&#x89E3;&#x5F97;&#x6765;&#x7684;&#x3002; &#x5BF9;&#x4E8E;&#x4F8B;&#x9898;&#x4E2D;&#x7684; 3 &#x4E2D;&#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#xFF0C;&#x90FD;&#x662F;&#x65E0;&#x6CD5;&#x6210;&#x7ACB;&#x7684;&#xFF08; &#x65E0;&#x6CD5;&#x88AB;&#x8BC1;&#x660E; &#xFF09;&#x7684;&#xFF0C;&#x89E3;&#x91CA;&#x5982;&#x4E0B;&#xFF1A; &#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#xFF1A;&#x9009;&#x53D6;&#x4EF7;&#x503C;&#x6700;&#x5927;&#x8005;&#x3002; &#x53CD;&#x4F8B;&#xFF1A; W = 30&#x7269;&#x54C1;&#xFF1A; A B C&#x91CD;&#x91CF;&#xFF1A; 28 12 12&#x4EF7;&#x503C;&#xFF1A; 30 20 20 &#x6839;&#x636E;&#x7B56;&#x7565;&#xFF0C;&#x9996;&#x5148;&#x9009;&#x53D6;&#x7269;&#x54C1; A&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x65E0;&#x6CD5;&#x518D;&#x9009;&#x53D6;&#x4E86;&#xFF0C;&#x53EF;&#x662F;&#xFF0C;&#x9009;&#x53D6; B&#x3001;C &#x5219;&#x66F4;&#x597D;&#x3002; &#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#xFF1A;&#x9009;&#x53D6;&#x91CD;&#x91CF;&#x6700;&#x5C0F;&#x3002;&#x5B83;&#x7684;&#x53CD;&#x4F8B;&#x4E0E;&#x7B2C;&#x4E00;&#x79CD;&#x7B56;&#x7565;&#x7684;&#x53CD;&#x4F8B;&#x5DEE;&#x4E0D;&#x591A;&#x3002; &#x8D2A;&#x5FC3;&#x7B56;&#x7565;&#xFF1A;&#x9009;&#x53D6;&#x5355;&#x4F4D;&#x91CD;&#x91CF;&#x4EF7;&#x503C;&#x6700;&#x5927;&#x7684;&#x7269;&#x54C1;&#x3002;&#x53CD;&#x4F8B;&#xFF1A; W = 30&#x7269;&#x54C1;&#xFF1A;A B C&#x91CD;&#x91CF;&#xFF1A;28 20 10&#x4EF7;&#x503C;&#xFF1A;28 20 10 &#x6839;&#x636E;&#x7B56;&#x7565;&#xFF0C;&#x4E09;&#x79CD;&#x7269;&#x54C1;&#x5355;&#x4F4D;&#x91CD;&#x91CF;&#x4EF7;&#x503C;&#x4E00;&#x6837;&#xFF0C;&#x7A0B;&#x5E8F;&#x65E0;&#x6CD5;&#x4F9D;&#x636E;&#x73B0;&#x6709;&#x7B56;&#x7565;&#x4F5C;&#x51FA;&#x5224;&#x65AD;&#xFF0C;&#x5982;&#x679C;&#x9009;&#x62E9; A&#xFF0C;&#x5219;&#x7B54;&#x6848;&#x9519;&#x8BEF;&#x3002; L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>贪心算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[五大常用算法：分治法]]></title>
    <url>%2F2018%2F03%2F22%2F%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%EF%BC%9A%E5%88%86%E6%B2%BB%E6%B3%95%2F</url>
    <content type="text"><![CDATA[&#x4E00;&#x3001;&#x57FA;&#x672C;&#x6982;&#x5FF5; &#x5728;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x4E2D;&#xFF0C;&#x5206;&#x6CBB;&#x6CD5;&#x662F;&#x4E00;&#x79CD;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x7B97;&#x6CD5;&#x3002;&#x5B57;&#x9762;&#x4E0A;&#x7684;&#x89E3;&#x91CA;&#x662F;&#x201C;&#x5206;&#x800C;&#x6CBB;&#x4E4B;&#x201D;&#xFF0C;&#x5C31;&#x662F;&#x628A;&#x4E00;&#x4E2A;&#x590D;&#x6742;&#x7684;&#x95EE;&#x9898;&#x5206;&#x6210;&#x4E24;&#x4E2A;&#x6216;&#x66F4;&#x591A;&#x7684;&#x76F8;&#x540C;&#x6216;&#x76F8;&#x4F3C;&#x7684;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x518D;&#x628A;&#x5B50;&#x95EE;&#x9898;&#x5206;&#x6210;&#x66F4;&#x5C0F;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x2026;&#x2026;&#x76F4;&#x5230;&#x6700;&#x540E;&#x5B50;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7684;&#x76F4;&#x63A5;&#x6C42;&#x89E3;&#xFF0C;&#x539F;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x5373;&#x5B50;&#x95EE;&#x9898;&#x89E3;&#x7684;&#x5408;&#x5E76;&#x3002;&#x8FD9;&#x4E2A;&#x6280;&#x5DE7;&#x662F;&#x5F88;&#x591A;&#x9AD8;&#x6548;&#x7B97;&#x6CD5;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x5982;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF08;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#xFF0C;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#xFF09;&#xFF0C;&#x5085;&#x91CC;&#x53F6;&#x53D8;&#x6362;&#xFF08;&#x5FEB;&#x901F;&#x5085;&#x91CC;&#x53F6;&#x53D8;&#x6362;&#xFF09;&#x2026;&#x2026; &#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#x6C42;&#x89E3;&#x7684;&#x95EE;&#x9898;&#x6240;&#x9700;&#x7684;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;&#x90FD;&#x4E0E;&#x5176;&#x89C4;&#x6A21;&#x6709;&#x5173;&#x3002;&#x95EE;&#x9898;&#x7684;&#x89C4;&#x6A21;&#x8D8A;&#x5C0F;&#xFF0C;&#x8D8A;&#x5BB9;&#x6613;&#x76F4;&#x63A5;&#x6C42;&#x89E3;&#xFF0C;&#x89E3;&#x9898;&#x6240;&#x9700;&#x7684;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;&#x4E5F;&#x8D8A;&#x5C11;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5BF9;&#x4E8E; n &#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6392;&#x5E8F;&#x95EE;&#x9898;&#xFF0C;&#x5F53; n = 1 &#x65F6;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4EFB;&#x4F55;&#x8BA1;&#x7B97;&#x3002;n = 2 &#x65F6;&#xFF0C;&#x53EA;&#x8981;&#x4F5C;&#x4E00;&#x6B21;&#x6BD4;&#x8F83;&#x5373;&#x53EF;&#x6392;&#x597D;&#x5E8F;&#x3002;n = 3 &#x65F6;&#x53EA;&#x8981;&#x4F5C; 3 &#x6B21;&#x6BD4;&#x8F83;&#x5373;&#x53EF;&#x2026;&#x2026; &#x3002;&#x800C;&#x5F53; n &#x8F83;&#x5927;&#x65F6;&#xFF0C;&#x95EE;&#x9898;&#x5C31;&#x4E0D;&#x90A3;&#x4E48;&#x5BB9;&#x6613;&#x5904;&#x7406;&#x4E86;&#x3002;&#x8981;&#x60F3;&#x76F4;&#x63A5;&#x89E3;&#x51B3;&#x4E00;&#x4E2A;&#x89C4;&#x6A21;&#x8F83;&#x5927;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x65F6;&#x662F;&#x76F8;&#x5F53;&#x56F0;&#x96BE;&#x7684;&#x3002; &#x4E8C;&#x3001;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x53CA;&#x7B56;&#x7565;&#x5206;&#x6CBB;&#x6CD5;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x5C06;&#x4E00;&#x4E2A;&#x96BE;&#x4EE5;&#x76F4;&#x63A5;&#x89E3;&#x51B3;&#x7684;&#x5927;&#x95EE;&#x9898;&#xFF0C;&#x5206;&#x5272;&#x6210;&#x4E00;&#x4E9B;&#x89C4;&#x6A21;&#x8F83;&#x5C0F;&#x7684;&#x76F8;&#x540C;&#x95EE;&#x9898;&#xFF0C;&#x4EE5;&#x4FBF;&#x5404;&#x4E2A;&#x51FB;&#x7834;&#xFF0C;&#x5206;&#x800C;&#x6CBB;&#x4E4B;&#x3002; &#x5206;&#x6CBB;&#x7B56;&#x7565;&#x662F;&#xFF1A;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x89C4;&#x6A21;&#x4E3A; n &#x7684;&#x95EE;&#x9898;&#xFF0C;&#x82E5;&#x8BE5;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x5BB9;&#x6613;&#x5730;&#x89E3;&#x51B3;&#xFF08;&#x6BD4;&#x5982; n &#x89C4;&#x6A21;&#x8F83;&#x5C0F;&#xFF09;&#x5219;&#x76F4;&#x63A5;&#x89E3;&#x51B3;&#xFF0C;&#x5426;&#x5219;&#x5C06;&#x5176;&#x5206;&#x89E3;&#x4E3A; k &#x4E2A;&#x89C4;&#x6A21;&#x8F83;&#x5C0F;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8FD9;&#x4E9B;&#x5B50;&#x95EE;&#x9898;&#x4E92;&#x76F8;&#x72EC;&#x7ACB;&#x4E14;&#x4E0E;&#x539F;&#x95EE;&#x9898;&#x5F62;&#x5F0F;&#x76F8;&#x540C;&#xFF0C;&#x9012;&#x5F52;&#x7684;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5404;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x5408;&#x5E76;&#x5F97;&#x5230;&#x539F;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x3002;&#x8FD9;&#x79CD;&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x7B56;&#x7565;&#x53EB;&#x505A;&#x5206;&#x6CBB;&#x6CD5;&#x3002; &#x5982;&#x679C;&#x539F;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x5206;&#x5272;&#x6210; k &#x4E2A;&#x5B50;&#x95EE;&#x9898;&#xFF0C;1 &lt; k &lt;= n, &#x4E14;&#x8FD9;&#x4E9B;&#x5B50;&#x95EE;&#x9898;&#x90FD;&#x53EF;&#x89E3;&#x5E76;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E9B;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x6C42;&#x51FA;&#x539F;&#x95EE;&#x9898;&#x7684;&#x89E3;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x79CD;&#x5206;&#x6CBB;&#x6CD5;&#x5C31;&#x662F;&#x53EF;&#x884C;&#x7684;&#x3002;&#x7531;&#x5206;&#x6CBB;&#x6CD5;&#x4EA7;&#x751F;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x5F80;&#x5F80;&#x662F;&#x539F;&#x95EE;&#x9898;&#x7684;&#x8F83;&#x5C0F;&#x6A21;&#x5F0F;&#xFF0C;&#x8FD9;&#x5C31;&#x4E3A;&#x4F7F;&#x7528;&#x9012;&#x5F52;&#x6280;&#x672F;&#x63D0;&#x4F9B;&#x4E86;&#x65B9;&#x4FBF;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53CD;&#x590D;&#x5E94;&#x7528;&#x5206;&#x6CBB;&#x624B;&#x6BB5;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x5B50;&#x95EE;&#x9898;&#x4E0E;&#x539F;&#x95EE;&#x9898;&#x7C7B;&#x578B;&#x4E00;&#x81F4;&#x800C;&#x5176;&#x89C4;&#x6A21;&#x5374;&#x4E0D;&#x65AD;&#x51CF;&#x5C0F;&#xFF0C;&#x6700;&#x7EC8;&#x4F7F;&#x5B50;&#x95EE;&#x9898;&#x7F29;&#x5C0F;&#x5230;&#x5F88;&#x5BB9;&#x6613;&#x76F4;&#x63A5;&#x6C42;&#x51FA;&#x5176;&#x89E3;&#x3002;&#x8FD9;&#x81EA;&#x7136;&#x5BFC;&#x81F4;&#x9012;&#x5F52;&#x8FC7;&#x7A0B;&#x7684;&#x4EA7;&#x751F;&#x3002;&#x5206;&#x6CBB;&#x4E0E;&#x9012;&#x5F52;&#x50CF;&#x4E00;&#x5BF9;&#x5B6A;&#x751F;&#x5144;&#x5F1F;&#xFF0C;&#x7ECF;&#x5E38;&#x540C;&#x65F6;&#x5E94;&#x7528;&#x5728;&#x7B97;&#x6CD5;&#x8BBE;&#x8BA1;&#x4E4B;&#x4E2D;&#xFF0C;&#x5E76;&#x7531;&#x6B64;&#x4EA7;&#x751F;&#x8BB8;&#x591A;&#x9AD8;&#x6548;&#x7B97;&#x6CD5;&#x3002; &#x4E09;&#x3001;&#x5206;&#x6CBB;&#x6CD5;&#x9002;&#x7528;&#x7684;&#x60C5;&#x51B5;&#x5206;&#x6CBB;&#x6CD5;&#x6240;&#x80FD;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x4E00;&#x822C;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x7279;&#x5F81;&#xFF1A; &#x8BE5;&#x95EE;&#x9898;&#x7684;&#x89C4;&#x6A21;&#x7F29;&#x5C0F;&#x5230;&#x4E00;&#x5B9A;&#x7684;&#x7A0B;&#x5EA6;&#x5C31;&#x53EF;&#x4EE5;&#x5BB9;&#x6613;&#x5730;&#x89E3;&#x51B3; &#x8BE5;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x5206;&#x89E3;&#x4E3A;&#x82E5;&#x5E72;&#x89C4;&#x6A21;&#x8F83;&#x5C0F;&#x7684;&#x76F8;&#x540C;&#x95EE;&#x9898;&#xFF0C;&#x5373;&#x8BE5;&#x95EE;&#x9898;&#x5177;&#x6709;&#x6700;&#x4F18;&#x5B50;&#x7ED3;&#x6784;&#x6027;&#x8D28; &#x5229;&#x7528;&#x8BE5;&#x95EE;&#x9898;&#x5206;&#x89E3;&#x51FA;&#x7684;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x53EF;&#x4EE5;&#x5408;&#x5E76;&#x4E3A;&#x8BE5;&#x95EE;&#x9898;&#x7684;&#x89E3; &#x8BE5;&#x95EE;&#x9898;&#x6240;&#x5206;&#x89E3;&#x51FA;&#x7684;&#x5404;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#x662F;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x5373;&#x5B50;&#x95EE;&#x9898;&#x4E4B;&#x95F4;&#x4E0D;&#x5305;&#x542B;&#x516C;&#x5171;&#x7684;&#x5B50;&#x5B50;&#x95EE;&#x9898; &#x7B2C;&#x4E00;&#x6761;&#x7279;&#x5F81;&#x662F;&#x7EDD;&#x5927;&#x591A;&#x6570;&#x95EE;&#x9898;&#x90FD;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x95EE;&#x9898;&#x7684;&#x8BA1;&#x7B97;&#x590D;&#x6742;&#x6027;&#x4E00;&#x822C;&#x662F;&#x968F;&#x7740;&#x95EE;&#x9898;&#x89C4;&#x6A21;&#x7684;&#x589E;&#x52A0;&#x800C;&#x589E;&#x52A0;&#xFF1B; &#x7B2C;&#x4E8C;&#x6761;&#x7279;&#x5F81;&#x662F;&#x5E94;&#x7528;&#x5206;&#x6CBB;&#x6CD5;&#x7684;&#x524D;&#x63D0;&#xFF0C;&#x5B83;&#x4E5F;&#x662F;&#x5927;&#x591A;&#x6570;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x7684;&#xFF0C;&#x6B64;&#x7279;&#x5F81;&#x53CD;&#x6620;&#x4E86;&#x9012;&#x5F52;&#x601D;&#x60F3;&#x7684;&#x5E94;&#x7528;&#xFF1B; &#x7B2C;&#x4E09;&#x6761;&#x7279;&#x5F81;&#x662F;&#x5173;&#x952E;&#xFF0C;&#x80FD;&#x5426;&#x5229;&#x7528;&#x5206;&#x6CBB;&#x6CD5;&#x5B8C;&#x5168;&#x53D6;&#x51B3;&#x4E8E;&#x95EE;&#x9898;&#x7684;&#x662F;&#x5426;&#x5177;&#x6709;&#x7B2C;&#x4E09;&#x6761;&#x7279;&#x5F81;&#xFF0C;&#x5982;&#x679C;&#x5177;&#x5907;&#x4E86;&#x7B2C;&#x4E00;&#x6761;&#x548C;&#x7B2C;&#x4E8C;&#x6761;&#x7279;&#x5F81;&#xFF0C;&#x800C;&#x4E0D;&#x5177;&#x5907;&#x7B2C;&#x4E09;&#x6761;&#x7279;&#x5F81;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x7528;&#x8D2A;&#x5FC3;&#x6CD5;&#x6216;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x6CD5;&#x3002; &#x7B2C;&#x56DB;&#x6761;&#x7279;&#x5F81;&#x6D89;&#x53CA;&#x5230;&#x5206;&#x6CBB;&#x6CD5;&#x7684;&#x6548;&#x7387;&#xFF0C;&#x5982;&#x679C;&#x5404;&#x5B50;&#x95EE;&#x9898;&#x662F;&#x4E0D;&#x72EC;&#x7ACB;&#x7684;&#x5219;&#x5206;&#x6CBB;&#x6CD5;&#x8981;&#x505A;&#x8BB8;&#x591A;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x91CD;&#x590D;&#x5730;&#x89E3;&#x51B3;&#x516C;&#x5171;&#x7684;&#x5B50;&#x95EE;&#x9898;&#xFF0C;&#x6B64;&#x65F6;&#x867D;&#x7136;&#x53EF;&#x7528;&#x5206;&#x6CBB;&#x6CD5;&#xFF0C;&#x4F46;&#x4E00;&#x822C;&#x7528;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x8F83;&#x597D;&#x3002; &#x56DB;&#x3001;&#x5206;&#x6CBB;&#x6CD5;&#x7684;&#x57FA;&#x672C;&#x6B65;&#x9AA4;&#x5206;&#x6CBB;&#x6CD5;&#x5728;&#x6BCF;&#x4E00;&#x5C42;&#x9012;&#x5F52;&#x4E0A;&#x90FD;&#x6709;&#x4E09;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; step 1 &#x5206;&#x89E3;&#xFF1A;&#x5C06;&#x539F;&#x95EE;&#x9898;&#x5206;&#x89E3;&#x4E3A;&#x82E5;&#x5E72;&#x89C4;&#x6A21;&#x8F83;&#x5C0F;&#xFF0C;&#x76F8;&#x4E92;&#x72EC;&#x7ACB;&#xFF0C;&#x4E0E;&#x539F;&#x95EE;&#x9898;&#x5F62;&#x5F0F;&#x76F8;&#x540C;&#x7684;&#x5B50;&#x95EE;&#x9898;&#xFF1B; step 2 &#x89E3;&#x51B3;&#xFF1A;&#x82E5;&#x5B50;&#x95EE;&#x9898;&#x89C4;&#x6A21;&#x8F83;&#x5C0F;&#x800C;&#x5BB9;&#x6613;&#x88AB;&#x89E3;&#x51B3;&#x5219;&#x76F4;&#x63A5;&#x6C42;&#x89E3;&#xFF0C;&#x5426;&#x5219;&#x9012;&#x5F52;&#x5730;&#x89E3;&#x5404;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#xFF1B; step 3 &#x5408;&#x5E76;&#xFF1A;&#x5C06;&#x5404;&#x4E2A;&#x5B50;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x5408;&#x5E76;&#x4E3A;&#x539F;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x3002; &#x4E94;&#x3001;&#x53EF;&#x4F7F;&#x7528;&#x5206;&#x6CBB;&#x6CD5;&#x6C42;&#x89E3;&#x7684;&#x4E00;&#x4E9B;&#x7ECF;&#x5178;&#x95EE;&#x9898; &#x4E8C;&#x5206;&#x641C;&#x7D22; &#x5927;&#x6574;&#x6570;&#x4E58;&#x6CD5; Strassen &#x77E9;&#x9635;&#x4E58;&#x6CD5; &#x68CB;&#x76D8;&#x8986;&#x76D6; &#x5408;&#x5E76;&#x6392;&#x5E8F; &#x5FEB;&#x901F;&#x6392;&#x5E8F; &#x7EBF;&#x6027;&#x65F6;&#x95F4;&#x9009;&#x62E9; &#x6700;&#x63A5;&#x8FD1;&#x70B9;&#x5BF9;&#x95EE;&#x9898; &#x5FAA;&#x73AF;&#x8D5B;&#x65E5;&#x7A0B;&#x8868; &#x6C49;&#x8BFA;&#x5854; &#x516D;&#x3001;&#x4F9D;&#x636E;&#x5206;&#x6CBB;&#x6CD5;&#x8BBE;&#x8BA1;&#x7A0B;&#x5E8F;&#x65F6;&#x7684;&#x601D;&#x7EF4;&#x8FC7;&#x7A0B;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x7C7B;&#x4F3C;&#x4E0E;&#x6570;&#x5B66;&#x5F52;&#x7EB3;&#x6CD5;&#xFF0C;&#x627E;&#x5230;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x6C42;&#x89E3;&#x65B9;&#x7A0B;&#x5F0F;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x65B9;&#x7A0B;&#x5F0F;&#x8BBE;&#x8BA1;&#x9012;&#x5F52;&#x7A0B;&#x5E8F;&#x3002; &#x4E00;&#x5B9A;&#x662F;&#x5148;&#x627E;&#x5230;&#x6700;&#x5C0F;&#x95EE;&#x9898;&#x89C4;&#x6A21;&#x65F6;&#x7684;&#x6C42;&#x89E3;&#x65B9;&#x6CD5; &#x7136;&#x540E;&#x8003;&#x8651;&#x968F;&#x7740;&#x95EE;&#x9898;&#x89C4;&#x6A21;&#x589E;&#x5927;&#x65F6;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5; &#x627E;&#x5230;&#x6C42;&#x89E3;&#x7684;&#x9012;&#x5F52;&#x51FD;&#x6570;&#x5F0F;&#x540E;&#xFF0C;&#x8BBE;&#x8BA1;&#x9012;&#x5F52;&#x7A0B;&#x5E8F;&#x5373;&#x53EF; L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>分治法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[五大常用算法：回溯法]]></title>
    <url>%2F2018%2F03%2F22%2F%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%EF%BC%9A%E5%9B%9E%E6%BA%AF%E6%B3%95%2F</url>
    <content type="text"><![CDATA[1&#x3001;&#x6982;&#x5FF5;&#x56DE;&#x6EAF;&#x7B97;&#x6CD5;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x679A;&#x4E3E;&#x7684;&#x641C;&#x7D22;&#x5C1D;&#x8BD5;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x5728;&#x641C;&#x7D22;&#x5C1D;&#x8BD5;&#x8FC7;&#x7A0B;&#x4E2D;&#x5BFB;&#x627E;&#x95EE;&#x9898;&#x7684;&#x89E3;&#xFF0C;&#x5F53;&#x53D1;&#x73B0;&#x5DF2;&#x4E0D;&#x6EE1;&#x8DB3;&#x6C42;&#x89E3;&#x6761;&#x4EF6;&#x65F6;&#xFF0C;&#x5C31;&#x201C;&#x56DE;&#x6EAF;&#x201D;&#x8FD4;&#x56DE;&#xFF0C;&#x5C1D;&#x8BD5;&#x522B;&#x7684;&#x8DEF;&#x5F84;&#x3002; &#x56DE;&#x6EAF;&#x6CD5;&#x662F;&#x4E00;&#x79CD;&#x4F18;&#x9009;&#x641C;&#x7D22;&#x6CD5;&#xFF0C;&#x6309;&#x9009;&#x4F18;&#x6761;&#x4EF6;&#x5411;&#x524D;&#x641C;&#x7D22;&#xFF0C;&#x5DF2;&#x5230;&#x8FBE;&#x76EE;&#x6807;&#x3002;&#x4F46;&#x5F53;&#x641C;&#x7D22;&#x5230;&#x67D0;&#x4E00;&#x6B65;&#x65F6;&#xFF0C;&#x53D1;&#x73B0;&#x539F;&#x5148;&#x9009;&#x62E9;&#x5E76;&#x4E0D;&#x4F18;&#x6216;&#x8FBE;&#x4E0D;&#x5230;&#x76EE;&#x6807;&#xFF0C;&#x5C31;&#x9000;&#x56DE;&#x4E00;&#x6B65;&#x91CD;&#x65B0;&#x9009;&#x62E9;&#xFF0C;&#x8FD9;&#x79CD;&#x8D70;&#x4E0D;&#x901A;&#x5C31;&#x9000;&#x56DE;&#x518D;&#x8D70;&#x7684;&#x6280;&#x672F;&#x79F0;&#x4E3A;&#x56DE;&#x6EAF;&#x6CD5;&#xFF0C;&#x800C;&#x6EE1;&#x8DB3;&#x56DE;&#x6EAF;&#x6761;&#x4EF6;&#x7684;&#x67D0;&#x4E2A;&#x72B6;&#x6001;&#x7684;&#x70B9;&#x79F0;&#x4E3A;&#x201C;&#x56DE;&#x6EAF;&#x70B9;&#x201D;&#x3002; &#x8BB8;&#x591A;&#x590D;&#x6742;&#x7684;&#xFF0C;&#x89C4;&#x6A21;&#x8F83;&#x5927;&#x7684;&#x7684;&#x95EE;&#x9898;&#x90FD;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x56DE;&#x6EAF;&#x6CD5;&#xFF0C;&#x6709;&#x201C;&#x901A;&#x7528;&#x89E3;&#x9898;&#x65B9;&#x6CD5;&#x201D;&#x7684;&#x7F8E;&#x79F0;&#x3002; 2&#x3001;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x5728;&#x5305;&#x542B;&#x95EE;&#x9898;&#x7684;&#x6240;&#x6709;&#x89E3;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#x4E2D;&#xFF0C;&#x6309;&#x7167;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x641C;&#x7D22;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x51FA;&#x53D1;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;&#x89E3;&#x7A7A;&#x95F4;&#x6811;&#x3002;&#x5F53;&#x641C;&#x7D22;&#x5230;&#x67D0;&#x4E00;&#x8282;&#x70B9;&#x65F6;&#xFF0C;&#x8981;&#x5148;&#x5224;&#x65AD;&#x8BE5;&#x8282;&#x70B9;&#x662F;&#x5426;&#x5305;&#x542B;&#x95EE;&#x9898;&#x7684;&#x89E3;&#xFF0C;&#x5982;&#x679C;&#x5305;&#x542B;&#xFF0C;&#x5C31;&#x4ECE;&#x8BE5;&#x8282;&#x70B9;&#x51FA;&#x53D1;&#x7EE7;&#x7EED;&#x63A2;&#x7D22;&#x4E0B;&#x53BB;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x8282;&#x70B9;&#x4E0D;&#x5305;&#x542B;&#x95EE;&#x9898;&#x7684;&#x89E3;&#xFF0C;&#x5219;&#x9010;&#x5C42;&#x5411;&#x5176;&#x7956;&#x5148;&#x8282;&#x70B9;&#x56DE;&#x6EAF;&#x3002;&#xFF08;&#x56DE;&#x6EAF;&#x6CD5;&#x5C31;&#x662F;&#x5BF9;&#x9690;&#x5F0F;&#x56FE;&#x7684;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x641C;&#x7D22;&#x7B97;&#x6CD5;&#xFF09;&#x3002; &#x82E5;&#x7528;&#x56DE;&#x6EAF;&#x6CD5;&#x6C42;&#x95EE;&#x9898;&#x7684;&#x6240;&#x6709;&#x89E3;&#x65F6;&#xFF0C;&#x8981;&#x56DE;&#x6EAF;&#x5230;&#x6839;&#xFF0C;&#x4E14;&#x6839;&#x8282;&#x70B9;&#x7684;&#x6240;&#x6709;&#x53EF;&#x884C;&#x7684;&#x5B50;&#x6811;&#x90FD;&#x8981;&#x5DF2;&#x88AB;&#x641C;&#x7D22;&#x904D;&#x624D;&#x7ED3;&#x675F;&#x3002; &#x800C;&#x82E5;&#x4F7F;&#x7528;&#x56DE;&#x6EAF;&#x6CD5;&#x6C42;&#x4EBA;&#x4E00;&#x4E2A;&#x89E3;&#x65F6;&#xFF0C;&#x53EA;&#x8981;&#x641C;&#x7D22;&#x5230;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#x89E3;&#x5C31;&#x53EF;&#x4EE5;&#x7ED3;&#x675F;&#x3002; 3&#x3001;&#x7528;&#x56DE;&#x6EAF;&#x6CD5;&#x89E3;&#x9898;&#x7684;&#x4E00;&#x822C;&#x6B65;&#x9AA4; &#x9488;&#x5BF9;&#x6240;&#x7ED9;&#x95EE;&#x9898;&#xFF0C;&#x786E;&#x5B9A;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#xFF1A; &#x9996;&#x5148;&#x5E94;&#x660E;&#x786E;&#x5B9A;&#x4E49;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#xFF0C;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x7A7A;&#x95F4;&#x5E94;&#x81F3;&#x5C11;&#x5305;&#x542B;&#x95EE;&#x9898;&#x7684;&#x4E00;&#x4E2A;&#xFF08;&#x6700;&#x4F18;&#xFF09;&#x89E3;&#x3002; &#x786E;&#x5B9A;&#x8282;&#x70B9;&#x7684;&#x6269;&#x5C55;&#x641C;&#x7D22;&#x89C4;&#x5219; &#x4EE5;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x51E1;&#x662F;&#x641C;&#x7D22;&#x89E3;&#x7A7A;&#x95F4;&#xFF0C;&#x5E76;&#x5728;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#x4E2D;&#x7528;&#x526A;&#x679D;&#x51FD;&#x6570;&#x907F;&#x514D;&#x65E0;&#x6548;&#x641C;&#x7D22;&#x3002; 4&#x3001;&#x7B97;&#x6CD5;&#x6846;&#x67B6; &#x95EE;&#x9898;&#x6846;&#x67B6; &#x8BBE;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x662F;&#x4E00;&#x4E2A;n&#x7EF4;&#x5411;&#x91CF;&#xFF08; a1&#xFF0C;a2&#xFF0C;&#x2026;&#x2026; &#xFF0C;an&#xFF09;&#xFF0C;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x662F; ai&#xFF08; i = 1&#xFF0C;2&#xFF0C;3&#xFF0C;&#x2026;&#x2026;&#xFF0C;n &#xFF09;&#x4E4B;&#x95F4;&#x6EE1;&#x8DB3;&#x67D0;&#x79CD;&#x6761;&#x4EF6;&#xFF0C;&#x8BB0;&#x4E3A; f(ai)&#x3002; &#x975E;&#x9012;&#x5F52;&#x56DE;&#x6EAF;&#x6846;&#x67B6; 1234567891011121314151617181920int a[n], i; // &#x521D;&#x59CB;&#x5316;&#x6570;&#x7EC4;a[];i = 1;while (i &gt; 0 (&#x6709;&#x8DEF;&#x53EF;&#x8D70;) and (&#x4E3A;&#x8FBE;&#x5230;&#x76EE;&#x6807;)) { // &#x8FD8;&#x672A;&#x56DE;&#x6EAF;&#x5230;&#x5934;trueif (i &gt; n) { // &#x641C;&#x7D22;&#x5230;&#x53F6;&#x8282;&#x70B9;truetrue&#x641C;&#x7D22;&#x5230;&#x4E00;&#x4E2A;&#x89E3;&#xFF0C;&#x8F93;&#x51FA;&#x3002;true} else { // &#x5904;&#x7406;&#x7B2C;i&#x4E2A;&#x8282;&#x70B9;truetruea[i]&#x7B2C;&#x4E00;&#x4E2A;&#x53EF;&#x80FD;&#x7684;&#x503C;&#xFF1B;truetruewhile (a[i] &#x5728;&#x4E0D;&#x6EE1;&#x8DB3;&#x7EA6;&#x675F;&#x6761;&#x4EF6;&#x4E14;&#x5728;&#x641C;&#x7D22;&#x7A7A;&#x95F4;&#x5185;) {truetruetruea[i]&#x4E0B;&#x4E00;&#x4E2A;&#x53EF;&#x80FD;&#x7684;&#x503C;&#xFF1B;truetrue}truetrueif (a[i] &#x5728;&#x641C;&#x7D22;&#x7A7A;&#x95F4;&#x5185;) {truetruetrue&#x6807;&#x8BC6;&#x5360;&#x7528;&#x7684;&#x8D44;&#x6E90;&#xFF1B;truetruetruei = i + 1&#xFF1B; // &#x6269;&#x5C55;&#x4E0B;&#x4E00;&#x4E2A;&#x8282;&#x70B9;truetrue} else {truetruetrue&#x6E05;&#x7406;&#x6240;&#x5360;&#x7684;&#x72B6;&#x6001;&#x7A7A;&#x95F4;&#xFF1B; // &#x56DE;&#x6EAF;truetruetruei = i - 1&#xFF1B;truetrue}true}} &#x9012;&#x5F52;&#x7684;&#x7B97;&#x6CD5;&#x6846;&#x67B6; &#x56DE;&#x6EAF;&#x6CD5;&#x662F;&#x5BF9;&#x89E3;&#x7A7A;&#x95F4;&#x7684;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x641C;&#x7D22;&#xFF0C;&#x5728;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x4F7F;&#x7528;&#x9012;&#x5F52;&#x51FD;&#x6570;&#x6765;&#x5B9E;&#x73B0;&#x56DE;&#x6EAF;&#x6CD5;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x5176;&#x4E2D; i &#x4E3A;&#x641C;&#x7D22;&#x7684;&#x6DF1;&#x5EA6;&#xFF0C;&#x6846;&#x67B6;&#x5982;&#x4E0B;&#xFF1A; 123456789101112131415int a[n];try (int n) {trueif (i &gt; n)truetrue&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1B;trueelse {truetruefor (int j = &#x4E0B;&#x754C;&#xFF1B; j &lt;= &#x4E0A;&#x754C;&#xFF1B; j = j + 1) {truetruetrueif (fun (j)) {truetruetruetruea[i] = j;truetruetruetrue...truetruetruetruetry(i + 1)truetruetruetrue&#x56DE;&#x6EAF;&#x524D;&#x7684;&#x6E05;&#x7406;&#x5DE5;&#x4F5C;(&#x5982; a[i] &#x7F6E;&#x7A7A;&#x503C;&#x7B49;)&#xFF1B;truetruetrue}truetrue}true}} L2Dwidget.init({});]]></content>
      <categories>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>回溯法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Linux系统下用dd命令制作ISO镜像U盘启动盘]]></title>
    <url>%2F2018%2F03%2F22%2F%E5%9C%A8Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E7%94%A8dd%E5%91%BD%E4%BB%A4%E5%88%B6%E4%BD%9CISO%E9%95%9C%E5%83%8FU%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%2F</url>
    <content type="text"><![CDATA[&#x9996;&#x5148;&#x5728; Linux &#x7CFB;&#x7EDF;&#x4E2D;&#x6253;&#x5F00;&#x7EC8;&#x7AEF;&#xFF0C;&#x786E;&#x8BA4; U &#x76D8;&#x8DEF;&#x5F84;&#xFF1A; 1sudo fdisk -l &#x683C;&#x5F0F;&#x5316; U &#x76D8;&#xFF0C;&#x4E3A;&#x4E86;&#x683C;&#x5F0F;&#x5316;&#x9996;&#x5148;&#x9700;&#x8981; umount U &#x76D8;&#xFF1A;/dev/sdb &#x662F;&#x6211;&#x7684; U &#x76D8;&#x8BBE;&#x5907;&#x3002; 1sudo umount /dev/sdb* &#x683C;&#x5F0F;&#x5316; U &#x76D8;&#xFF1A; 1sudo mkfs.vfat /dev/sdb -I &#x4F7F;&#x7528; dd &#x547D;&#x4EE4;&#xFF0C;&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; 1sudo dd if=xxx.iso of=U&#x76D8;&#x8DEF;&#x5F84; &#x5B8C;&#x6574;&#x793A;&#x4F8B;&#xFF1A; 1sudo dd if=~/images/ubuntu.iso of=/dev/sdb &#x5411; sdb &#x78C1;&#x76D8;&#x5199;&#x5165;&#x4F4D;&#x4E8E;&#xFF5E;/images&#x76EE;&#x5F55;&#x4E0B;&#x7684; ubuntu.iso &#x955C;&#x50CF;&#x6587;&#x4EF6; &#x8F93;&#x5B8C;&#x4E0A;&#x8FF0;DD&#x547D;&#x4EE4;&#x540E;&#x56DE;&#x8F66;&#x6267;&#x884C;&#xFF0C;&#x7CFB;&#x7EDF;&#x5C31;&#x5F00;&#x59CB;&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;&#x4E86;&#xFF0C;&#x671F;&#x95F4;&#x7EC8;&#x7AEF;&#x547D;&#x4EE4;&#x7A97;&#x53E3;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x53CD;&#x9988;&#xFF0C;&#x4F46;&#x80FD;&#x901A;&#x8FC7;U&#x76D8;&#x8FD0;&#x884C;&#x6307;&#x793A;&#x706F;&#x770B;&#x5230;U&#x76D8;&#x5728;&#x8FDB;&#x884C;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x53EF;&#x80FD;&#x6301;&#x7EED;5&#x3001;6&#x5206;&#x949F;&#x624D;&#x5B8C;&#x6210;&#x3002;&#x5F53;&#x770B;&#x5230;&#x7EC8;&#x7AEF;&#x547D;&#x4EE4;&#x7A97;&#x53E3;&#x6709;&#x8FD4;&#x56DE;&#x6D88;&#x606F;&#x5373;&#x5236;&#x4F5C;&#x5B8C;&#x6210;&#x3002; L2Dwidget.init({});]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 目录结构]]></title>
    <url>%2F2018%2F03%2F22%2FLinux_%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[Linux &#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x4E2A;Linux&#x5B66;&#x4E60;&#x8005;&#x6765;&#x8BF4;&#xFF0C;&#x4E86;&#x89E3;Linux&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#xFF0C;&#x662F;&#x5B66;&#x597D;Linux&#x7684;&#x81F3;&#x5173;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x6B65;.&#xFF0C;&#x6DF1;&#x5165;&#x4E86;&#x89E3;Linux&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x7684;&#x6807;&#x51C6;&#x548C;&#x6BCF;&#x4E2A;&#x76EE;&#x5F55;&#x7684;&#x8BE6;&#x7EC6;&#x529F;&#x80FD;&#xFF0C;&#x5BF9;&#x4E8E;&#x6211;&#x4EEC;&#x7528;&#x597D;Linux&#x7CFB;&#x7EDF;&#x81F3;&#x5173;&#x91CD;&#x8981;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x5C31;&#x5F00;&#x59CB;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;Linux&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x7684;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x3002; &#x5F53;&#x5728;&#x4F7F;&#x7528;Linux&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x901A;&#x8FC7;ls -l / &#x5C31;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x5728; / &#x4E0B;&#x5305;&#x542B;&#x5F88;&#x591A;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x6BD4;&#x5982;etc&#x3001;usr&#x3001;var&#x3001;bin &#x7B49;&#x76EE;&#x5F55;&#xFF0C;&#x8FDB;&#x5165;&#x8FD9;&#x4E9B;&#x76EE;&#x5F55;&#x4E5F;&#x4F1A;&#x53D1;&#x73B0;&#x5F88;&#x591A;&#x7684;&#x76EE;&#x5F55;&#x6216;&#x6587;&#x4EF6;&#x3002;&#x6211;&#x4EEC;&#x628A;&#x8FD9;&#x79CD;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x7ED3;&#x6784;&#x79F0;&#x4E3A;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x3002; &#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x662F;&#x7528;&#x6765;&#x7EC4;&#x7EC7;&#x548C;&#x6392;&#x5217;&#x6587;&#x4EF6;&#x5B58;&#x53D6;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; ls &#x7B49;&#x547D;&#x4EE4;&#x5DE5;&#x5177;&#x6765;&#x67E5;&#x770B;&#x5176;&#x7ED3;&#x6784;&#xFF0C;&#x5728;Linux&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x89C1;&#x5230;&#x7684;&#x90FD;&#x662F;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#xFF1B;&#x6BD4;&#x5982;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5B89;&#x88C5;&#x5728;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x4ED6;&#x8868;&#x73B0;&#x4E3A;&#x7531; / &#x8D77;&#x59CB;&#x7684;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x3002;Linux&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x6700;&#x9876;&#x7AEF;&#x662F; / &#xFF0C;&#x6211;&#x4EEC;&#x79F0; / &#x4E3A;Linux&#x7684;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;Linux&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x3002;Linxu&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x5165;&#x53E3;&#x5C31;&#x662F; /&#xFF0C;&#x6240;&#x6709;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x6587;&#x4EF6;&#xFF0C;&#x8BBE;&#x5907;&#x90FD;&#x5728; / &#x4E4B;&#x4E0B;&#xFF0C; / &#x5C31;&#x662F;Linux&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x7EC4;&#x7EC7;&#x8005;&#xFF0C;&#x4E5F;&#x662F;&#x6700;&#x4E0A;&#x7EA7;&#x7684;&#x9886;&#x5BFC;&#x8005;&#x3002; &#x7531;&#x4E8E;Linux&#x662F;&#x5F00;&#x653E;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x5404;&#x5927;&#x516C;&#x53F8;&#x548C;&#x56E2;&#x4F53;&#x6839;&#x636E;Linux&#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x505A;&#x5404;&#x81EA;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x7F16;&#x7A0B;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x9020;&#x6210;&#x6839;&#x4E0B;&#x7684;&#x76EE;&#x5F55;&#x4E0D;&#x540C;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x9020;&#x6210;&#x4E2A;&#x4EBA;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x4ED6;&#x4EBA;&#x7684;Linux&#x7CFB;&#x7EDF;&#x7684;PC&#x3002;&#x56E0;&#x4E3A;&#x4F60;&#x6839;&#x672C;&#x4E0D;&#x77E5;&#x9053;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x6587;&#x4EF6;&#x5728;&#x54EA;&#x91CC;&#x3002;&#x3002;&#x3002;&#x8FD9;&#x5C31;&#x9020;&#x6210;&#x4E86;&#x6DF7;&#x4E71;&#x3002;&#x8FD9;&#x5C31;&#x662F;FHS&#xFF08;Filesystem Hierarchy Standard &#xFF09;&#x673A;&#x6784;&#x8BDE;&#x751F;&#x7684;&#x539F;&#x56E0;&#x3002;&#x8BE5;&#x673A;&#x6784;&#x662F;Linux&#x7231;&#x597D;&#x8005;&#x81EA;&#x53D1;&#x7EC4;&#x6210;&#x7684;&#x4E00;&#x4E2A;&#x56E2;&#x4F53;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x662F;&#x5BF9;Linux&#x505A;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x4E0D;&#x81F3;&#x4E8E;&#x662F;&#x64CD;&#x4F5C;&#x8005;&#x6362;&#x4E00;&#x53F0;&#x4E3B;&#x673A;&#x5C31;&#x6210;&#x4E86;Linux&#x7684;&#x2018;&#x6587;&#x76F2;&#x2019;&#x3002; &#x6839;&#x636E;FHS(http://www.pathname.com/fhs/)&#x7684;&#x5B98;&#x65B9;&#x6587;&#x4EF6;&#x6307;&#x51FA;&#xFF0C; &#x4ED6;&#x4EEC;&#x7684;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x662F;&#x5E0C;&#x671B;&#x8BA9;&#x4F7F;&#x7528;&#x8005;&#x53EF;&#x4EE5;&#x4E86;&#x89E3;&#x5230;&#x5DF2;&#x5B89;&#x88C5;&#x8F6F;&#x4EF6;&#x901A;&#x5E38;&#x653E;&#x7F6E;&#x4E8E;&#x90A3;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C; &#x6240;&#x4EE5;&#x4ED6;&#x4EEC;&#x5E0C;&#x671B;&#x72EC;&#x7ACB;&#x7684;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x5546;&#x3001;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5236;&#x4F5C;&#x8005;&#x3001;&#x4EE5;&#x53CA;&#x60F3;&#x8981;&#x7EF4;&#x62A4;&#x7CFB;&#x7EDF;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x90FD;&#x80FD;&#x591F;&#x9075;&#x5FAA;FHS&#x7684;&#x6807;&#x51C6;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;FHS&#x7684;&#x91CD;&#x70B9;&#x5728;&#x4E8E;&#x89C4;&#x8303;&#x6BCF;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#x5E94;&#x8BE5;&#x8981;&#x653E;&#x7F6E;&#x4EC0;&#x4E48;&#x6837;&#x5B50;&#x7684;&#x6570;&#x636E;&#x800C;&#x5DF2;&#x3002; &#x8FD9;&#x6837;&#x505A;&#x597D;&#x5904;&#x975E;&#x5E38;&#x591A;&#xFF0C;&#x56E0;&#x4E3A;Linux&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C31;&#x80FD;&#x591F;&#x5728;&#x65E2;&#x6709;&#x7684;&#x9762;&#x8C8C;&#x4E0B;(&#x76EE;&#x5F55;&#x67B6;&#x6784;&#x4E0D;&#x53D8;)&#x53D1;&#x5C55;&#x51FA;&#x5F00;&#x53D1;&#x8005;&#x60F3;&#x8981;&#x7684;&#x72EC;&#x7279;&#x98CE;&#x683C;&#x3002; &#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;FHS&#x662F;&#x6839;&#x636E;&#x8FC7;&#x53BB;&#x7684;&#x7ECF;&#x9A8C;&#x4E00;&#x76F4;&#x518D;&#x6301;&#x7EED;&#x7684;&#x6539;&#x7248;&#x7684;&#xFF0C;FHS&#x4F9D;&#x636E;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4F7F;&#x7528;&#x7684;&#x9891;&#x7E41;&#x4E0E;&#x5426;&#x4E0E;&#x662F;&#x5426;&#x5141;&#x8BB8;&#x4F7F;&#x7528;&#x8005;&#x968F;&#x610F;&#x66F4;&#x52A8;&#xFF0C; &#x800C;&#x5C06;&#x76EE;&#x5F55;&#x5B9A;&#x4E49;&#x6210;&#x4E3A;&#x56DB;&#x79CD;&#x4EA4;&#x4E92;&#x4F5C;&#x7528;&#x7684;&#x5F62;&#x6001;&#xFF0C;&#x7528;&#x8868;&#x683C;&#x6765;&#x8BF4;&#x6709;&#x70B9;&#x50CF;&#x5E95;&#x4E0B;&#x8FD9;&#x6837;&#xFF1A; &#x56DB;&#x79CD;&#x7C7B;&#x578B;&#xFF1A;1.&#x53EF;&#x5206;&#x4EAB;&#x7684;&#xFF1A; &#x53EF;&#x4EE5;&#x5206;&#x4EAB;&#x7ED9;&#x5176;&#x4ED6;&#x7CFB;&#x7EDF;&#x6302;&#x8F7D;&#x4F7F;&#x7528;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x6240;&#x4EE5;&#x5305;&#x62EC;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4E0E;&#x7528;&#x6237;&#x7684;&#x90AE;&#x4EF6;&#x7B49;&#x6570;&#x636E;&#xFF0C;&#x662F;&#x80FD;&#x591F;&#x5206;&#x4EAB;&#x7ED9;&#x7F51;&#x7EDC;&#x4E0A;&#x5176;&#x4ED6;&#x4E3B;&#x673A;&#x6302;&#x8F7D;&#x7528;&#x7684;&#x76EE;&#x5F55;&#xFF1B; 2.&#x4E0D;&#x53EF;&#x5206;&#x4EAB;&#x7684;&#xFF1A; &#x81EA;&#x5DF1;&#x673A;&#x5668;&#x4E0A;&#x9762;&#x8FD0;&#x4F5C;&#x7684;&#x88C5;&#x7F6E;&#x6587;&#x4EF6;&#x6216;&#x8005;&#x662F;&#x4E0E;&#x7A0B;&#x5E8F;&#x6709;&#x5173;&#x7684;socket&#x6587;&#x4EF6;&#x7B49;&#xFF0C;&#x7531;&#x4E8E;&#x4EC5;&#x4E0E;&#x81EA;&#x8EAB;&#x673A;&#x5668;&#x6709;&#x5173;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x9002;&#x5408;&#x5206;&#x4EAB;&#x7ED9;&#x5176;&#x4ED6;&#x7684;&#x4E3B;&#x673A;&#xFF1B; 3.&#x4E0D;&#x53D8;&#x7684;&#xFF1A; &#x6709;&#x4E9B;&#x6570;&#x636E;&#x662F;&#x4E0D;&#x4F1A;&#x7ECF;&#x5E38;&#x53D8;&#x52A8;&#x7684;&#xFF0C;&#x8DDF;&#x968F;&#x7740;distribution&#x800C;&#x4E0D;&#x53D8;&#x52A8;&#x3002;&#x4F8B;&#x5982;&#x51FD;&#x5F0F;&#x5E93;&#xFF0C;&#x6587;&#x4EF6;&#x8BF4;&#x660E;&#x6587;&#x4EF6;&#x3002;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x5458;&#x6240;&#x7BA1;&#x7406;&#x7684;&#x4E3B;&#x673A;&#x670D;&#x52A1;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7B49;&#x7B49;&#xFF1B; 4.&#x53EF;&#x53D8;&#x52A8;&#x7684;&#xFF1A; &#x7ECF;&#x5E38;&#x6539;&#x53D8;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F8B;&#x5982;&#x767B;&#x9646;&#x6587;&#x4EF6;&#xFF0C;&#x4E00;&#x822C;&#x7528;&#x6237;&#x53EF;&#x81EA;&#x884C;&#x6536;&#x53D7;&#x7684;&#x65B0;&#x95FB;&#x7EC4;&#x7B49;&#x3002; &#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;FHS&#x6B63;&#x5BF9;&#x76EE;&#x5F55;&#x6811;&#x67B6;&#x6784;&#x4EC5;&#x5B9A;&#x4E49;&#x51FA;&#x4E09;&#x5C42;&#x76EE;&#x5F55;&#x5E95;&#x4E0B;&#x5E94;&#x8BE5;&#x653E;&#x7F6E;&#x4EC0;&#x4E48;&#x6570;&#x636E;&#x800C;&#x5DF2;&#xFF1A; / (root,&#x6839;&#x76EE;&#x5F55;)&#xFF1A;&#x4E0E;&#x5F00;&#x673A;&#x7CFB;&#x7EDF;&#x6709;&#x5173;&#xFF1B;/usr (unix software resource)&#xFF1A;&#x4E0E;&#x8F6F;&#x4EF6;&#x5B89;&#x88C5;/&#x6267;&#x884C;&#x6709;&#x5173;&#xFF1B;/var (variable)&#xFF1A;&#x4E0E;&#x7CFB;&#x7EDF;&#x8FD0;&#x4F5C;&#x8FC7;&#x7A0B;&#x6709;&#x5173;&#x3002; &#x4E00;.&#x6839;&#x76EE;&#x5F55;( / )&#x7684;&#x610F;&#x4E49;&#x4E0E;&#x5185;&#x5BB9;&#xFF1A;&#x6839;&#x76EE;&#x5F55;&#x662F;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;&#x6700;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x4F46;&#x6240;&#x6709;&#x7684;&#x76EE;&#x5F55;&#x90FD;&#x662F;&#x7531;&#x6839;&#x76EE;&#x5F55;&#x884D;&#x751F;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x540C;&#x65F6;&#x6839;&#x76EE;&#x5F55;&#x4E0E;&#x5F00;&#x673A;/&#x8FD8;&#x539F;/&#x7CFB;&#x7EDF;&#x4FEE;&#x590D;&#x7B49;&#x52A8;&#x4F5C;&#x6709;&#x5173;&#x3002;&#x7531;&#x4E8E;&#x7CFB;&#x7EDF;&#x5F00;&#x673A;&#x65F6;&#x9700;&#x8981;&#x7279;&#x5B9A;&#x7684;&#x5F00;&#x673A;&#x8F6F;&#x4EF6;&#xFF0C;&#x6838;&#x5FC3;&#x6587;&#x4EF6;&#xFF0C;&#x5F00;&#x673A;&#x6240;&#x9700;&#x7A0B;&#x5E8F;&#xFF0C;&#x51FD;&#x5F0F;&#x5E93;&#x7B49;&#x7B49;&#x6587;&#x4EF6;&#x6570;&#x636E;&#xFF0C;&#x82E5;&#x7CFB;&#x7EDF;&#x51FA;&#x73B0;&#x9519;&#x8BEF;&#x65F6;&#xFF0C;&#x6839;&#x76EE;&#x5F55;&#x4E5F;&#x5FC5;&#x987B;&#x8981;&#x5305;&#x542B;&#x6709;&#x80FD;&#x591F;&#x4FEE;&#x590D;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x7A0B;&#x5E8F;&#x624D;&#x884C;&#x3002;&#x56E0;&#x4E3A;&#x6839;&#x76EE;&#x5F55;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF0C;&#x6240;&#x4EE5;&#x5728;FHS&#x7684;&#x8981;&#x6C42;&#x65B9;&#x9762;&#xFF0C;&#x4ED6;&#x5E0C;&#x671B;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x4E0D;&#x8981;&#x653E;&#x5728;&#x975E;&#x5E38;&#x5927;&#x7684;&#x5206;&#x533A;&#xFF0C;&#x56E0;&#x4E3A;&#x8D8A;&#x5927;&#x7684;&#x5206;&#x533A;&#x5185;&#x4F60;&#x4F1A;&#x653E;&#x5165;&#x8D8A;&#x591A;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x6B64;&#x4E00;&#x6765;&#x6839;&#x76EE;&#x5F55;&#x6240;&#x5728;&#x5206;&#x533A;&#x5C31;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x8F83;&#x591A;&#x7684;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x7684;&#x673A;&#x4F1A;&#x3002; &#x56E0;&#x6B64;FHS&#x6807;&#x51C6;&#x5EFA;&#x8BAE;&#xFF1A;&#x6839;&#x76EE;&#x5F55;(/)&#x6240;&#x5728;&#x5206;&#x533A;&#x5E94;&#x8BE5;&#x8D8A;&#x5C0F;&#x8D8A;&#x597D;&#xFF0C; &#x4E14;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6240;&#x5B89;&#x88C5;&#x7684;&#x8F6F;&#x4EF6;&#x6700;&#x597D;&#x4E0D;&#x8981;&#x4E0E;&#x6839;&#x76EE;&#x5F55;&#x653E;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x5206;&#x533A;&#x5185;&#xFF0C;&#x4FDD;&#x6301;&#x6839;&#x76EE;&#x5F55;&#x8D8A;&#x5C0F;&#x8D8A;&#x597D;&#x3002; &#x5982;&#x6B64;&#x4E0D;&#x4F46;&#x6548;&#x80FD;&#x8F83;&#x4F73;&#xFF0C;&#x6839;&#x76EE;&#x5F55;&#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E5F;&#x8F83;&#x4E0D;&#x5BB9;&#x6613;&#x53D1;&#x751F;&#x95EE;&#x9898;&#x3002;&#x8BF4;&#x767D;&#x4E86;&#xFF0C;&#x5C31;&#x662F;&#x6839;&#x76EE;&#x5F55;&#x548C;Windows&#x7684;C&#x76D8;&#x4E00;&#x4E2A;&#x6837;&#x3002; &#x6839;&#x636E;&#x4EE5;&#x4E0A;&#x539F;&#x56E0;&#xFF0C;FHS&#x8BA4;&#x4E3A;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x5E94;&#x8BE5;&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x5B50;&#x76EE;&#x5F55;&#xFF1A; &#x76EE;&#x5F55; &#x5E94;&#x653E;&#x7F6E;&#x6863;&#x6848;&#x5185;&#x5BB9; /bin &#x7CFB;&#x7EDF;&#x6709;&#x5F88;&#x591A;&#x653E;&#x7F6E;&#x6267;&#x884C;&#x6587;&#x6863;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4F46;/bin&#x6BD4;&#x8F83;&#x7279;&#x6B8A;&#x3002;&#x56E0;&#x4E3A;/bin&#x653E;&#x7F6E;&#x7684;&#x662F;&#x5355;&#x4EBA;&#x7EF4;&#x62A4;&#x6A21;&#x5F0F;&#x4E0B;&#x8FD8;&#x80FD;&#x591F;&#x88AB;&#x64CD;&#x4F5C;&#x7684;&#x6307;&#x4EE4;&#x3002;&#x5728;/bin&#x5E95;&#x4E0B;&#x7684;&#x6307;&#x4EE4;&#x53EF;&#x4EE5;&#x88AB;root&#x4E0E;&#x666E;&#x901A;&#x7528;&#x6237;&#x6240;&#x4F7F;&#x7528;&#xFF0C;&#x4E3B;&#x8981;&#x6709;: ls, cd, pwd, cat, chmod, chown, date, mv, mkdir, cp, bash&#x7B49;&#x7B49;&#x5E38;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x3002; /boot &#x4E3B;&#x8981;&#x653E;&#x7F6E;&#x5F00;&#x673A;&#x4F1A;&#x4F7F;&#x7528;&#x7684;&#x6863;&#x6848;&#xFF0C;&#x5305;&#x62EC;Linux&#x6838;&#x5FC3;&#x6863;&#x6848;&#x4EE5;&#x53CA;&#x5F00;&#x673A;&#x6240;&#x9700;&#x8BBE;&#x5B9A;&#x6587;&#x6863;&#x7B49;&#x3002;Linux kernel&#x5E38;&#x7528;&#x7684;&#x6587;&#x6863;&#x540D;&#x4E3A;: vmlinuz&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7684;&#x662F;grub&#x8FD9;&#x4E2A;&#x5F00;&#x673A;&#x7BA1;&#x7406;&#x7A0B;&#x5E8F;&#xFF0C;&#x5219;&#x8FD8;&#x4F1A;&#x5B58;&#x5728;/boot/grub &#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x3002; /dev &#x5728;linux&#x7CFB;&#x7EDF;&#x4E0A;&#xFF0C;&#x4EFB;&#x4F55;&#x88C5;&#x7F6E;&#x4E0E;&#x5468;&#x8FB9;&#x8BBE;&#x5907;&#x90FD;&#x662F;&#x4EE5;&#x6587;&#x6863;&#x7684;&#x5F62;&#x5F0F;&#x5B58;&#x5728;&#x4E8E;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x5F53;&#x4E2D;&#x3002;&#x53EA;&#x8981;&#x901A;&#x8FC7;&#x5B58;&#x53D6;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x67D0;&#x4E2A;&#x6587;&#x6863;&#xFF0C;&#x5C31;&#x7B49;&#x4E8E;&#x5B58;&#x53D6;&#x67D0;&#x4E2A;&#x8BBE;&#x5907;&#x3002;&#x4F8B;&#x5982;&#x91CD;&#x8981;&#x7684;&#x6587;&#x6863;&#x6709; /dev/null, /dev/zero, /dev/tty, /dev/lp, /dev/hd, /dev/sd* &#x7B49;&#x7B49;&#x3002; /etc &#x7CFB;&#x7EDF;&#x4E3B;&#x8981;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x6863;&#x51E0;&#x4E4E;&#x90FD;&#x653E;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x5185;&#xFF0C;&#x4F8B;&#x5982;&#x7528;&#x6237;&#x7684;&#x8D26;&#x53F7;&#x5BC6;&#x7801;&#xFF0C;&#x5404;&#x79CD;&#x670D;&#x52A1;&#x7684;&#x542F;&#x52A8;&#x6587;&#x6863;&#x7B49;&#x7B49;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x5404;&#x4E2A;&#x6587;&#x6863;&#x5C5E;&#x6027;&#x662F;&#x53EF;&#x4EE5;&#x8BA9;&#x666E;&#x901A;&#x7528;&#x6237;&#x67E5;&#x9605;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x6709;root&#x7528;&#x6237;&#x624D;&#x6709;&#x6743;&#x529B;&#x4FEE;&#x6539;&#x3002;FHS&#x5EFA;&#x8BAE;&#x4E0D;&#x8981;&#x653E;&#x7F6E;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;(binary)&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E2D;&#x3002;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x6863;&#x6848;&#x6709;: /etc/inittab, /etc/init.d, /etc/modprobe.conf, /etc/X11, /etc/fstab, /etc/sysconfig &#x7B49;&#x7B49;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5176;&#x4E0B;&#x91CD;&#x8981;&#x7684;&#x76EE;&#x5F55;&#x6709;: /etc/init.d/ &#x6240;&#x6709;&#x670D;&#x52A1;&#x7684;&#x9884;&#x8BBE;&#x542F;&#x52A8;script&#x90FD;&#x662F;&#x653E;&#x5728;&#x8FD9;&#x91CC;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x8981;&#x5176;&#x542F;&#x52A8;&#x6216;&#x8005;&#x5173;&#x95ED;iptables&#x7684;&#x8BDD; /etc/init.d/iptables start/stop ; /etc/xinetd.d/ &#x8FD9;&#x5C31;&#x662F;&#x6240;&#x8C13;&#x7684;super daemon&#x7BA1;&#x7406;&#x7684;&#x5404;&#x9879;&#x670D;&#x52A1;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x3002; /etc/X11/ &#x4E0E;X windows&#x6709;&#x5404;&#x79CD;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x90FD;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x5C24;&#x5176;&#x662F;xorg.conf &#x6216; XF86Config &#x8FD9;&#x4E24;&#x4E2A;X server&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002; /home &#x8FD9;&#x662F;&#x7CFB;&#x7EDF;&#x9884;&#x8BBE;&#x7684;&#x666E;&#x901A;&#x7528;&#x6237;&#x7684;&#x5BB6;&#x76EE;&#x5F55;(home directory)&#x3002;&#x5728;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x7528;&#x6237;&#x65F6;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x81EA;&#x52A8;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x5EFA;&#x4E00;&#x4E2A;&#x4E0E;&#x7528;&#x6237;&#x540D;&#x76F8;&#x540C;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4F5C;&#x4E3A;&#x65B0;&#x589E;&#x7528;&#x6237;&#x7684;&#x5BB6;&#x76EE;&#x5F55;&#x3002; /lib &#x7CFB;&#x7EDF;&#x7684;&#x51FD;&#x5F0F;&#x5E93;&#x975E;&#x5E38;&#x7684;&#x591A;&#xFF0C;&#x800C; /lib &#x653E;&#x7F6E;&#x7684;&#x5219;&#x662F;&#x5728;&#x5F00;&#x673A;&#x7684;&#x65F6;&#x4F1A;&#x7528;&#x5230;&#x7684;&#x51FD;&#x5F0F;&#x5E93;&#xFF0C;&#x4EE5;&#x53CA;&#x5728; /bin &#x6216; /sbin &#x5E95;&#x4E0B;&#x7684;&#x6307;&#x4EE4;&#x4F1A;&#x547C;&#x53EB;&#x7684;&#x51FD;&#x5F0F;&#x5E93;&#x3002; /media &#x8FD9;&#x4E2A; /media &#x5E95;&#x4E0B;&#x653E;&#x7F6E;&#x7684;&#x5C31;&#x662F;&#x53EF;&#x79FB;&#x9664;&#x7684;&#x88C5;&#x7F6E;&#x3002;&#x5305;&#x62EC;&#x8F6F;&#x789F;&#xFF0C;&#x5149;&#x789F;&#xFF0C;DVD&#x7B49;&#x7B49;&#x88C5;&#x7F6E;&#x90FD;&#x6682;&#x65F6;&#x6302;&#x8F7D;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x6302;&#x8F7D;&#x76EE;&#x5F55;&#x540D;&#x6709;&#xFF1A;/media/floppy /media/cdrom &#x7B49;&#x7B49;&#x3002; /mnt &#x5982;&#x679C;&#x4F60;&#x60F3;&#x8981;&#x6682;&#x65F6;&#x6302;&#x8F7D;&#x67D0;&#x4E9B;&#x989D;&#x5916;&#x7684;&#x88C5;&#x7F6E;&#xFF0C;&#x5982;U&#x76D8;&#x3002;&#x4E00;&#x822C;&#x5EFA;&#x8BAE;&#x4F60;&#x53EF;&#x4EE5;&#x6302;&#x8F7D;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x3002;&#x5728;&#x65E9;&#x4E9B;&#x65F6;&#x5019;&#x6CA1;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x7684;&#x7528;&#x9014;&#x4E0E; /media &#x76F8;&#x540C;&#xFF0C;&#x53EA;&#x662F;&#x6709;&#x4E86; /media &#x4E4B;&#x540E;&#xFF0C;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x5C31;&#x7528;&#x6765;&#x6682;&#x65F6;&#x6302;&#x8F7D;&#x4E34;&#x65F6;&#x88C5;&#x7F6E;&#x4E86;&#x3002; /opt &#x8FD9;&#x4E2A;&#x662F;&#x7ED9;&#x7B2C;&#x4E09;&#x65B9;&#x534F;&#x529B;&#x8F6F;&#x4EF6;&#x653E;&#x7F6E;&#x7684;&#x76EE;&#x5F55;&#x3002;&#x4E3E;&#x4F8B;&#x6765;&#x8BF4;&#xFF0C;KDE &#x8FD9;&#x4E2A;&#x684C;&#x9762;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#x662F;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x8BA1;&#x5212;&#xFF0C;&#x4E0D;&#x8FC7;&#x4ED6;&#x53EF;&#x4EE5;&#x5B89;&#x88C5;&#x5230; Linux &#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64; KDE &#x7684;&#x8F6F;&#x4EF6;&#x5C31;&#x5EFA;&#x8BAE;&#x653E;&#x7F6E;&#x5728;&#x6B64;&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x8981;&#x81EA;&#x884C;&#x5B89;&#x88C5;&#x989D;&#x5916;&#x7684;&#x8F6F;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x53EF;&#x4EE5;&#x5C06;&#x4F60;&#x7684;&#x8F6F;&#x4EF6;&#x4F53;&#x5B89;&#x88C5;&#x5230;&#x8FD9;&#x91CC;&#x6765;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x4EE5;&#x524D;&#x7684; Linux &#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x6211;&#x8FD8;&#x662F;&#x4E60;&#x60EF;&#x653E;&#x7F6E;&#x5728; /usr/local &#x76EE;&#x5F55;&#x4E0B;&#x3002; /root &#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x5458;&#xFF08;root&#xFF09;&#x7684;&#x5BB6;&#x76EE;&#x5F55;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x653E;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x8FDB;&#x5165;&#x5355;&#x4EBA;&#x7EF4;&#x62A4;&#x6A21;&#x5F0F;&#x800C;&#x4EC5;&#x6302;&#x8F7D;&#x6839;&#x76EE;&#x5F55;&#x65F6;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x5C31;&#x80FD;&#x591F;&#x62E5;&#x6709; root &#x7684;&#x5BB6;&#x76EE;&#x5F55;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x4F1A;&#x5E0C;&#x671B; root &#x7684;&#x5BB6;&#x76EE;&#x5F55;&#x4E0E;&#x6839;&#x76EE;&#x5F55;&#x653E;&#x7F6E;&#x5728;&#x540C;&#x4E00;&#x5206;&#x533A;&#x4E2D;&#x3002; /sbin Linux&#x6709;&#x975E;&#x5E38;&#x591A;&#x6307;&#x4EE4;&#x662F;&#x7528;&#x6765;&#x8BBE;&#x5B9A;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x7684;&#xFF0C;&#x8FD9;&#x4E9B;&#x6307;&#x4EE4;&#x53EA;&#x6709; root &#x624D;&#x80FD;&#x591F;&#x5229;&#x7528;&#x6765;&#x8BBE;&#x5B9A;&#x7CFB;&#x7EDF;&#xFF0C;&#x5176;&#x4ED6;&#x4F7F;&#x7528;&#x8005;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x7528;&#x6765;&#x67E5;&#x8BE2;&#x800C;&#x5DF2;&#x3002;&#x653E;&#x5728; /sbin &#x5E95;&#x4E0B;&#x7684;&#x4E3A;&#x5F00;&#x673A;&#x8FC7;&#x7A0B;&#x4E2D;&#x6240;&#x9700;&#x8981;&#x7684;&#xFF0C;&#x91CC;&#x9762;&#x5305;&#x62EC;&#x4E86;&#x5F00;&#x673A;&#xFF0C;&#x4FEE;&#x590D;&#xFF0C;&#x8FD8;&#x539F;&#x7CFB;&#x7EDF;&#x6240;&#x9700;&#x8981;&#x7684;&#x6307;&#x4EE4;&#x3002;&#x81F3;&#x4E0E;&#x67D0;&#x4E9B;&#x4F3A;&#x670D;&#x5668;&#x8F6F;&#x4F53;&#x7A0B;&#x5F0F;&#xFF0C;&#x4E00;&#x822C;&#x5219;&#x653E;&#x7F6E;&#x5230; /usr/sbin &#x5F53;&#x4E2D;&#x3002;&#x81F3;&#x4E8E;&#x672C;&#x673A;&#x81EA;&#x884C;&#x5B89;&#x88C5;&#x7684;&#x8F6F;&#x4F53;&#x6240;&#x4EA7;&#x751F;&#x7684;&#x7CFB;&#x7EDF;&#x6267;&#x884C;&#x6863;&#xFF08;system binary&#xFF09;&#xFF0C;&#x5219;&#x653E;&#x7F6E;&#x5230; /usr/local/sbin/ &#x5F53;&#x4E2D;&#x4E86;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x6307;&#x4EE4;&#x5305;&#x62EC;&#xFF1A; fdisk&#xFF0C; fsck&#xFF0C; ifconfig&#xFF0C; init&#xFF0C; mkfs &#x7B49;&#x7B49;&#x3002; /srv srv&#x53EF;&#x4EE5;&#x770B;&#x4F5C; service &#x7684;&#x7F29;&#x5199;&#xFF0C;&#x662F;&#x4E00;&#x4E9B;&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x4E4B;&#x540E;&#xFF0C;&#x8FD9;&#x4E9B;&#x670D;&#x52A1;&#x6240;&#x9700;&#x53D6;&#x7528;&#x7684;&#x8D44;&#x6599;&#x76EE;&#x5F55;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x670D;&#x52A1;&#x4F8B;&#x5982; WWW, FTP &#x7B49;&#x7B49;&#x3002;&#x4E3E;&#x4F8B;&#x6765;&#x8BF4;&#xFF0C; WWW &#x4F3A;&#x670D;&#x5668;&#x9700;&#x8981;&#x7684;&#x7F51;&#x9875;&#x8D44;&#x6599;&#x5C31;&#x53EF;&#x4EE5;&#x653E;&#x7F6E;&#x5728; /srv/www/ &#x91CC;&#x9762;&#x3002; /tmp &#x8FD9;&#x662F;&#x8BA9;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x8005;&#x6216;&#x8005;&#x662F;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x6682;&#x65F6;&#x653E;&#x7F6E;&#x6863;&#x6848;&#x7684;&#x5730;&#x65B9;&#x3002;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x662F;&#x4EFB;&#x4F55;&#x4EBA;&#x90FD;&#x80FD;&#x591F;&#x5B58;&#x53D6;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x9700;&#x8981;&#x5B9A;&#x671F;&#x7684;&#x6E05;&#x7406;&#x4E00;&#x4E0B;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x91CD;&#x8981;&#x8D44;&#x6599;&#x4E0D;&#x53EF;&#x653E;&#x7F6E;&#x5728;&#x6B64;&#x76EE;&#x5F55;&#x3002;&#x56E0;&#x4E3A; FHS &#x751A;&#x81F3;&#x5EFA;&#x8BAE;&#x5728;&#x5F00;&#x673A;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x8981;&#x5C06; /tmp &#x4E0B;&#x7684;&#x8D44;&#x6599;&#x90FD;&#x5220;&#x9664;&#x3002; &#x4E8B;&#x5B9E;&#x4E0A; FHS &#x9488;&#x5BF9;&#x6839;&#x76EE;&#x5F55;&#x6240;&#x5B9A;&#x4E49;&#x7684;&#x6807;&#x51C6;&#x5C31;&#x4EC5;&#x9650;&#x4E8E;&#x4E0A;&#x8868;&#xFF0C;&#x4E0D;&#x8FC7;&#x4ECD;&#x65E7;&#x6709;&#x4E9B;&#x76EE;&#x5F55;&#x4E5F;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4E0B;&#xFF1A; &#x76EE;&#x5F55; &#x5E94;&#x653E;&#x7F6E;&#x6587;&#x4EF6;&#x5185;&#x5BB9; /lost+found &#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x662F;&#x4F7F;&#x7528;&#x6807;&#x51C6;&#x7684; ext2 / ext3 &#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x683C;&#x5F0F;&#x65F6;&#x624D;&#x4F1A;&#x4EA7;&#x751F;&#x7684;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C; &#x76EE;&#x7684;&#x5728;&#x4E8E;&#x5F53;&#x6863;&#x6848;&#x7CFB;&#x7EDF;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x65F6;&#xFF0C;&#x5C06;&#x4E00;&#x4E9B;&#x9057;&#x5931;&#x7684;&#x7247;&#x6BB5;&#x653E;&#x7F6E;&#x5230;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x901A;&#x5E38;&#x4F1A;&#x5728;&#x5206;&#x5272;&#x69FD;&#x7684;&#x6700;&#x9876;&#x5C42;&#x5B58;&#x5728;&#xFF0C;&#x4F8B;&#x5982;&#x4F60;&#x52A0;&#x88C5;&#x4E00;&#x4E2A;&#x786C;&#x76D8;&#x4E8E; /disk &#x4E2D;&#xFF0C;&#x90A3;&#x5728;&#x8FD9;&#x4E2A;&#x7CFB;&#x7EDF;&#x4E0B;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x76EE;&#x5F55; /disk/lost+found /proc &#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x672C;&#x8EAB;&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF08;virtual filesystem)&#x3002;&#x4ED6;&#x653E;&#x7F6E;&#x7684;&#x8D44;&#x6599;&#x90FD;&#x5728;&#x5185;&#x5B58;&#x5F53;&#x4E2D;&#xFF0C;&#x4F8B;&#x5982;&#x7CFB;&#x7EDF;&#x6838;&#x5FC3;&#xFF0C;&#x884C;&#x7A0B;&#x8D44;&#x8BAF;&#xFF08;process&#xFF09;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x8D44;&#x6599;&#x90FD;&#x5728;&#x5185;&#x5B58;&#x5F53;&#x4E2D;&#xFF0C;&#x6240;&#x4EE5;&#x672C;&#x8EAB;&#x4E0D;&#x5360;&#x4EFB;&#x4F55;&#x786C;&#x76D8;&#x7A7A;&#x95F4;&#x3002;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x6709;&#xFF1A; /proc/cpuinfo&#xFF0C; /proc/dma&#xFF0C; /proc/interrupts&#xFF0C; /proc/ioports&#xFF0C; /proc/net/* &#x7B49;&#x7B49;&#x3002; /sys &#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x5176;&#x5B9E;&#x8DDF; /proc &#x975E;&#x5E38;&#x7C7B;&#x4F3C;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x865A;&#x62DF;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E3B;&#x8981;&#x4E5F;&#x662F;&#x8BB0;&#x5F55;&#x4E0E;&#x6838;&#x5FC3;&#x76F8;&#x5173;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5305;&#x62EC;&#x76EE;&#x524D;&#x5DF2;&#x8F7D;&#x5165;&#x7684;&#x6838;&#x5FC3;&#x6A21;&#x7EC4;&#x4E0E;&#x6838;&#x5FC3;&#x4FA6;&#x6D4B;&#x5230;&#x7684;&#x786C;&#x4EF6;&#x88C5;&#x7F6E;&#x6587;&#x4EF6;&#x7B49;&#x7B49;&#x3002;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x540C;&#x6837;&#x4E0D;&#x5360;&#x786C;&#x76D8;&#x5BB9;&#x91CF;&#x3002; &#x9664;&#x4E86;&#x8FD9;&#x4E9B;&#x76EE;&#x5F55;&#x7684;&#x5185;&#x5BB9;&#x4E4B;&#x5916;&#xFF0C;&#x53E6;&#x5916;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x56E0;&#x4E3A;&#x6839;&#x76EE;&#x5F55;&#x4E0E;&#x5F00;&#x673A;&#x6709;&#x5173;&#xFF0C;&#x5F00;&#x673A;&#x8FC7;&#x7A0B;&#x4E2D;&#x4EC5;&#x6709;&#x6839;&#x76EE;&#x5F55;&#x4F1A;&#x88AB;&#x6302;&#x8F7D;&#xFF0C;&#x5176;&#x4ED6;&#x5206;&#x533A;&#x5219;&#x662F;&#x5728;&#x5F00;&#x673A;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#x624D;&#x4F1A;&#x6301;&#x7EED;&#x8FDB;&#x884C;&#x6302;&#x8F7D;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x5C31;&#x662F;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x56E0;&#x6B64;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x4E0E;&#x5F00;&#x673A;&#x8FC7;&#x7A0B;&#x6709;&#x5173;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x591F;&#x4E0E;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x591F;&#x4E0E;&#x6839;&#x76EE;&#x5F55;&#x653E;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x533A;&#x53BB;&#x3002;&#x4E0D;&#x80FD;&#x4E0E;&#x6839;&#x76EE;&#x5F55;&#x5206;&#x5F00;&#x7684;&#x76EE;&#x5F55;&#x5982;&#x4E0B;&#xFF1A; /etc &#xFF1A; &#x914D;&#x7F6E;&#x6587;&#x4EF6;/bin &#xFF1A; &#x91CD;&#x8981;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;/dev &#xFF1A; &#x6240;&#x9700;&#x8981;&#x7684;&#x88C5;&#x7F6E;&#x6587;&#x4EF6;/lib &#xFF1A; &#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x6240;&#x9700;&#x8981;&#x7684;&#x51FD;&#x5F0F;&#x5E93;&#x4E0E;&#x6838;&#x5FC3;&#x6240;&#x9700;&#x7684;&#x6A21;&#x5757;/sbin &#xFF1A; &#x91CD;&#x8981;&#x7684;&#x7CFB;&#x7EDF;&#x6267;&#x884C;&#x6587;&#x4EF6; &#x8FD9;&#x4E94;&#x4E2A;&#x76EE;&#x5F55;&#x5343;&#x4E07;&#x4E0D;&#x80FD;&#x4E0E;&#x6839;&#x76EE;&#x5F55;&#x5206;&#x5F00;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x5206;&#x533A;&#x3002; &#x4E8C;. /usr &#x7684;&#x610F;&#x4E49;&#x4E0E;&#x5185;&#x5BB9;&#xFF1A;&#x4F9D;&#x636E;FHS&#x7684;&#x57FA;&#x672C;&#x5B9A;&#x4E49;&#xFF0C;/usr &#x91CC;&#x9762;&#x653E;&#x7F6E;&#x7684;&#x6570;&#x636E;&#x5C5E;&#x4E8E;&#x53EF;&#x5206;&#x4EAB;&#x7684;&#x4E0E;&#x4E0D;&#x53EF;&#x53D8;&#x52A8;&#x7684;&#xFF08;shareable&#xFF0C; static&#xFF09;&#x3002;&#x5982;&#x679C;&#x4F60;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x5206;&#x533A;&#x7684;&#x6302;&#x8F7D;&#xFF0C;&#x90A3;&#x4E48; /usr &#x786E;&#x5B9E;&#x53EF;&#x4EE5;&#x5206;&#x4EAB;&#x7ED9;&#x5C40;&#x57DF;&#x7F51;&#x7EDC;&#x5185;&#x7684;&#x5176;&#x4ED6;&#x4E3B;&#x673A;&#x6765;&#x4F7F;&#x7528;&#x3002; /usr &#x4E0D;&#x662F; user &#x7684;&#x7F29;&#x5199;&#xFF0C;&#x5176;&#x5B9E; usr &#x662F; Unix Software Resource &#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;Unix&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8F6F;&#x4EF6;&#x8D44;&#x6E90;&#x6240;&#x653E;&#x7F6E;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7528;&#x6237;&#x7684;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x70B9;&#x8981;&#x6CE8;&#x610F;&#x3002;FHS &#x5EFA;&#x8BAE;&#x6240;&#x6709;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x8005;&#xFF0C;&#x5E94;&#x8BE5;&#x5C06;&#x4ED6;&#x4EEC;&#x7684;&#x6570;&#x636E;&#x5408;&#x7406;&#x7684;&#x653E;&#x7F6E;&#x5230;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6B64;&#x76EE;&#x5F55;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x81EA;&#x884C;&#x5EFA;&#x7ACB;&#x8BE5;&#x8F6F;&#x4EF6;&#x81EA;&#x5DF1;&#x7684;&#x72EC;&#x7ACB;&#x76EE;&#x5F55;&#x3002; &#x56E0;&#x4E3A;&#x662F;&#x6240;&#x6709;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7684;&#x8F6F;&#x4EF6;&#x90FD;&#x4F1A;&#x653E;&#x7F6E;&#x5728; /usr &#x5E95;&#x4E0B;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x6709;&#x70B9;&#x7C7B;&#x4F3C; windows &#x7CFB;&#x7EDF;&#x7684; C:Windows + C:Program files &#x8FD9;&#x4E24;&#x4E2A;&#x76EE;&#x5F55;&#x7684;&#x7EFC;&#x5408;&#x4F53;&#xFF0C;&#x7CFB;&#x7EDF;&#x521A;&#x5B89;&#x88C5;&#x5B8C;&#x6BD5;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4F1A;&#x5360;&#x7528;&#x6700;&#x591A;&#x7684;&#x786C;&#x76D8;&#x5BB9;&#x91CF;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;/usr &#x7684;&#x4E0B;&#x7EA7;&#x76EE;&#x5F55;&#x5EFA;&#x8BAE;&#x6709;&#x5E95;&#x4E0B;&#x8FD9;&#x4E9B;&#xFF1A; &#x76EE;&#x5F55; &#x5E94;&#x653E;&#x7F6E;&#x6587;&#x4EF6;&#x5185;&#x5BB9; /usr/X11R6/ &#x4E3A;X Window System &#x91CD;&#x8981;&#x6570;&#x636E;&#x6240;&#x653E;&#x7F6E;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x53D6;&#x540D;&#x4E3A; X11R6 &#x662F;&#x56E0;&#x4E3A;&#x6700;&#x540E;&#x7684; X &#x7248;&#x672C;&#x4E3A; 11 &#x7248;&#xFF0C;&#x4E14;&#x8BE5;&#x7248;&#x7684;&#x7B2C; 6 &#x6B21;&#x4E8B;&#x51FA;&#x4E4B;&#x610F;&#x3002; /usr/bin/ &#x7EDD;&#x5927;&#x90E8;&#x5206;&#x7684;&#x7528;&#x6237;&#x53EF;&#x4F7F;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x90FD;&#x653E;&#x5728;&#x8FD9;&#x91CC;&#x3002;&#x8BF7;&#x6CE8;&#x610F;&#x5230;&#x4ED6;&#x4E0E; /bin &#x7684;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x3002; /usr/include/ C/C++ &#x7B49;&#x7A0B;&#x5E8F;&#x8BED;&#x8A00;&#x7684;&#x5934;&#x6587;&#x4EF6;&#xFF08;header&#xFF09;&#x4E0E;&#x51FD;&#x6570;&#x5E93;&#x6587;&#x4EF6;&#xFF08;include&#xFF09;&#x653E;&#x7F6E;&#x5904;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x4EE5; tar &#x65B9;&#x5F0F;&#xFF08; *.tar.gz &#x7684;&#x65B9;&#x5F0F;&#x5B89;&#x88C5;&#x8F6F;&#x4EF6; ) &#x5B89;&#x88C5;&#x67D0;&#x4E9B;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x5230;&#x91CC;&#x9762;&#x7684;&#x8BB8;&#x591A;&#x5305;&#x542B;&#x6587;&#x4EF6;&#x3002; /usr/lib/ &#x5305;&#x542B;&#x5E94;&#x7528;&#x8F6F;&#x4EF6;&#x7684;&#x51FD;&#x5F0F;&#x5E93;&#xFF0C;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#xFF08;object file&#xFF09;&#xFF0C;&#x4EE5;&#x53CA;&#x4E0D;&#x88AB;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x8005;&#x60EF;&#x7528;&#x7684;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x6216;&#x811A;&#x672C;&#xFF08;script&#xFF09;&#x3002;&#x67D0;&#x4E9B;&#x8F6F;&#x4EF6;&#x4F1A;&#x63D0;&#x4F9B;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x7684;&#x6307;&#x4EE4;&#x6765;&#x8FDB;&#x884C;&#x670D;&#x52A1;&#x5668;&#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x8FD9;&#x4E9B;&#x6307;&#x4EE4;&#x4E5F;&#x4E0D;&#x4F1A;&#x7ECF;&#x5E38;&#x88AB;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x5458;&#x64CD;&#x4F5C;&#xFF0C;&#x90A3;&#x5C31;&#x4F1A;&#x88AB;&#x6446;&#x653E;&#x5230;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;&#x7684;&#x65F6;X86_64&#x7684; Linux &#x7CFB;&#x7EDF;&#xFF0C;&#x90A3;&#x53EF;&#x80FD;&#x4F1A;&#x6709; /usr/lib64/ &#x76EE;&#x5F55;&#x4EA7;&#x751F;&#x3002; /usr/local/ root &#x7528;&#x6237;&#x5728;&#x672C;&#x673A;&#x81EA;&#x884C;&#x5B89;&#x88C5;&#x81EA;&#x5DF1;&#x4E0B;&#x7684;&#x8F6F;&#x4EF6;&#xFF0C;&#x5EFA;&#x8BAE;&#x5B89;&#x88C5;&#x5230;&#x6B64;&#x76EE;&#x5F55;&#xFF0C;&#x8FD9;&#x6837;&#x4F1A;&#x6BD4;&#x8F83;&#x4FBF;&#x4E8E;&#x7BA1;&#x7406;&#x3002;&#x4E3E;&#x4F8B;&#x6765;&#x8BF4;&#xFF0C;&#x4F60;&#x7684;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x63D0;&#x4F9B;&#x7684;&#x8F6F;&#x4EF6;&#x7248;&#x672C;&#x8F83;&#x65E7;&#xFF0C;&#x4F60;&#x60F3;&#x5B89;&#x88C5;&#x8F83;&#x65B0;&#x7684;&#x8F6F;&#x4EF6;&#x4F46;&#x53C8;&#x4E0D;&#x60F3;&#x79FB;&#x9664;&#x65E7;&#x7248;&#xFF0C;&#x6B64;&#x65F6;&#x4F60;&#x53EF;&#x4EE5;&#x5C06;&#x65B0;&#x7248;&#x8F6F;&#x4EF6;&#x5B89;&#x88C5;&#x4E8E; /usr/local/ &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x53EF;&#x4E0E;&#x539F;&#x6765;&#x7684;&#x65E7;&#x7248;&#x8F6F;&#x4EF6;&#x53C8;&#x5206;&#x522B;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x5230; /usr/local &#x53BB;&#x770B;&#x770B;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x4E5F;&#x662F;&#x5177;&#x6709; bin&#xFF0C; etc&#xFF0C; include&#xFF0C; lib &#x7B49;&#x7B49;&#x7684;&#x4E0B;&#x7EA7;&#x76EE;&#x5F55;&#x3002; /usr/sbin &#x975E;&#x7CFB;&#x7EDF;&#x6B63;&#x5E38;&#x8FD0;&#x4F5C;&#x6240;&#x9700;&#x8981;&#x7684;&#x7CFB;&#x7EDF;&#x6307;&#x4EE4;&#x3002;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x5C31;&#x662F;&#x67D0;&#x4E9B;&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x5668;&#x8F6F;&#x4EF6;&#x7684;&#x6307;&#x4EE4;&#xFF08;daemon&#xFF09;&#x3002; /usr/share/ &#x653E;&#x7F6E;&#x5171;&#x4EAB;&#x6587;&#x4EF6;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x65B9;&#x653E;&#x7F6E;&#x7684;&#x6570;&#x636E;&#x51E0;&#x4E4E;&#x662F;&#x4E0D;&#x5206;&#x786C;&#x4EF6;&#x67B6;&#x6784;&#x5747;&#x53EF;&#x4EE5;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x4E3A;&#x51E0;&#x4E4E;&#x90FD;&#x662F;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x3002;&#x5728;&#x6B64;&#x76EE;&#x5F55;&#x4E0B;&#x5E38;&#x89C1;&#x7684;&#x76EE;&#x5F55;&#x6709;&#xFF1A; /usr/share/man &#xFF1A;&#x8FDE;&#x673A;&#x5E2E;&#x52A9;&#x6587;&#x4EF6;&#x3002; /usr/src &#x4E00;&#x822C;&#x6E90;&#x4EE3;&#x7801;&#x5EFA;&#x8BAE;&#x653E;&#x7F6E;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;src &#x6709; source &#x7684;&#x610F;&#x601D;&#x3002;&#x81F3;&#x4E8E;&#x6838;&#x5FC3;&#x6E90;&#x4EE3;&#x7801;&#x5219;&#x5EFA;&#x8BAE;&#x653E;&#x7F6E;&#x5230; /usr/src/linux/ &#x76EE;&#x5F55;&#x4E0B;&#x3002; &#x4E09;. /var &#x7684;&#x610F;&#x4E49;&#x4E0E;&#x5185;&#x5BB9;&#xFF1A;&#x5982;&#x679C; /usr &#x662F;&#x5B89;&#x88C5;&#x65F6;&#x4F1A;&#x5360;&#x7528;&#x8F83;&#x5927;&#x786C;&#x76D8;&#x5BB9;&#x91CF;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x90A3;&#x4E48; /var &#x5C31;&#x662F;&#x5728;&#x7CFB;&#x7EDF;&#x8FD0;&#x4F5C;&#x540E;&#x624D;&#x4F1A;&#x6E10;&#x6E10;&#x5360;&#x7528;&#x786C;&#x76D8;&#x5BB9;&#x91CF;&#x7684;&#x76EE;&#x5F55;&#x3002;&#x56E0;&#x4E3A; /var &#x76EE;&#x5F55;&#x4E3B;&#x8981;&#x9488;&#x5BF9;&#x5E38;&#x6001;&#x6027;&#x53D8;&#x52A8;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5305;&#x62EC;&#x7F13;&#x5B58;&#xFF08;cache&#xFF09;&#xFF0C;&#x767B;&#x9646;&#x6587;&#x4EF6;&#xFF08;log file&#xFF09;&#x4EE5;&#x53CA;&#x67D0;&#x4E9B;&#x8F6F;&#x4EF6;&#x8FD0;&#x4F5C;&#x65F6;&#x6240;&#x4EA7;&#x751F;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5305;&#x62EC;&#x7A0B;&#x5E8F;&#x6587;&#x4EF6;&#xFF08;lock file&#xFF0C; run file&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x4F8B;&#x5982; MySQL &#x6570;&#x636E;&#x5E93;&#x7684;&#x6587;&#x4EF6;&#x7B49;&#x7B49;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x4E0B;&#x7EA7;&#x76EE;&#x5F55;&#x5982;&#x4E0B;&#xFF1A; &#x76EE;&#x5F55; &#x5E94;&#x653E;&#x7F6E;&#x6587;&#x4EF6;&#x5185;&#x5BB9; /var/cache/ &#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x672C;&#x8EAB;&#x8FD0;&#x4F5C;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x4EA7;&#x751F;&#x7684;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x6682;&#x5B58;&#x76EE;&#x5F55; /var/lib/ &#x7A0B;&#x5E8F;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5230;&#x7684;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x653E;&#x7F6E;&#x7684;&#x76EE;&#x5F55;&#x3002;&#x5728;&#x6B64;&#x76EE;&#x5F55;&#x4E0B;&#x5404;&#x81EA;&#x7684;&#x8F6F;&#x4EF6;&#x5E94;&#x8BE5;&#x6709;&#x5404;&#x81EA;&#x7684;&#x76EE;&#x5F55;&#x3002;&#x4E3E;&#x4F8B;&#x6765;&#x8BF4;&#xFF0C;MySQL &#x7684;&#x6570;&#x636E;&#x5E93;&#x653E;&#x7F6E;&#x5230; /var/lib/mysql/ &#x800C; rpm &#x7684;&#x6570;&#x636E;&#x5E93;&#x5219;&#x653E;&#x5230; /var/lib/rpm/ &#x53BB;&#x3002; /var/lock/ &#x67D0;&#x4E9B;&#x88C5;&#x7F6E;&#x6216;&#x8005;&#x6587;&#x4EF6;&#x8D44;&#x6E90;&#x4E00;&#x6B21;&#x53EA;&#x80FD;&#x88AB;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6240;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x540C;&#x65F6;&#x6709;&#x4E24;&#x4E2A;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x8BE5;&#x88C5;&#x7F6E;&#x65F6;&#xFF0C;&#x5C31;&#x53EF;&#x80FD;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x9519;&#x8BEF;&#x7684;&#x72B6;&#x51B5;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x5F97;&#x8981;&#x5C06;&#x8BE5;&#x88C5;&#x7F6E;&#x4E0A;&#x9501;&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x8BE5;&#x88C5;&#x7F6E;&#x53EA;&#x4F1A;&#x7ED9;&#x5355;&#x4E00;&#x8F6F;&#x4EF6;&#x6240;&#x4F7F;&#x7528;&#x3002;&#x4E3E;&#x4F8B;&#x6765;&#x8BF4;&#xFF0C;&#x523B;&#x5F55;&#x673A;&#x6B63;&#x5728;&#x523B;&#x5F55;&#x4E00;&#x5757;&#x5149;&#x76D8;&#xFF0C;&#x4F60;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x4F1A;&#x4E0D;&#x4F1A;&#x6709;&#x4E24;&#x4E2A;&#x4EBA;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x523B;&#x5F55;&#x673A;&#x70E7;&#x7247;&#xFF1F;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x4EBA;&#x540C;&#x65F6;&#x523B;&#x5F55;&#xFF0C;&#x90A3;&#x7247;&#x5B50;&#x5199;&#x5165;&#x7684;&#x65F6;&#x8C01;&#x7684;&#x6570;&#x636E;&#xFF1F;&#x6240;&#x4EE5;&#x5F53;&#x7B2C;&#x4E00;&#x4E2A;&#x4EBA;&#x5728;&#x523B;&#x5F55;&#x65F6;&#x8BE5;&#x523B;&#x5F55;&#x673A;&#x5C31;&#x4F1A;&#x88AB;&#x4E0A;&#x9501;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x4EBA;&#x5C31;&#x5F97;&#x8981;&#x7B49;&#x8BE5;&#x88C5;&#x7F6E;&#x89E3;&#x9664;&#x9501;&#x5B9A;&#x624D;&#x80FD;&#x591F;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x3002; /var/log/ &#x975E;&#x5E38;&#x91CD;&#x8981;&#x3002;&#x8FD9;&#x662F;&#x767B;&#x9646;&#x6587;&#x4EF6;&#x653E;&#x7F6E;&#x7684;&#x76EE;&#x5F55;&#x3002;&#x91CC;&#x9762;&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x5982; /var/log/messages&#xFF0C; /var/log/wtmp &#xFF08;&#x8BB0;&#x5F55;&#x767B;&#x5165;&#x8005;&#x7684;&#x4FE1;&#x606F;&#xFF09;&#x7B49;&#x3002; /var/mail/ &#x653E;&#x7F6E;&#x4E2A;&#x4EBA;&#x7535;&#x5B50;&#x90AE;&#x4EF6;&#x4FE1;&#x7BB1;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4E0D;&#x8FC7;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E5F;&#x88AB;&#x653E;&#x7F6E;&#x5230; /var/spool/mail/ &#x76EE;&#x5F55;&#x4E2D;&#xFF0C;&#x901A;&#x5E38;&#x8FD9;&#x4E24;&#x4E2A;&#x76EE;&#x5F55;&#x662F;&#x4E92;&#x4E3A;&#x94FE;&#x63A5;&#x6587;&#x4EF6;&#x3002; /var/run/ &#x67D0;&#x4E9B;&#x7A0B;&#x5E8F;&#x6216;&#x8005;&#x662F;&#x670D;&#x52A1;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x4F1A;&#x5C06;&#x4ED6;&#x4EEC;&#x7684;PID&#x653E;&#x7F6E;&#x5728;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B; /var/spool/ &#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x901A;&#x5E38;&#x653E;&#x7F6E;&#x4E00;&#x4E9B;&#x961F;&#x5217;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x8C13;&#x7684;&#x201C;&#x961F;&#x5217;&#x201D;&#x5C31;&#x662F;&#x6392;&#x961F;&#x7B49;&#x5F85;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x88AB;&#x4F7F;&#x7528;&#x540E;&#x901A;&#x5E38;&#x90FD;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#x3002;&#x4E3E;&#x4F8B;&#x6765;&#x8BF4;&#xFF0C;&#x7CFB;&#x7EDF;&#x6536;&#x5230;&#x4FE1;&#x606F;&#x4F1A;&#x653E;&#x7F6E;&#x5230; /var/spool/mail &#x4E2D;&#xFF0C;&#x4F46;&#x4F7F;&#x7528;&#x8005;&#x6536;&#x4E0B;&#x8BE5;&#x4FE1;&#x4EF6;&#x540E;&#x8BE5;&#x5C01;&#x4FE1;&#x539F;&#x5219;&#x4E0A;&#x5C31;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#x3002;&#x4FE1;&#x4EF6;&#x5982;&#x679C;&#x662F;&#x6682;&#x65F6;&#x5BC4;&#x4E0D;&#x51FA;&#x53BB;&#x5C31;&#x4F1A;&#x88AB;&#x653E;&#x5230; /var/spool/mqueue/ &#x4E2D;&#xFF0C;&#x7B49;&#x5230;&#x88AB;&#x9001;&#x51FA;&#x53BB;&#x540E;&#x5C31;&#x88AB;&#x5220;&#x9664;&#x3002;&#x5982;&#x679C;&#x662F;&#x5DE5;&#x4F5C;&#x6392;&#x7A0B;&#x6570;&#x636E;&#xFF08;crontab&#xFF09;&#xFF0C;&#x5C31;&#x4F1A;&#x88AB;&#x653E;&#x7F6E;&#x5230; /var/spool/cron/ &#x76EE;&#x5F55;&#x4E2D;&#x3002; &#x7531;&#x4E8E;FHS&#x4EC5;&#x662F;&#x5B9A;&#x4E49;&#x51FA;&#x6700;&#x4E0A;&#x5C42; &#xFF08; / &#xFF09;&#x53CA;&#x6B21;&#x5C42;&#xFF08; /usr&#xFF0C; /var &#xFF09;&#x7684;&#x76EE;&#x5F55;&#x5185;&#x5BB9;&#x5E94;&#x8BE5;&#x8981;&#x653E;&#x7F6E;&#x7684;&#x6587;&#x4EF6;&#x6216;&#x76EE;&#x5F55;&#x6570;&#x636E;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x5176;&#x4ED6;&#x6B21;&#x76EE;&#x5F55;&#x5C42;&#x7EA7;&#x5185;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x968F;&#x5F00;&#x53D1;&#x8005;&#x81EA;&#x884C;&#x6765;&#x914D;&#x7F6E;&#x4E86;&#x3002; &#x56DB;. &#x76EE;&#x5F55;&#x6811;&#xFF1A;&#x5728; Linux &#x5E95;&#x4E0B;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x6587;&#x4EF6;&#x4E0E;&#x76EE;&#x5F55;&#x90FD;&#x662F;&#x90FD;&#x662F;&#x7531;&#x6839;&#x76EE;&#x5F55;&#x5F00;&#x59CB;&#x7684;&#x3002;&#x90A3;&#x662F;&#x6240;&#x6709;&#x76EE;&#x5F55;&#x6709;&#x6587;&#x4EF6;&#x7684;&#x6E90;&#x5934;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x7684;&#x5206;&#x652F;&#x4E0B;&#x6765;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x79F0;&#x8FD9;&#x79CD;&#x76EE;&#x5F55;&#x914D;&#x7F6E;&#x65B9;&#x5F0F;&#x4E3A;&#xFF1A;&#x76EE;&#x5F55;&#x6811;&#xFF08;directory tree&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x6811;&#x7684;&#x4E3B;&#x8981;&#x7279;&#x6027;&#x6709;&#xFF1A; &#x76EE;&#x5F55;&#x6811;&#x7684;&#x8D77;&#x59CB;&#x70B9;&#x4E3A;&#x6839;&#x76EE;&#x5F55;&#xFF08; /&#xFF0C; root&#xFF09;&#xFF1B; &#x6BCF;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x4E0D;&#x6B62;&#x80FD;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x7AEF;&#x7684; partition &#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7F51;&#x7EDC;&#x4E0A;&#x7684; filesystem&#x3002;&#x4E3E;&#x4F8B;&#x6765;&#x8BF4;&#xFF0C;&#x53EF;&#x4EE5;&#x5229;&#x7528; Network File System (NFS) &#x670D;&#x52A1;&#x5668;&#x6302;&#x8F7D;&#x67D0;&#x7279;&#x5B9A;&#x76EE;&#x5F55;&#x7B49;&#x3002; &#x6BCF;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5728;&#x6B21;&#x76EE;&#x5F55;&#x6811;&#x4E2D;&#x7684;&#x6587;&#x4EF6;&#x540D;(&#x5305;&#x542B;&#x5B8C;&#x6574;&#x8DEF;&#x5F84;)&#x90FD;&#x662F;&#x72EC;&#x4E00;&#x65E0;&#x4E8C;&#x7684;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;&#x6574;&#x4E2A;&#x76EE;&#x5F55;&#x6811;&#x4EE5;&#x56FE;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x663E;&#x793A;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x8F83;&#x4E3A;&#x91CD;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x6570;&#x636E;&#x5217;&#x51FA;&#x6765;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x76EE;&#x5F55;&#x6811;&#x67B6;&#x6784;&#x5C31;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A; L2Dwidget.init({});]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vim Editor Assistant]]></title>
    <url>%2F2018%2F03%2F22%2Fvim_Editor_Assistant%2F</url>
    <content type="text"><![CDATA[Start vi Editor12vi file// Opens &apos;file&apos; in vi, or creates a file named &apos;file&apos; if it does not exist. 12vi file1 file2// Opens files sequentially. 12view file// OPens &apos;file&apos; in read-only mode. 12vi -R file// Opens &apos;file&apos; in read-only mode. 12vi -r file// Recovers &apos;file&apos; after system crash. 12vi + file// Opens &apos;file&apos; at last line. Exit vi Editor12ZZ// Saves changes and exits. 12:x// Saves changes and exits. 12:wq// Saves changes and exits. 12:w// Saves changes. 12:q// Quit. 12:q!// Quit without saving changes. 12:wq file// Saves as &apos;file&apos; and exits. Insert, append12i// Insert text before cursor. 12I// Insert text at beginning of current line. 12a// Append text after cursor. 12A// Append text at the end of current line. 12o// Open and insert text in new line below current line. 12O// Open and insert text ine new line above current line. 12r// Replace single character at cursor position. 12R// Replace multiple character starting with character at cursor position. 12s// Substitute a single character. 12S// Substitute entire line. Delete12x// Deletes a single character at cursor position. 12X// Deletes a single character before cursor positon. 12dw// Deletes from cursor position to next word. 12dd// Deletes entire line cursor is on. 12D// Deletes remainder of line, starting at cursor position. 12[Ctrl] u// Deletes from cursor to beginning of line. 12d$// Deletes from cursor to end of line. 12d^// Deletes to first character in line, preserving indentation. 12ndd// Deletes n number of lines (2dd deletes 2 lines). 12nx// Deletes n number of characters, starting with character under cursor (2x deletes 2 characters). Yank, Copy12yw// Yank word. 12yy// Yank current line. 12:y// Yank current line. 12y^// Yank from cursor to first character of line. 12y0// Yank from cursor to beginning of line. 12y$// Yank from cursor to end of line. 12Y// Yank current line. 12nyy or nY// Yank n number of lines (2yy or 2Y copies 2lines). Paste12p// Paste after cursor. 12P// Paste before cursor. ###Search 12/word// Search forward for &apos;word&apos;. 12?// Repeats previous &apos;/&apos; search. 12n// Repeat last search in same direction. 12N// Repeat last search in opposite direction. 12*// Search forward for word under the cursor. 12#// Search backward for word under the cursor. 12fx// Search forward for next &apos;x&apos; on same line. 12Fx// Search backward for previous &apos;x&apos; on same line. 12tx// Search forwark for character before next &apos;x&apos;. 12Tx// Search backward for character after previous &apos;x&apos; on same line. Move cursor12H// Move to highest visible line on screen (top line). 12M// Move to middle of screen (center). 12L// Move to lowest visible line on screen (bottom line). 12l // Move right. 12h// Move left. 12KMove up. 12jMove down. 12^ // Move to first character on current line. 12$// Move to last column on current line. 120// Move to first column on current line. 12+// Move to first character on next line. 12-// Move to first character on previous line 12w// Move to beginning of next word. 12b// Move to beginning of previous word. 12345(// Move to beginning of current sentence.)// Move to beginning of next sentence. 12345{// Move a paragraph back.}// Move a paragraph forward. 12345G// Move to first character on last line.gg// Move to first character on first line. Move screen1234567891011121314151617[Ctrl] d// Move backward half screen.[Ctrl] f// Move backward full screen.[Ctrl] u// Move forword half screen.[Ctrl] b// Move forward full screen.[Ctrl] e// Move up one line.[Ctrl] y// Move down one line. 12345G// Move to last line in file.nG// Move to n number line. Other12.// Repeat last edit command. 12345u// Undo last change.U// Undo all changes on line. 12[Ctrl] g// Show current filename and line count. 12:f// Show current filename and line count. 12:f filename// Rename current file to &apos;filename&apos;. 12:cd dirname// Change directory to &apos;dirname&apos;. 12~// Change character case. 12:.=// Show current line number. 12:=// Show total number of lines. L2Dwidget.init({});]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git 常用命令]]></title>
    <url>%2F2018%2F03%2F22%2FGit_%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[&#x521D;&#x59CB;&#x5316;&#x5F00;&#x59CB;&#x547D;&#x4EE4;123git init&#x6216;&#x8005;git clone url &#x914D;&#x7F6E;&#x547D;&#x4EE4;123456git config --global color.ui truegit config --global push.default currentgit config --global core.editor vimgit config --global user.name &quot;~~&quot;git config --global user.email &quot;~~@~~.com&quot;git config --global diff.tool meld &#x672C;&#x5730;&#x5206;&#x652F;&#x7BA1;&#x7406;&#x547D;&#x4EE4;1234567891011121314151617181920212223242526272829303132333435363738// &#x67E5;&#x770B;&#x672C;&#x5730;&#x5206;&#x652F;&#x5217;&#x8868;git branch true// &#x5207;&#x6362;&#x5230;branchname&#x672C;&#x5730;&#x5206;&#x652F; git checkout branchname // checkout&#x5F53;&#x524D;&#x5206;&#x652F;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x5206;&#x652F;&#xFF0C;&#x547D;&#x540D;&#x4E3A;new_branch_name git checkout -b new_branch_name // &#x5C06;&#x5F53;&#x524D;&#x5206;&#x652F;&#x5408;&#x5E76;&#x5230;branchname&#x5206;&#x652F;&#x4E2D;git merge branchname// &#x67E5;&#x770B;&#x6240;&#x6709; commitsgit log// &#x67E5;&#x770B;&#x5F53;&#x524D;&#x5206;&#x652F;&#x7684;&#x72B6;&#x6001;git status// &#x6DFB;&#x52A0;&#x5DF2;&#x4FEE;&#x6539;&#x7684;filename&#x6587;&#x4EF6;&#x5230;&#x6682;&#x5B58;&#x533A;git add filename// &#x6DFB;&#x52A0;&#x6240;&#x6709;&#x5DF2;&#x4FEE;&#x6539;&#x7684;&#x6587;&#x4EF6;&#x5230;&#x6682;&#x5B58;&#x533A;git add .// Tell git not to track file anymoregit rm filename// &#x5C06;&#x4EE5;&#x6DFB;&#x52A0;&#x5728;&#x6682;&#x5B58;&#x533A;&#x7684;&#x6587;&#x4EF6;&#x63D0;&#x4EA4;&#x5230;&#x50A8;&#x5B58;&#x533A;git commit// &#x5C06;&#x4EE5;&#x6DFB;&#x52A0;&#x5728;&#x6682;&#x5B58;&#x533A;&#x7684;&#x6587;&#x4EF6;&#x63D0;&#x4EA4;&#x5230;&#x50A8;&#x5B58;&#x533A;&#xFF0C;&#x5E76;&#x63D0;&#x4EA4;commit messagegit commit -m &quot;Some commit message&quot;// &#x67E5;&#x770B;&#x5F53;&#x524D;&#x7684;&#x6539;&#x53D8;&#x4E0E;&#x4E0A;&#x6B21;commit&#x7684;&#x533A;&#x522B;git diff// Compare current branch to some other branchgit diff branch_name &#x8FDC;&#x7A0B;&#x5206;&#x652F;&#x7BA1;&#x7406;&#x547D;&#x4EE4;1234567891011121314// See list of remote repos available.git remote// &#x4ECE;&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;git remote add orgin url// &#x5C06;&#x5F53;&#x524D;&#x5206;&#x652F;&#x63A8;&#x9001;&#x5230;&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;git push// &#x5C06;&#x5F53;&#x524D;&#x5206;&#x652F;&#x63A8;&#x9001;&#x5230;&#x8FDC;&#x7A0B;&#x9879;&#x76EE;&#x7684;master&#x5206;&#x652F;git push orgin master// &#x62C9;&#x53D6;&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;&#x4E2D;&#x7684;&#x4E0E;&#x672C;&#x5730;&#x5206;&#x652F;&#x4E0D;&#x540C;&#x7684;commitgit pull L2Dwidget.init({});]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git 提交信息样式指南]]></title>
    <url>%2F2018%2F03%2F22%2FGit_%E6%8F%90%E4%BA%A4%E4%BF%A1%E6%81%AF%E6%A0%B7%E5%BC%8F%E6%8C%87%E5%8D%97%2F</url>
    <content type="text"><![CDATA[Git &#x63D0;&#x4EA4;&#x4FE1;&#x606F;&#x6837;&#x5F0F;&#x6307;&#x5357;&#x7B80;&#x4ECB;&#x8BE5;&#x6307;&#x5357;&#x662F;&#x4F60;&#x5728;&#x9879;&#x76EE;&#x8FDB;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x6240;&#x9700;&#x9075;&#x5B88;&#x7684;&#x5B98;&#x65B9;&#x6307;&#x5357;&#x3002;&#x4F18;&#x8FBE;&#x5B66;&#x57CE;&#x7684;&#x8BC4;&#x4F30;&#x4EBA;&#x5458;&#x4F1A;&#x6839;&#x636E;&#x8BE5;&#x6307;&#x5357;&#x4E3A;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x6253;&#x5206;&#x3002;&#x5728;&#x524D;&#x7AEF;&#x7F51;&#x9875;&#x5F00;&#x53D1;&#x7684;&#x4E16;&#x754C;&#x4E2D;&#xFF0C;&#x6709;&#x5F88;&#x201C;&#x6700;&#x4F73;&#x201D;&#x6837;&#x5F0F;&#x4F9B;&#x4F60;&#x9009;&#x62E9;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x5B66;&#x751F;&#x5728;&#x9879;&#x76EE;&#x8FC7;&#x7A0B;&#x4E2D;&#x56E0;&#x9009;&#x62E9;&#x4F55;&#x79CD;&#x6837;&#x5F0F;&#x6240;&#x4EA7;&#x751F;&#x7684;&#x56F0;&#x60D1;&#xFF0C;&#x6211;&#x4EEC;&#x5F3A;&#x70C8;&#x5EFA;&#x8BAE;&#x6240;&#x6709;&#x5B66;&#x751F;&#x5728;&#x5176;&#x9879;&#x76EE;&#x4E2D;&#x9075;&#x5FAA;&#x8FD9;&#x4E2A;&#x6837;&#x5F0F;&#x6307;&#x5357;&#x3002;&#x63D0;&#x4EA4;&#x4FE1;&#x606F; &#x4FE1;&#x606F;&#x7ED3;&#x6784;&#x63D0;&#x4EA4;&#x4FE1;&#x606F;&#x7531;&#x4E09;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x90E8;&#x5206;&#x6784;&#x6210;&#xFF0C;&#x8FD9;&#x4E9B;&#x90E8;&#x5206;&#x5747;&#x7531;&#x7A7A;&#x884C;&#x5206;&#x9694;&#xFF1A;&#x6807;&#x9898;&#x3001;&#x53EF;&#x9009;&#x7684;&#x6D88;&#x606F;&#x4F53;&#x548C;&#x53EF;&#x9009;&#x7684;&#x6CE8;&#x91CA;&#x3002;&#x5176;&#x5E03;&#x5C40;&#x5927;&#x81F4;&#x5982;&#x6B64;&#xFF1A; &#x7C7B;&#x578B;&#xFF1A;&#x4E3B;&#x9898;&#x6D88;&#x606F;&#x6B63;&#x6587;&#x6CE8;&#x91CA;&#x6807;&#x9898;&#x7531;&#x6D88;&#x606F;&#x7C7B;&#x578B;&#x548C;&#x4E3B;&#x9898;&#x6784;&#x6210;&#x3002; &#x7C7B;&#x578B;&#x7C7B;&#x578B;&#x4F4D;&#x4E8E;&#x5728;&#x6807;&#x9898;&#x5185;&#xFF0C;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x53EF;&#x80FD;&#xFF1A; feat&#xFF1A; &#x65B0;&#x529F;&#x80FD; fix&#xFF1A;&#x9519;&#x8BEF;&#x4FEE;&#x590D; docs&#xFF1A;&#x6587;&#x6863;&#x4FEE;&#x6539; style&#xFF1A;&#x683C;&#x5F0F;&#x3001;&#x5206;&#x53F7;&#x7F3A;&#x5931;&#x7B49;&#xFF0C;&#x4EE3;&#x7801;&#x65E0;&#x53D8;&#x52A8; refactor&#xFF1A;&#x751F;&#x4EA7;&#x4EE3;&#x7801;&#x91CD;&#x6784; test&#xFF1A;&#x6D4B;&#x8BD5;&#x6DFB;&#x52A0;&#x3001;&#x6D4B;&#x8BD5;&#x91CD;&#x6784;&#x7B49;&#xFF0C;&#x751F;&#x4EA7;&#x4EE3;&#x7801;&#x65E0;&#x53D8;&#x52A8; chore&#xFF1A;&#x6784;&#x5EFA;&#x4EFB;&#x52A1;&#x66F4;&#x65B0;&#x3001;&#x7A0B;&#x5E8F;&#x5305;&#x7BA1;&#x7406;&#x5668;&#x914D;&#x7F6E;&#x7B49;&#xFF0C;&#x751F;&#x4EA7;&#x4EE3;&#x7801;&#x65E0;&#x53D8;&#x52A8;&#x3002; &#x6807;&#x9898;&#x4E3B;&#x9898;&#x4E0D;&#x5F97;&#x8D85;&#x8FC7;50&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x9996;&#x5B57;&#x6BCD;&#x5927;&#x5199;&#xFF0C;&#x672B;&#x5C3E;&#x4E0D;&#x52A0;&#x53E5;&#x53F7;&#x3002;&#x4EE5;&#x7948;&#x4F7F;&#x8BED;&#x6C14;&#x63CF;&#x8FF0;&#x63D0;&#x4EA4;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5176;&#x5DF2;&#x5B8C;&#x6210;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x4F7F;&#x7528; change&#x2026;&#xFF0C;&#x800C;&#x4E0D;&#x662F; changed &#x6216; changes &#x3002; &#x4FE1;&#x606F;&#x6B63;&#x6587;&#x5E76;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x63D0;&#x4EA4;&#x4FE1;&#x606F;&#x90FD;&#x590D;&#x6742;&#x5230;&#x9700;&#x8981;&#x4E3B;&#x4F53;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x662F;&#x53EF;&#x9009;&#x5185;&#x5BB9;&#xFF0C;&#x4EC5;&#x5728;&#x63D0;&#x4EA4;&#x4FE1;&#x606F;&#x9700;&#x8981;&#x4E00;&#x5B9A;&#x7684;&#x89E3;&#x91CA;&#x548C;&#x8BED;&#x5883;&#x65F6;&#x4F7F;&#x7528;&#x3002;&#x6D88;&#x606F;&#x4F53;&#x662F;&#x7528;&#x4E8E;&#x89E3;&#x91CA;&#x63D0;&#x4EA4;&#x4EFB;&#x52A1;&#x7684;&#x5185;&#x5BB9;&#x548C;&#x539F;&#x56E0;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x65B9;&#x6CD5;&#x3002;&#x5728;&#x7F16;&#x5199;&#x6B63;&#x6587;&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x6807;&#x9898;&#x548C;&#x6B63;&#x6587;&#x95F4;&#x52A0;&#x4E00;&#x4E2A;&#x7A7A;&#x884C;&#xFF0C;&#x4E14;&#x6BCF;&#x884C;&#x7684;&#x5185;&#x5BB9;&#x5E94;&#x63A7;&#x5236;&#x5728;72&#x4E2A;&#x5B57;&#x7B26;&#x5185;&#x3002; &#x6CE8;&#x91CA;&#x6CE8;&#x91CA;&#x662F;&#x53EF;&#x9009;&#x5185;&#x5BB9;&#xFF0C;&#x7528;&#x4E8E;&#x5F15;&#x7528;&#x95EE;&#x9898;&#x8DDF;&#x8E2A;&#x7684; ID &#x3002; &#x63D0;&#x4EA4;&#x4FE1;&#x606F;&#x793A;&#x4F8B;Feat: &#x603B;&#x7ED3;&#x53D8;&#x52A8;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4FDD;&#x6301;&#x5728;50&#x4E2A;&#x5B57;&#x7B26;&#x5185;&#x5982;&#x6709;&#x9700;&#x8981;&#xFF0C;&#x4F7F;&#x7528;&#x66F4;&#x8BE6;&#x7EC6;&#x7684;&#x8BF4;&#x660E;&#x6027;&#x6587;&#x5B57;&#xFF0C;&#x5C06;&#x5176;&#x5927;&#x6982;&#x63A7;&#x5236;&#x5728;72&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x5728;&#x90E8;&#x5206;&#x8BED;&#x5883;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E00;&#x884C;&#x88AB;&#x89C6;&#x4E3A;&#x63D0;&#x4EA4;&#x4FE1;&#x606F;&#x7684;&#x4E3B;&#x9898;&#xFF0C;&#x4F59;&#x4E0B;&#x7684;&#x6587;&#x672C;&#x88AB;&#x89C6;&#x4E3A;&#x4E3B;&#x4F53;&#x3002;&#x5206;&#x9694;&#x603B;&#x7ED3;&#x4E0E;&#x4E3B;&#x4F53;&#x7684;&#x7A7A;&#x884C;&#x5341;&#x5206;&#x91CD;&#x8981;&#xFF08;&#x9664;&#x975E;&#x4F60;&#x5B8C;&#x5168;&#x5FFD;&#x7565;&#x4E3B;&#x4F53;&#xFF09;&#xFF1B;&#x5426;&#x5219;log&#x3001;shortlog&#x548C;rebase&#x7B49;&#x591A;&#x4E2A;&#x5DE5;&#x5177;&#x5BB9;&#x6613;&#x53D1;&#x751F;&#x6DF7;&#x6DC6;&#x3002;&#x89E3;&#x91CA;&#x8BE5;&#x63D0;&#x4EA4;&#x4FE1;&#x606F;&#x6240;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x8BF4;&#x660E;&#x4F60;&#x8FDB;&#x884C;&#x8BE5;&#x53D8;&#x52A8;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x65B9;&#x6CD5;&#xFF08;&#x4EE3;&#x7801;&#x672C;&#x8EAB;&#x53EF;&#x4EE5;&#x89E3;&#x91CA;&#x65B9;&#x6CD5;&#xFF09;&#x3002;&#x8BE5;&#x53D8;&#x52A8;&#x662F;&#x5426;&#x5B58;&#x5728;&#x526F;&#x4F5C;&#x7528;&#x6216;&#x5176;&#x4ED6;&#x76F4;&#x89C9;&#x6027;&#x540E;&#x679C;&#xFF1F;&#x5728;&#x8FD9;&#x91CC;&#x8FDB;&#x884C;&#x89E3;&#x91CA;&#x3002;&#x540E;&#x7EED;&#x6BB5;&#x843D;&#x524D;&#x9700;&#x52A0;&#x7A7A;&#x884C;&#x3002;&#x53EF;&#x4EE5;&#x5217;&#x51FA;&#x8981;&#x70B9; &#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8981;&#x70B9;&#x4F1A;&#x4F7F;&#x7528;&#x7A7A;&#x683C;&#x52A0;&#x4E0A;&#x8FDE;&#x5B57;&#x7B26;&#x6216;&#x661F;&#x53F7;&#xFF0C;&#x4E2D;&#x95F4;&#x7528;&#x7A7A;&#x884C;&#x5206;&#x9694;&#xFF0C;&#x4F46;&#x8BE5;&#x89C4;&#x5B9A;&#x5B58;&#x5728;&#x5DEE;&#x522B;&#x3002;&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;&#x95EE;&#x9898;&#x8FFD;&#x8E2A;&#xFF0C;&#x5C06;&#x5176;&#x5F15;&#x7528;&#x653E;&#x5728;&#x672B;&#x5C3E;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x89E3;&#x51B3;&#x4E86;&#x95EE;&#x9898;&#xFF1A;#123&#x53E6;&#x89C1;&#xFF1A;#456, #789 L2Dwidget.init({});]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment L2Dwidget.init({});]]></content>
  </entry>
</search>
